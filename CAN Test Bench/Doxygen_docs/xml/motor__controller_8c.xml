<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="motor__controller_8c" kind="file" language="C++">
    <compoundname>motor_controller.c</compoundname>
    <includes refid="motor__controller_8h" local="yes">motor_controller.h</includes>
    <includes refid="can_8h" local="yes">can.h</includes>
    <includes refid="main_8h" local="yes">main.h</includes>
    <includes refid="constants_8h" local="yes">constants.h</includes>
    <includes refid="pdu_8h" local="yes">pdu.h</includes>
    <incdepgraph>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="13">
        <label>tim.h</label>
        <link refid="tim_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>imd.h</label>
        <link refid="imd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>dash.h</label>
        <link refid="dash_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>driving_loop.h</label>
        <link refid="driving__loop_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>temp_monitoring.h</label>
        <link refid="temp__monitoring_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>stdint.h</label>
      </node>
      <node id="33">
        <label>stdlib.h</label>
      </node>
      <node id="28">
        <label>oled.h</label>
        <link refid="oled_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>adc.h</label>
        <link refid="adc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cmsis_os.h</label>
      </node>
      <node id="6">
        <label>uvfr_utils.h</label>
        <link refid="uvfr__utils_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>message_buffer.h</label>
      </node>
      <node id="22">
        <label>bms.h</label>
        <link refid="bms_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Core/Src/motor_controller.c</label>
        <link refid="motor__controller_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>spi.h</label>
        <link refid="spi_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>pdu.h</label>
        <link refid="pdu_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>motor_controller.h</label>
        <link refid="motor__controller_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>uvfr_settings.h</label>
        <link refid="uvfr__settings_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>daq.h</label>
        <link refid="daq_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>gpio.h</label>
        <link refid="gpio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>rb_tree.h</label>
        <link refid="rb__tree_8h"/>
      </node>
      <node id="11">
        <label>constants.h</label>
        <link refid="constants_8h"/>
      </node>
      <node id="10">
        <label>can.h</label>
        <link refid="can_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>uvfr_global_config.h</label>
        <link refid="uvfr__global__config_8h"/>
      </node>
      <node id="31">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
      </node>
      <node id="23">
        <label>uvfr_state_engine.h</label>
        <link refid="uvfr__state__engine_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>odometer.h</label>
        <link refid="odometer_8h"/>
      </node>
      <node id="4">
        <label>stm32f4xx_hal.h</label>
      </node>
      <node id="16">
        <label>FreeRTOS.h</label>
      </node>
      <node id="12">
        <label>dma.h</label>
        <link refid="dma_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>task.h</label>
      </node>
      <node id="3">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="motor__controller_8c_1a26195bc72f07eeb97338e761432e03d2" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t MC_Expected_Serial_Number</definition>
        <argsstring></argsstring>
        <name>MC_Expected_Serial_Number</name>
        <initializer>= 0x627E7A01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="17" column="16" bodyfile="Core/Src/motor_controller.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="motor__controller_8c_1a8f25ebbc9bf59980fdc0458f271437ee" prot="public" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t MC_Expected_FW_Version</definition>
        <argsstring></argsstring>
        <name>MC_Expected_FW_Version</name>
        <initializer>= 0xDC01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="18" column="16" bodyfile="Core/Src/motor_controller.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="motor__controller_8c_1a347eaa173dae5d48ae87a4bc5532adfc" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t max_motor_speed</definition>
        <argsstring></argsstring>
        <name>max_motor_speed</name>
        <initializer>= 3277</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="21" column="16" bodyfile="Core/Src/motor_controller.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="motor__controller_8c_1a4ace1e40a5ea83b51078f64f9c777e3f" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t desired_motor_speed[2]</definition>
        <argsstring>[2]</argsstring>
        <name>desired_motor_speed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="22" column="9" bodyfile="Core/Src/motor_controller.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="motor__controller_8c_1afa93c7b7fa3dc12bd6bf860c54c564ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MC_Parse_Message</definition>
        <argsstring>(int DLC, uint8_t Data[])</argsstring>
        <name>MC_Parse_Message</name>
        <param>
          <type>int</type>
          <declname>DLC</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>Data</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="26" column="6" bodyfile="Core/Src/motor_controller.c" bodystart="26" bodyend="44"/>
        <references refid="main_8h_1a1730ffe1e560465665eb47d9264826f9" compoundref="main_8c" startline="378" endline="388">Error_Handler</references>
        <references refid="motor__controller_8c_1a40bf1b849ad7443bbe8af342006bb3cd" compoundref="motor__controller_8c" startline="122" endline="246">MC_Check_Error_Warning</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa595211bb6640ca05c1c3344b47e2890f" compoundref="motor__controller_8h" startline="71">motor_controller_errors_warnings</references>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MC_Request_Data</definition>
        <argsstring>(uint8_t RegID)</argsstring>
        <name>MC_Request_Data</name>
        <param>
          <type>uint8_t</type>
          <declname>RegID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="47" column="6" bodyfile="Core/Src/motor_controller.c" bodystart="47" bodyend="60"/>
        <references refid="main_8h_1a1730ffe1e560465665eb47d9264826f9" compoundref="main_8c" startline="378" endline="388">Error_Handler</references>
        <references refid="can_8h_1ab77168d14df04ccca5d48612ee21ced8" compoundref="can_8c" startline="116">hcan2</references>
        <references refid="constants_8h_1a1d489aa29fe8cf552f71b550e8088272ada3b10f39c76a2dc2b19e9f5b02952a5" compoundref="constants_8h" startline="19">MC_CAN_ID_Tx</references>
        <references refid="constants_8h_1af553c31425b32bd9c020380c942ed3bd" compoundref="constants_8c" startline="7">TxData</references>
        <references refid="constants_8h_1a3e35a666d459f2ac92fc7c35334ff0ff" compoundref="constants_8c" startline="4">TxHeader</references>
        <references refid="constants_8h_1aedd1e4ac418a9697f9f41a2713d49569" compoundref="constants_8c" startline="8">TxMailbox</references>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1af2e573366a03a695a8ba760440848206" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MC_Send_Data</definition>
        <argsstring>(uint8_t RegID, uint8_t data_to_send[], uint8_t size)</argsstring>
        <name>MC_Send_Data</name>
        <param>
          <type>uint8_t</type>
          <declname>RegID</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>data_to_send</declname>
          <array>[]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="69" column="6" bodyfile="Core/Src/motor_controller.c" bodystart="69" bodyend="98"/>
        <references refid="main_8h_1a1730ffe1e560465665eb47d9264826f9" compoundref="main_8c" startline="378" endline="388">Error_Handler</references>
        <references refid="can_8h_1ab77168d14df04ccca5d48612ee21ced8" compoundref="can_8c" startline="116">hcan2</references>
        <references refid="constants_8h_1a1d489aa29fe8cf552f71b550e8088272ada3b10f39c76a2dc2b19e9f5b02952a5" compoundref="constants_8h" startline="19">MC_CAN_ID_Tx</references>
        <references refid="constants_8h_1af553c31425b32bd9c020380c942ed3bd" compoundref="constants_8c" startline="7">TxData</references>
        <references refid="constants_8h_1a3e35a666d459f2ac92fc7c35334ff0ff" compoundref="constants_8c" startline="4">TxHeader</references>
        <references refid="constants_8h_1aedd1e4ac418a9697f9f41a2713d49569" compoundref="constants_8c" startline="8">TxMailbox</references>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1aa7294768824898480b6bcf6e98daa926" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MC_Torque_Control</definition>
        <argsstring>(int todo)</argsstring>
        <name>MC_Torque_Control</name>
        <param>
          <type>int</type>
          <declname>todo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="102" column="6" bodyfile="Core/Src/motor_controller.c" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1a40bf1b849ad7443bbe8af342006bb3cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MC_Check_Error_Warning</definition>
        <argsstring>(uint8_t Data[])</argsstring>
        <name>MC_Check_Error_Warning</name>
        <param>
          <type>uint8_t</type>
          <declname>Data</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="122" column="6" bodyfile="Core/Src/motor_controller.c" bodystart="122" bodyend="246"/>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa0dbc9540bf7a4c67b6a2810985bfb55d" compoundref="motor__controller_8h" startline="86">AC_current_offset_fault</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffac02a9e080dc6bde671fa915b7e254c67" compoundref="motor__controller_8h" startline="105">ADC_measurement_problem</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa9c77d3a416d8465efe129cf8ad401cfe" compoundref="motor__controller_8h" startline="104">ADC_sequencer_problem</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa03e3fe1a981eecdeb19cd0589bdcc6f8" compoundref="motor__controller_8h" startline="94">auxiliary_voltage_min_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa150953c78b7fcc8ae97a50a5b5765264" compoundref="motor__controller_8h" startline="88">bleed_resistor_overload</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffae0c6a82b11d3fb69b758c350960f5a2a" compoundref="motor__controller_8h" startline="106">bleeder_resistor_warning</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa425430d2585733363b6043ed70ebd7ab" compoundref="motor__controller_8h" startline="76">CAN_timeout_error</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa3d2e8b6cb27af4a0a1121c419594bbfa" compoundref="motor__controller_8h" startline="102">check_ecode_ID</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa29aa452fe3c693b96c17c09849ee1633" compoundref="motor__controller_8h" startline="82">critical_AC_current</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa0dd2c6834f96df064d7b152074a9f81f" compoundref="motor__controller_8h" startline="84">ecode_timeout_error</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa87ada8cd125ba521b447d565c12bb30e" compoundref="motor__controller_8h" startline="73">eprom_read_error</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2a16f371b0570edeeb17214a398e4bfc" compoundref="motor__controller_8h" startline="77">feedback_signal_error</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffab6733322e6c8c5197b108e853a58ad13" compoundref="motor__controller_8h" startline="95">feedback_signal_problem</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffae9da794167969482cb67bfad83a04d71" compoundref="motor__controller_8h" startline="74">hardware_fault</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa54a5ca5981535fd231b00a1040622950" compoundref="motor__controller_8h" startline="80">IGBT_temp_max_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa298d28f3aa38960b5d1349a04cbbca95" compoundref="motor__controller_8h" startline="98">IGBT_temperature_warning</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa18df3363e2a0048a813dcef5a41785ce" compoundref="motor__controller_8h" startline="87">internal_hardware_voltage_problem</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa229533ef674ddd4475b22e47eb506b49" compoundref="motor__controller_8h" startline="81">mains_voltage_max_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa13726d0d6fc8dd12135f4ea92d1dcc92" compoundref="motor__controller_8h" startline="78">mains_voltage_min_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2267f6ae60d8b9024ba418dd1f6d4b15" compoundref="motor__controller_8h" startline="79">motor_temp_max_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa4e9b2370bf4b4680b4c2471d2f7d312e" compoundref="motor__controller_8h" startline="97">motor_temperature_warning</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2fbc7fdf1ab20514fac8d6418291a114" compoundref="motor__controller_8h" startline="91">parameter_conflict_detected</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa696b36face7279e19e2905b0fa9ecb68" compoundref="motor__controller_8h" startline="83">race_away_detected</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa3689755161fb5aa5fae86b270bfbf5fc" compoundref="motor__controller_8h" startline="93">rotate_field_enable_not_present_norun</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffadae8b5f4fb6cd6712202d055529499ef" compoundref="motor__controller_8h" startline="75">rotate_field_enable_not_present_run</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa7483be8346bb7b2fdfb418383961fba7" compoundref="motor__controller_8h" startline="92">special_CPU_fault</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2c5d3b1ee0135916f17e89f331429ed5" compoundref="motor__controller_8h" startline="101">speed_actual_resolution_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa618e6f62f2e284a9fec848782c9473c7" compoundref="motor__controller_8h" startline="103">tripzone_glitch_detected</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffaf06c0a389c1c73850def361e9bd7ffdc" compoundref="motor__controller_8h" startline="99">Vout_saturation_max_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa3050ef440e4e82f9fb3973e1fb9faea7" compoundref="motor__controller_8h" startline="96">warning_5</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffad53242de6aeaa134a78749bc60fec984" compoundref="motor__controller_8h" startline="100">warning_9</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa357611869a1ec791b38a36ec2dfe09b9" compoundref="motor__controller_8h" startline="85">watchdog_reset</references>
        <referencedby refid="motor__controller_8c_1afa93c7b7fa3dc12bd6bf860c54c564ee" compoundref="motor__controller_8c" startline="26" endline="44">MC_Parse_Message</referencedby>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1ac592ffd65d2793aadca7ca158a3d2dbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MC_Validate</definition>
        <argsstring>()</argsstring>
        <name>MC_Validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="248" column="6" bodyfile="Core/Src/motor_controller.c" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1af34e05da8add9233de12150656dad092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MC_Check_Serial_Number</definition>
        <argsstring>(uint8_t Data[])</argsstring>
        <name>MC_Check_Serial_Number</name>
        <param>
          <type>uint8_t</type>
          <declname>Data</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="252" column="6" bodyfile="Core/Src/motor_controller.c" bodystart="252" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1a877a1b68c89c7eeecc3ed294e5dc8a73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MC_Check_Firmware</definition>
        <argsstring>(uint8_t Data[])</argsstring>
        <name>MC_Check_Firmware</name>
        <param>
          <type>uint8_t</type>
          <declname>Data</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="256" column="6" bodyfile="Core/Src/motor_controller.c" bodystart="256" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1aed1407e1e0fd59dc7c5e5d6db671f0ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MC_Startup</definition>
        <argsstring>(void *args)</argsstring>
        <name>MC_Startup</name>
        <param>
          <type>void *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="260" column="6" bodyfile="Core/Src/motor_controller.c" bodystart="260" bodyend="292"/>
        <references refid="structuv__init__task__args_1adec47e7a54822cacfb8fcfc35a22157f" compoundref="uvfr__utils_8h" startline="316">uv_init_task_args::init_info_queue</references>
        <references refid="structuv__init__task__args_1a3b81430245e7f832dc1112e53b0ef7ad" compoundref="uvfr__utils_8h" startline="317">uv_init_task_args::meta_task_handle</references>
        <references refid="uvfr__utils_8h_1ad70cbc8929c4ad7a5901cd9eef5ca9b0a9c632ecb370b78547a390d1b5cf59671" compoundref="uvfr__utils_8h" startline="190">MOTOR_CONTROLLER</references>
        <references refid="structuv__init__task__args_1a61a9b579a1e65a3875a4edf3201a39f3" compoundref="uvfr__utils_8h" startline="315">uv_init_task_args::specific_args</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" compoundref="uvfr__utils_8h" startline="167">UV_OK</references>
        <referencedby refid="uvfr__utils_8c_1a6d40598f9d8daa89ca159a2e87f4fd01" compoundref="uvfr__utils_8c" startline="37" endline="229">uvInit</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>where<sp/>the<sp/>code<sp/>to<sp/>handle<sp/>motor<sp/>controller<sp/>errors<sp/>and<sp/>such<sp/>will<sp/>go</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="motor__controller_8h" kindref="compound">motor_controller.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>include<sp/>can.h<sp/>because<sp/>we<sp/>will<sp/>send<sp/>CAN<sp/>messages<sp/>through<sp/>the<sp/>functions<sp/>in<sp/>that<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>a<sp/>CAN<sp/>message<sp/>comes<sp/>it<sp/>will<sp/>throw<sp/>an<sp/>interrupt<sp/>can.c<sp/>deals<sp/>with<sp/>the<sp/>incoming<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>function<sp/>in<sp/>can.c<sp/>gets<sp/>the<sp/>ID<sp/>and<sp/>sends<sp/>the<sp/>data<sp/>to<sp/>the<sp/>functions<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="can_8h" kindref="compound">can.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="main_8h" kindref="compound">main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="constants_8h" kindref="compound">constants.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>include<sp/>pdu.h<sp/>for<sp/>the<sp/>shutdown<sp/>circuit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pdu_8h" kindref="compound">pdu.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="motor__controller_8c_1a26195bc72f07eeb97338e761432e03d2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="motor__controller_8c_1a26195bc72f07eeb97338e761432e03d2" kindref="member">MC_Expected_Serial_Number</ref><sp/>=<sp/>0x627E7A01;</highlight></codeline>
<codeline lineno="18" refid="motor__controller_8c_1a8f25ebbc9bf59980fdc0458f271437ee" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="motor__controller_8c_1a8f25ebbc9bf59980fdc0458f271437ee" kindref="member">MC_Expected_FW_Version</ref><sp/>=<sp/>0xDC01;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="motor__controller_8c_1a347eaa173dae5d48ae87a4bc5532adfc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="motor__controller_8c_1a347eaa173dae5d48ae87a4bc5532adfc" kindref="member">max_motor_speed</ref><sp/>=<sp/>3277;<sp/></highlight><highlight class="comment">//<sp/>this<sp/>limits<sp/>rpm<sp/>of<sp/>motor<sp/>for<sp/>speed<sp/>control<sp/>setpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="motor__controller_8c_1a4ace1e40a5ea83b51078f64f9c777e3f" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="motor__controller_8c_1a4ace1e40a5ea83b51078f64f9c777e3f" kindref="member">desired_motor_speed</ref>[2];</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="motor__controller_8c_1afa93c7b7fa3dc12bd6bf860c54c564ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1afa93c7b7fa3dc12bd6bf860c54c564ee" kindref="member">MC_Parse_Message</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DLC,<sp/>uint8_t<sp/>Data[]){</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>step<sp/>is<sp/>to<sp/>look<sp/>at<sp/>the<sp/>first<sp/>byte<sp/>to<sp/>figure<sp/>out<sp/>what<sp/>we&apos;re<sp/>looking<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>Need<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>Data[0]<sp/>really<sp/>is<sp/>the<sp/>first<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(Data[0]){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>important<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa595211bb6640ca05c1c3344b47e2890f" kindref="member">motor_controller_errors_warnings</ref>:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="motor__controller_8c_1a40bf1b849ad7443bbe8af342006bb3cd" kindref="member">MC_Check_Error_Warning</ref>(Data);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>code<sp/>that<sp/>is<sp/>not<sp/>recognized<sp/>(bad)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8h_1a1730ffe1e560465665eb47d9264826f9" kindref="member">Error_Handler</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>function<sp/>is<sp/>used<sp/>to<sp/>get<sp/>data<sp/>from<sp/>the<sp/>motor<sp/>controller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" kindref="member">MC_Request_Data</ref>(uint8_t<sp/>RegID){</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="constants_8h_1a3e35a666d459f2ac92fc7c35334ff0ff" kindref="member">TxHeader</ref>.StdId<sp/>=<sp/><ref refid="constants_8h_1a1d489aa29fe8cf552f71b550e8088272ada3b10f39c76a2dc2b19e9f5b02952a5" kindref="member">MC_CAN_ID_Tx</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="constants_8h_1a3e35a666d459f2ac92fc7c35334ff0ff" kindref="member">TxHeader</ref>.DLC<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="constants_8h_1af553c31425b32bd9c020380c942ed3bd" kindref="member">TxData</ref>[0]<sp/>=<sp/>0x3D;<sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>the<sp/>code<sp/>to<sp/>request<sp/>data<sp/>from<sp/>MC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="constants_8h_1af553c31425b32bd9c020380c942ed3bd" kindref="member">TxData</ref>[1]<sp/>=<sp/>RegID;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="constants_8h_1af553c31425b32bd9c020380c942ed3bd" kindref="member">TxData</ref>[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_CAN_AddTxMessage(&amp;<ref refid="can_8h_1ab77168d14df04ccca5d48612ee21ced8" kindref="member">hcan2</ref>,<sp/>&amp;<ref refid="constants_8h_1a3e35a666d459f2ac92fc7c35334ff0ff" kindref="member">TxHeader</ref>,<sp/><ref refid="constants_8h_1af553c31425b32bd9c020380c942ed3bd" kindref="member">TxData</ref>,<sp/>&amp;<ref refid="constants_8h_1aedd1e4ac418a9697f9f41a2713d49569" kindref="member">TxMailbox</ref>)<sp/>!=<sp/>HAL_OK){</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Transmission<sp/>request<sp/>Error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8h_1a1730ffe1e560465665eb47d9264826f9" kindref="member">Error_Handler</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>either<sp/>send<sp/>2<sp/>or<sp/>4<sp/>bytes<sp/>of<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>correspond<sp/>to<sp/>a<sp/>DLC<sp/>of<sp/>3<sp/>or<sp/>5,<sp/>respectively</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>byte<sp/>needs<sp/>to<sp/>be<sp/>the<sp/>register<sp/>ID,<sp/>then<sp/>either<sp/>2<sp/>or<sp/>4<sp/>bytes<sp/>of<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>size<sp/>is<sp/>either<sp/>2<sp/>or<sp/>4<sp/>and<sp/>is<sp/>very<sp/>important</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>motor<sp/>controller<sp/>wants<sp/>0x1234,<sp/>the<sp/>input<sp/>to<sp/>this<sp/>function<sp/>should<sp/>be<sp/>0x1234</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="motor__controller_8c_1af2e573366a03a695a8ba760440848206" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1af2e573366a03a695a8ba760440848206" kindref="member">MC_Send_Data</ref>(uint8_t<sp/>RegID,<sp/>uint8_t<sp/>data_to_send[],<sp/>uint8_t<sp/>size){</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="constants_8h_1a3e35a666d459f2ac92fc7c35334ff0ff" kindref="member">TxHeader</ref>.StdId<sp/>=<sp/><ref refid="constants_8h_1a1d489aa29fe8cf552f71b550e8088272ada3b10f39c76a2dc2b19e9f5b02952a5" kindref="member">MC_CAN_ID_Tx</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="constants_8h_1a3e35a666d459f2ac92fc7c35334ff0ff" kindref="member">TxHeader</ref>.DLC<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="constants_8h_1af553c31425b32bd9c020380c942ed3bd" kindref="member">TxData</ref>[0]<sp/>=<sp/>RegID;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(size){</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="constants_8h_1af553c31425b32bd9c020380c942ed3bd" kindref="member">TxData</ref>[1]<sp/>=<sp/>data_to_send[2];</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="constants_8h_1af553c31425b32bd9c020380c942ed3bd" kindref="member">TxData</ref>[2]<sp/>=<sp/>data_to_send[1];</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="constants_8h_1af553c31425b32bd9c020380c942ed3bd" kindref="member">TxData</ref>[1]<sp/>=<sp/>data_to_send[4];</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="constants_8h_1af553c31425b32bd9c020380c942ed3bd" kindref="member">TxData</ref>[2]<sp/>=<sp/>data_to_send[3];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="constants_8h_1af553c31425b32bd9c020380c942ed3bd" kindref="member">TxData</ref>[3]<sp/>=<sp/>data_to_send[2];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="constants_8h_1af553c31425b32bd9c020380c942ed3bd" kindref="member">TxData</ref>[4]<sp/>=<sp/>data_to_send[1];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_CAN_AddTxMessage(&amp;<ref refid="can_8h_1ab77168d14df04ccca5d48612ee21ced8" kindref="member">hcan2</ref>,<sp/>&amp;<ref refid="constants_8h_1a3e35a666d459f2ac92fc7c35334ff0ff" kindref="member">TxHeader</ref>,<sp/><ref refid="constants_8h_1af553c31425b32bd9c020380c942ed3bd" kindref="member">TxData</ref>,<sp/>&amp;<ref refid="constants_8h_1aedd1e4ac418a9697f9f41a2713d49569" kindref="member">TxMailbox</ref>)<sp/>!=<sp/>HAL_OK){</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Transmission<sp/>request<sp/>Error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8h_1a1730ffe1e560465665eb47d9264826f9" kindref="member">Error_Handler</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>speed/torque<sp/>control<sp/>will<sp/>either<sp/>take<sp/>the<sp/>ADC<sp/>value<sp/>from<sp/>APPSs<sp/>then<sp/>do<sp/>math<sp/>and<sp/>send<sp/>msg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Or<sp/>we&apos;ll<sp/>do<sp/>the<sp/>math<sp/>in<sp/>the<sp/>main<sp/>and<sp/>then<sp/>just<sp/>send<sp/>motor<sp/>controller<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="motor__controller_8c_1aa7294768824898480b6bcf6e98daa926" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1aa7294768824898480b6bcf6e98daa926" kindref="member">MC_Torque_Control</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>todo){</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>figure<sp/>out<sp/>best<sp/>way<sp/>to<sp/>do<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//NGL,<sp/>probably<sp/>want<sp/>these<sp/>in<sp/>driving<sp/>loop<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8h_1a2e1d07308c1e5e2ed72857a078b73cdf" kindref="member">MC_Speed_Control</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ADC_value){</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>verify<sp/>endian<sp/>and<sp/>deal<sp/>with<sp/>source<sp/>of<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>ADC_percentage<sp/>=<sp/>ADC_value<sp/>/<sp/>(0xFFF);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>scaled_motor_speed<sp/>=<sp/>ADC_percentage*<ref refid="motor__controller_8c_1a347eaa173dae5d48ae87a4bc5532adfc" kindref="member">max_motor_speed</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="motor__controller_8c_1a4ace1e40a5ea83b51078f64f9c777e3f" kindref="member">desired_motor_speed</ref>[0]<sp/>=<sp/>(scaled_motor_speed<sp/>&amp;<sp/>0xff00)<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="motor__controller_8c_1a4ace1e40a5ea83b51078f64f9c777e3f" kindref="member">desired_motor_speed</ref>[1]<sp/>=<sp/>scaled_motor_speed<sp/>&amp;<sp/>0x00ff;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="motor__controller_8c_1af2e573366a03a695a8ba760440848206" kindref="member">MC_Send_Data</ref>(<ref refid="motor__controller_8h_1a8cab19f0549eb777404ec1c7a3b56268aa53daf1b53f678af8159cba9238c5e6f" kindref="member">N_set</ref>,<sp/><ref refid="motor__controller_8c_1a4ace1e40a5ea83b51078f64f9c777e3f" kindref="member">desired_motor_speed</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="motor__controller_8c_1a40bf1b849ad7443bbe8af342006bb3cd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1a40bf1b849ad7443bbe8af342006bb3cd" kindref="member">MC_Check_Error_Warning</ref>(uint8_t<sp/>Data[]){</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>motor<sp/>controller<sp/>will<sp/>send<sp/>a<sp/>message<sp/>with<sp/>6<sp/>bytes<sp/>of<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>byte<sp/>is<sp/>the<sp/>register<sp/>ID,<sp/>which<sp/>in<sp/>this<sp/>case<sp/>is<sp/>0x8F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>second<sp/>and<sp/>third<sp/>byte<sp/>are<sp/>low<sp/>bytes<sp/>which<sp/>correspond<sp/>to<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>order<sp/>of<sp/>bits<sp/>in<sp/>the<sp/>low<sp/>bytes<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>7<sp/>6<sp/>5<sp/>4<sp/>3<sp/>2<sp/>1<sp/>0<sp/><sp/>15<sp/>14<sp/>13<sp/>12<sp/>11<sp/>10<sp/>9<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>fourth<sp/>and<sp/>fifth<sp/>bytes<sp/>are<sp/>high<sp/>bytes<sp/>and<sp/>correspond<sp/>to<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>order<sp/>of<sp/>bits<sp/>in<sp/>the<sp/>high<sp/>bytes<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>23<sp/>22<sp/>21<sp/>20<sp/>19<sp/>18<sp/>17<sp/>16<sp/><sp/><sp/>31<sp/>30<sp/>29<sp/>28<sp/>27<sp/>26<sp/>25<sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>and<sp/>the<sp/>bytes<sp/>with<sp/>the<sp/>right<sp/>bitmasks<sp/>and<sp/>check<sp/>for<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Split<sp/>four<sp/>bytes<sp/>into<sp/>2<sp/>high<sp/>and<sp/>2<sp/>low<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>MC_errors<sp/>=<sp/>(Data[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>Data[2];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>MC_warnings<sp/>=<sp/>(Data[3]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>Data[4];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>the<sp/>error<sp/>flags<sp/>should<sp/>be<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors){</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>errors<sp/>to<sp/>errors<sp/>bitmask<sp/>to<sp/>determine<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa87ada8cd125ba521b447d565c12bb30e" kindref="member">eprom_read_error</ref>){</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffae9da794167969482cb67bfad83a04d71" kindref="member">hardware_fault</ref>){</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffadae8b5f4fb6cd6712202d055529499ef" kindref="member">rotate_field_enable_not_present_run</ref>){</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa425430d2585733363b6043ed70ebd7ab" kindref="member">CAN_timeout_error</ref>){</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2a16f371b0570edeeb17214a398e4bfc" kindref="member">feedback_signal_error</ref>){</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa13726d0d6fc8dd12135f4ea92d1dcc92" kindref="member">mains_voltage_min_limit</ref>){</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2267f6ae60d8b9024ba418dd1f6d4b15" kindref="member">motor_temp_max_limit</ref>){</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa54a5ca5981535fd231b00a1040622950" kindref="member">IGBT_temp_max_limit</ref>){</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa229533ef674ddd4475b22e47eb506b49" kindref="member">mains_voltage_max_limit</ref>){</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa29aa452fe3c693b96c17c09849ee1633" kindref="member">critical_AC_current</ref>){</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa696b36face7279e19e2905b0fa9ecb68" kindref="member">race_away_detected</ref>){</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa0dd2c6834f96df064d7b152074a9f81f" kindref="member">ecode_timeout_error</ref>){</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa357611869a1ec791b38a36ec2dfe09b9" kindref="member">watchdog_reset</ref>){</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa0dbc9540bf7a4c67b6a2810985bfb55d" kindref="member">AC_current_offset_fault</ref>){</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa18df3363e2a0048a813dcef5a41785ce" kindref="member">internal_hardware_voltage_problem</ref>){</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa150953c78b7fcc8ae97a50a5b5765264" kindref="member">bleed_resistor_overload</ref>){</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings){</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compare<sp/>warnings<sp/>to<sp/>warnings<sp/>bitmask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2fbc7fdf1ab20514fac8d6418291a114" kindref="member">parameter_conflict_detected</ref>){</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa7483be8346bb7b2fdfb418383961fba7" kindref="member">special_CPU_fault</ref>){</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa3689755161fb5aa5fae86b270bfbf5fc" kindref="member">rotate_field_enable_not_present_norun</ref>){</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa03e3fe1a981eecdeb19cd0589bdcc6f8" kindref="member">auxiliary_voltage_min_limit</ref>){</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffab6733322e6c8c5197b108e853a58ad13" kindref="member">feedback_signal_problem</ref>){</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa3050ef440e4e82f9fb3973e1fb9faea7" kindref="member">warning_5</ref>){</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa4e9b2370bf4b4680b4c2471d2f7d312e" kindref="member">motor_temperature_warning</ref>){</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa298d28f3aa38960b5d1349a04cbbca95" kindref="member">IGBT_temperature_warning</ref>){</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffaf06c0a389c1c73850def361e9bd7ffdc" kindref="member">Vout_saturation_max_limit</ref>){</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffad53242de6aeaa134a78749bc60fec984" kindref="member">warning_9</ref>){</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2c5d3b1ee0135916f17e89f331429ed5" kindref="member">speed_actual_resolution_limit</ref>){</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa3d2e8b6cb27af4a0a1121c419594bbfa" kindref="member">check_ecode_ID</ref><sp/>){</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa618e6f62f2e284a9fec848782c9473c7" kindref="member">tripzone_glitch_detected</ref>){</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa9c77d3a416d8465efe129cf8ad401cfe" kindref="member">ADC_sequencer_problem</ref>){</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffac02a9e080dc6bde671fa915b7e254c67" kindref="member">ADC_measurement_problem</ref>){</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffae0c6a82b11d3fb69b758c350960f5a2a" kindref="member">bleeder_resistor_warning</ref>){</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="motor__controller_8c_1ac592ffd65d2793aadca7ca158a3d2dbc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1ac592ffd65d2793aadca7ca158a3d2dbc" kindref="member">MC_Validate</ref>(){</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="motor__controller_8c_1af34e05da8add9233de12150656dad092" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1af34e05da8add9233de12150656dad092" kindref="member">MC_Check_Serial_Number</ref>(uint8_t<sp/>Data[]){</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="motor__controller_8c_1a877a1b68c89c7eeecc3ed294e5dc8a73" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1a877a1b68c89c7eeecc3ed294e5dc8a73" kindref="member">MC_Check_Firmware</ref>(uint8_t<sp/>Data[]){</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="motor__controller_8c_1aed1407e1e0fd59dc7c5e5d6db671f0ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1aed1407e1e0fd59dc7c5e5d6db671f0ab" kindref="member">MC_Startup</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>args){</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MC_Send_Data(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_GPIO_TogglePin(GPIOD,GPIO_PIN_14);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structuv__init__task__args" kindref="compound">uv_init_task_args</ref>*<sp/>params<sp/>=<sp/>(<ref refid="structuv__init__task__args" kindref="compound">uv_init_task_args</ref>*)<sp/>args;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structuv__init__task__response" kindref="compound">uv_init_task_response</ref><sp/>response<sp/>=<sp/>{<ref refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" kindref="member">UV_OK</ref>,<ref refid="uvfr__utils_8h_1ad70cbc8929c4ad7a5901cd9eef5ca9b0a9c632ecb370b78547a390d1b5cf59671" kindref="member">MOTOR_CONTROLLER</ref>,0,NULL};</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>need<sp/>to<sp/>do<sp/>a<sp/>bunch<sp/>of<sp/>stuff<sp/>to<sp/>actually<sp/>initialize<sp/>the<sp/>motor<sp/>controller<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmotor__controllor__settings" kindref="compound">motor_controller_settings</ref>*<sp/>settings<sp/>=<sp/>(<ref refid="structmotor__controllor__settings" kindref="compound">motor_controller_settings</ref>*)<sp/>params-&gt;<ref refid="structuv__init__task__args_1a61a9b579a1e65a3875a4edf3201a39f3" kindref="member">specific_args</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xQueueSendToBack(params-&gt;<ref refid="structuv__init__task__args_1adec47e7a54822cacfb8fcfc35a22157f" kindref="member">init_info_queue</ref>,&amp;response,100)<sp/>!=<sp/>pdPASS){</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//OOPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>enqueue<sp/>MC<sp/>OK<sp/>Response&quot;</highlight><highlight class="normal">,0);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Kill<sp/>yourself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskSuspend(params-&gt;<ref refid="structuv__init__task__args_1a3b81430245e7f832dc1112e53b0ef7ad" kindref="member">meta_task_handle</ref>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Core/Src/motor_controller.c"/>
  </compounddef>
</doxygen>
