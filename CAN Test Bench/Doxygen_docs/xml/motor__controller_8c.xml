<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="motor__controller_8c" kind="file" language="C++">
    <compoundname>motor_controller.c</compoundname>
    <includes refid="motor__controller_8h" local="yes">motor_controller.h</includes>
    <includes refid="can_8h" local="yes">can.h</includes>
    <includes refid="main_8h" local="yes">main.h</includes>
    <includes local="yes">cmsis_os.h</includes>
    <includes refid="pdu_8h" local="yes">pdu.h</includes>
    <incdepgraph>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="13">
        <label>tim.h</label>
        <link refid="tim_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>imd.h</label>
        <link refid="imd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>dash.h</label>
        <link refid="dash_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>driving_loop.h</label>
        <link refid="driving__loop_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>temp_monitoring.h</label>
        <link refid="temp__monitoring_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>stdint.h</label>
      </node>
      <node id="33">
        <label>stdlib.h</label>
      </node>
      <node id="28">
        <label>oled.h</label>
        <link refid="oled_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>adc.h</label>
        <link refid="adc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cmsis_os.h</label>
      </node>
      <node id="6">
        <label>uvfr_utils.h</label>
        <link refid="uvfr__utils_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>message_buffer.h</label>
      </node>
      <node id="23">
        <label>bms.h</label>
        <link refid="bms_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Core/Src/motor_controller.c</label>
        <link refid="motor__controller_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>spi.h</label>
        <link refid="spi_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>pdu.h</label>
        <link refid="pdu_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>motor_controller.h</label>
        <link refid="motor__controller_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>uvfr_settings.h</label>
        <link refid="uvfr__settings_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>daq.h</label>
        <link refid="daq_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>gpio.h</label>
        <link refid="gpio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>rb_tree.h</label>
        <link refid="rb__tree_8h"/>
      </node>
      <node id="11">
        <label>constants.h</label>
        <link refid="constants_8h"/>
      </node>
      <node id="10">
        <label>can.h</label>
        <link refid="can_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>uvfr_global_config.h</label>
        <link refid="uvfr__global__config_8h"/>
      </node>
      <node id="31">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
      </node>
      <node id="24">
        <label>uvfr_state_engine.h</label>
        <link refid="uvfr__state__engine_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>odometer.h</label>
        <link refid="odometer_8h"/>
      </node>
      <node id="4">
        <label>stm32f4xx_hal.h</label>
      </node>
      <node id="16">
        <label>FreeRTOS.h</label>
      </node>
      <node id="12">
        <label>dma.h</label>
        <link refid="dma_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>task.h</label>
      </node>
      <node id="3">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="motor__controller_8c_1a31e56f574be52c9850bb3034ebd9e010" prot="public" static="no" mutable="no">
        <type>QueueHandle_t</type>
        <definition>QueueHandle_t canRxQueue</definition>
        <argsstring></argsstring>
        <name>canRxQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="12" column="22" declfile="Core/Src/motor_controller.c" declline="12" declcolumn="22"/>
      </memberdef>
      <memberdef kind="variable" id="motor__controller_8c_1ad7e8e999e507ca3c4a6f1d4b5430cfff" prot="public" static="no" mutable="no">
        <type>QueueHandle_t</type>
        <definition>QueueHandle_t canTxQueue</definition>
        <argsstring></argsstring>
        <name>canTxQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="13" column="22" declfile="Core/Src/motor_controller.c" declline="13" declcolumn="22"/>
      </memberdef>
      <memberdef kind="variable" id="motor__controller_8c_1a26195bc72f07eeb97338e761432e03d2" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t MC_Expected_Serial_Number</definition>
        <argsstring></argsstring>
        <name>MC_Expected_Serial_Number</name>
        <initializer>= 0x627E7A01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="19" column="16" bodyfile="Core/Src/motor_controller.c" bodystart="19" bodyend="-1"/>
        <referencedby refid="motor__controller_8c_1aed1407e1e0fd59dc7c5e5d6db671f0ab" compoundref="motor__controller_8c" startline="739" endline="803">MC_Startup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="motor__controller_8c_1a8f25ebbc9bf59980fdc0458f271437ee" prot="public" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t MC_Expected_FW_Version</definition>
        <argsstring></argsstring>
        <name>MC_Expected_FW_Version</name>
        <initializer>= 0xDC01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="20" column="16" bodyfile="Core/Src/motor_controller.c" bodystart="20" bodyend="-1"/>
        <referencedby refid="motor__controller_8c_1aed1407e1e0fd59dc7c5e5d6db671f0ab" compoundref="motor__controller_8c" startline="739" endline="803">MC_Startup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="motor__controller_8c_1a347eaa173dae5d48ae87a4bc5532adfc" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t max_motor_speed</definition>
        <argsstring></argsstring>
        <name>max_motor_speed</name>
        <initializer>= 3277</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="21" column="16" bodyfile="Core/Src/motor_controller.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="motor__controller_8c_1afb41a96439ba6d63dcc64f257c43a1d2" prot="public" static="no" mutable="no">
        <type><ref refid="motor__controller_8h_1ac9389d71d481a5381fe1d1e23b1e4ecc" kindref="member">motor_controller_settings</ref></type>
        <definition>motor_controller_settings mc_default_settings</definition>
        <argsstring></argsstring>
        <name>mc_default_settings</name>
        <initializer>= {
    .can_id_tx = 0x200,              
    .can_id_rx = 0x201,              
    .mc_CAN_timeout = 2,             
    .<ref refid="motor__controller_8h_1a3f03fa29b56b9f1f2cf0a36f989f9521a2b83ac91fbacf438199c4515ae3dcb88" kindref="member">proportional_gain</ref> = 10,         
    .<ref refid="motor__controller_8h_1a3f03fa29b56b9f1f2cf0a36f989f9521a39318ae4bc4582c26c32b7748f64c8d4" kindref="member">integral_time_constant</ref> = 400,   
    .<ref refid="motor__controller_8h_1a3f03fa29b56b9f1f2cf0a36f989f9521aa1022b52e56d3a918c7a62177a88bb9e" kindref="member">integral_memory_max</ref> = 0.6       
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="26" column="27" bodyfile="Core/Src/motor_controller.c" bodystart="26" bodyend="-1"/>
        <referencedby refid="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" compoundref="motor__controller_8c" startline="230" endline="249">MC_Request_Data</referencedby>
        <referencedby refid="motor__controller_8c_1a71371a5194c9b5c725abec77feffbc38" compoundref="motor__controller_8c" startline="62" endline="97">MotorControllerSpinTest</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="motor__controller_8c_1a6e0eaf3bbf353c1b2b7b4ae59e928722" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t Parse_Bamocar_Response</definition>
        <argsstring>(uint8_t *data, uint8_t length)</argsstring>
        <name>Parse_Bamocar_Response</name>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parses a 32-bit response value from a Bamocar CAN message. Combines the four bytes of the payload into a single 32-bit integer. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the CAN message payload. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data payload (expected to be 4 bytes). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Parsed 32-bit value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="107" column="17" bodyfile="Core/Src/motor_controller.c" bodystart="107" bodyend="109" declfile="Core/Src/motor_controller.c" declline="38" declcolumn="17"/>
        <referencedby refid="motor__controller_8c_1aed1407e1e0fd59dc7c5e5d6db671f0ab" compoundref="motor__controller_8c" startline="739" endline="803">MC_Startup</referencedby>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1ae459dcb08bdf9b88ccc2de10bee4c409" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void MotorControllerErrorHandler</definition>
        <argsstring>(uint8_t *data, uint8_t length)</argsstring>
        <name>MotorControllerErrorHandler</name>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Processes error and warning information from the motor controller.<orderedlist>
<listitem><para>Extracts error and warning flags from the CAN message payload.</para>
</listitem><listitem><para>Logs or triggers a panic if critical errors are detected. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the CAN message payload. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data payload. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></orderedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="119" column="13" bodyfile="Core/Src/motor_controller.c" bodystart="119" bodyend="222" declfile="Core/Src/motor_controller.c" declline="39" declcolumn="13"/>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa0dbc9540bf7a4c67b6a2810985bfb55d" compoundref="motor__controller_8h" startline="89">AC_current_offset_fault</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffac02a9e080dc6bde671fa915b7e254c67" compoundref="motor__controller_8h" startline="108">ADC_measurement_problem</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa9c77d3a416d8465efe129cf8ad401cfe" compoundref="motor__controller_8h" startline="107">ADC_sequencer_problem</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa03e3fe1a981eecdeb19cd0589bdcc6f8" compoundref="motor__controller_8h" startline="97">auxiliary_voltage_min_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa150953c78b7fcc8ae97a50a5b5765264" compoundref="motor__controller_8h" startline="91">bleed_resistor_overload</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffae0c6a82b11d3fb69b758c350960f5a2a" compoundref="motor__controller_8h" startline="109">bleeder_resistor_warning</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa425430d2585733363b6043ed70ebd7ab" compoundref="motor__controller_8h" startline="79">CAN_timeout_error</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa3d2e8b6cb27af4a0a1121c419594bbfa" compoundref="motor__controller_8h" startline="105">check_ecode_ID</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa29aa452fe3c693b96c17c09849ee1633" compoundref="motor__controller_8h" startline="85">critical_AC_current</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa0dd2c6834f96df064d7b152074a9f81f" compoundref="motor__controller_8h" startline="87">ecode_timeout_error</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa87ada8cd125ba521b447d565c12bb30e" compoundref="motor__controller_8h" startline="76">eprom_read_error</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2a16f371b0570edeeb17214a398e4bfc" compoundref="motor__controller_8h" startline="80">feedback_signal_error</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffab6733322e6c8c5197b108e853a58ad13" compoundref="motor__controller_8h" startline="98">feedback_signal_problem</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffae9da794167969482cb67bfad83a04d71" compoundref="motor__controller_8h" startline="77">hardware_fault</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa54a5ca5981535fd231b00a1040622950" compoundref="motor__controller_8h" startline="83">IGBT_temp_max_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa298d28f3aa38960b5d1349a04cbbca95" compoundref="motor__controller_8h" startline="101">IGBT_temperature_warning</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa18df3363e2a0048a813dcef5a41785ce" compoundref="motor__controller_8h" startline="90">internal_hardware_voltage_problem</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa229533ef674ddd4475b22e47eb506b49" compoundref="motor__controller_8h" startline="84">mains_voltage_max_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa13726d0d6fc8dd12135f4ea92d1dcc92" compoundref="motor__controller_8h" startline="81">mains_voltage_min_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2267f6ae60d8b9024ba418dd1f6d4b15" compoundref="motor__controller_8h" startline="82">motor_temp_max_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa4e9b2370bf4b4680b4c2471d2f7d312e" compoundref="motor__controller_8h" startline="100">motor_temperature_warning</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2fbc7fdf1ab20514fac8d6418291a114" compoundref="motor__controller_8h" startline="94">parameter_conflict_detected</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa696b36face7279e19e2905b0fa9ecb68" compoundref="motor__controller_8h" startline="86">race_away_detected</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa3689755161fb5aa5fae86b270bfbf5fc" compoundref="motor__controller_8h" startline="96">rotate_field_enable_not_present_norun</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffadae8b5f4fb6cd6712202d055529499ef" compoundref="motor__controller_8h" startline="78">rotate_field_enable_not_present_run</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa7483be8346bb7b2fdfb418383961fba7" compoundref="motor__controller_8h" startline="95">special_CPU_fault</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2c5d3b1ee0135916f17e89f331429ed5" compoundref="motor__controller_8h" startline="104">speed_actual_resolution_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa618e6f62f2e284a9fec848782c9473c7" compoundref="motor__controller_8h" startline="106">tripzone_glitch_detected</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffaf06c0a389c1c73850def361e9bd7ffdc" compoundref="motor__controller_8h" startline="102">Vout_saturation_max_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa3050ef440e4e82f9fb3973e1fb9faea7" compoundref="motor__controller_8h" startline="99">warning_5</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffad53242de6aeaa134a78749bc60fec984" compoundref="motor__controller_8h" startline="103">warning_9</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa357611869a1ec791b38a36ec2dfe09b9" compoundref="motor__controller_8h" startline="88">watchdog_reset</references>
        <referencedby refid="motor__controller_8c_1aed1407e1e0fd59dc7c5e5d6db671f0ab" compoundref="motor__controller_8c" startline="739" endline="803">MC_Startup</referencedby>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1a71371a5194c9b5c725abec77feffbc38" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t MotorControllerSpinTest</definition>
        <argsstring>(void)</argsstring>
        <name>MotorControllerSpinTest</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Commands the motor to spin at a low RPM and validates the motor&apos;s response:<orderedlist>
<listitem><para>Sends a spin command via CAN.</para>
</listitem><listitem><para>Waits for the motor to reach the desired speed.</para>
</listitem><listitem><para>Checks the actual speed from the motor controller.</para>
</listitem><listitem><para>Stops the motor after validation. <simplesect kind="return"><para>0 if the test is successful, 1 for timeout, or 2 for insufficient speed. </para>
</simplesect>
</para>
</listitem></orderedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="62" column="17" bodyfile="Core/Src/motor_controller.c" bodystart="62" bodyend="97" declfile="Core/Src/motor_controller.c" declline="40" declcolumn="17"/>
        <references refid="structmotor__controllor__settings_1a1229e590ebbf0159f0c829d5f8807294" compoundref="motor__controller_8h" startline="152">motor_controllor_settings::can_id_tx</references>
        <references refid="can_8h_1ab77168d14df04ccca5d48612ee21ced8" compoundref="can_8c" startline="147">hcan2</references>
        <references refid="motor__controller_8c_1afb41a96439ba6d63dcc64f257c43a1d2" compoundref="motor__controller_8c" startline="26">mc_default_settings</references>
        <references refid="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" compoundref="motor__controller_8c" startline="230" endline="249">MC_Request_Data</references>
        <references refid="motor__controller_8h_1a8cab19f0549eb777404ec1c7a3b56268a74ac68aa19b65409fa9b18b8f2be3bf4" compoundref="motor__controller_8h" startline="24">N_actual</references>
        <references refid="motor__controller_8h_1a8cab19f0549eb777404ec1c7a3b56268aa53daf1b53f678af8159cba9238c5e6f" compoundref="motor__controller_8h" startline="25">N_set</references>
        <references refid="constants_8h_1a14629afcc7f0b2d62c2b617b07d98184" compoundref="constants_8c" startline="9">RxData</references>
        <references refid="constants_8h_1aedd1e4ac418a9697f9f41a2713d49569" compoundref="constants_8c" startline="8">TxMailbox</references>
        <references refid="motor__controller_8c_1a560fd64fa21f9583f346b08cd371afa4" compoundref="motor__controller_8c" startline="257" endline="259">WaitFor_CAN_Response</references>
        <referencedby refid="motor__controller_8c_1aed1407e1e0fd59dc7c5e5d6db671f0ab" compoundref="motor__controller_8c" startline="739" endline="803">MC_Startup</referencedby>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1a560fd64fa21f9583f346b08cd371afa4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="uvfr__utils_8h_1a0ecf26b576b9a54eca656b9be7ba6a06" kindref="member">bool</ref></type>
        <definition>static bool WaitFor_CAN_Response</definition>
        <argsstring>(void)</argsstring>
        <name>WaitFor_CAN_Response</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Waits for a CAN response from the motor controller. Uses an RTOS semaphore to synchronize and check if a response is received within the timeout period. <simplesect kind="return"><para>True if a response is received, otherwise false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="257" column="13" bodyfile="Core/Src/motor_controller.c" bodystart="257" bodyend="259" declfile="Core/Src/motor_controller.c" declline="41" declcolumn="13"/>
        <referencedby refid="motor__controller_8c_1aed1407e1e0fd59dc7c5e5d6db671f0ab" compoundref="motor__controller_8c" startline="739" endline="803">MC_Startup</referencedby>
        <referencedby refid="motor__controller_8c_1a71371a5194c9b5c725abec77feffbc38" compoundref="motor__controller_8c" startline="62" endline="97">MotorControllerSpinTest</referencedby>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MC_Request_Data</definition>
        <argsstring>(uint8_t RegID)</argsstring>
        <name>MC_Request_Data</name>
        <param>
          <type>uint8_t</type>
          <declname>RegID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sends a CAN request to the motor controller to retrieve a specific register value. Constructs a CAN message with the specified register ID and sends it via the CAN queue. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RegID</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the register to request data from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="230" column="6" bodyfile="Core/Src/motor_controller.c" bodystart="230" bodyend="249" declfile="Core/Src/motor_controller.c" declline="42" declcolumn="6"/>
        <references refid="structmotor__controllor__settings_1a1229e590ebbf0159f0c829d5f8807294" compoundref="motor__controller_8h" startline="152">motor_controllor_settings::can_id_tx</references>
        <references refid="can_8h_1ab77168d14df04ccca5d48612ee21ced8" compoundref="can_8c" startline="147">hcan2</references>
        <references refid="motor__controller_8c_1afb41a96439ba6d63dcc64f257c43a1d2" compoundref="motor__controller_8c" startline="26">mc_default_settings</references>
        <references refid="constants_8h_1aedd1e4ac418a9697f9f41a2713d49569" compoundref="constants_8c" startline="8">TxMailbox</references>
        <referencedby refid="motor__controller_8c_1aed1407e1e0fd59dc7c5e5d6db671f0ab" compoundref="motor__controller_8c" startline="739" endline="803">MC_Startup</referencedby>
        <referencedby refid="motor__controller_8c_1a71371a5194c9b5c725abec77feffbc38" compoundref="motor__controller_8c" startline="62" endline="97">MotorControllerSpinTest</referencedby>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1a40bf1b849ad7443bbe8af342006bb3cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MC_Check_Error_Warning</definition>
        <argsstring>(uint8_t Data[])</argsstring>
        <name>MC_Check_Error_Warning</name>
        <param>
          <type>uint8_t</type>
          <declname>Data</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="591" column="6" bodyfile="Core/Src/motor_controller.c" bodystart="591" bodyend="715"/>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa0dbc9540bf7a4c67b6a2810985bfb55d" compoundref="motor__controller_8h" startline="89">AC_current_offset_fault</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffac02a9e080dc6bde671fa915b7e254c67" compoundref="motor__controller_8h" startline="108">ADC_measurement_problem</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa9c77d3a416d8465efe129cf8ad401cfe" compoundref="motor__controller_8h" startline="107">ADC_sequencer_problem</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa03e3fe1a981eecdeb19cd0589bdcc6f8" compoundref="motor__controller_8h" startline="97">auxiliary_voltage_min_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa150953c78b7fcc8ae97a50a5b5765264" compoundref="motor__controller_8h" startline="91">bleed_resistor_overload</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffae0c6a82b11d3fb69b758c350960f5a2a" compoundref="motor__controller_8h" startline="109">bleeder_resistor_warning</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa425430d2585733363b6043ed70ebd7ab" compoundref="motor__controller_8h" startline="79">CAN_timeout_error</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa3d2e8b6cb27af4a0a1121c419594bbfa" compoundref="motor__controller_8h" startline="105">check_ecode_ID</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa29aa452fe3c693b96c17c09849ee1633" compoundref="motor__controller_8h" startline="85">critical_AC_current</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa0dd2c6834f96df064d7b152074a9f81f" compoundref="motor__controller_8h" startline="87">ecode_timeout_error</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa87ada8cd125ba521b447d565c12bb30e" compoundref="motor__controller_8h" startline="76">eprom_read_error</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2a16f371b0570edeeb17214a398e4bfc" compoundref="motor__controller_8h" startline="80">feedback_signal_error</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffab6733322e6c8c5197b108e853a58ad13" compoundref="motor__controller_8h" startline="98">feedback_signal_problem</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffae9da794167969482cb67bfad83a04d71" compoundref="motor__controller_8h" startline="77">hardware_fault</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa54a5ca5981535fd231b00a1040622950" compoundref="motor__controller_8h" startline="83">IGBT_temp_max_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa298d28f3aa38960b5d1349a04cbbca95" compoundref="motor__controller_8h" startline="101">IGBT_temperature_warning</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa18df3363e2a0048a813dcef5a41785ce" compoundref="motor__controller_8h" startline="90">internal_hardware_voltage_problem</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa229533ef674ddd4475b22e47eb506b49" compoundref="motor__controller_8h" startline="84">mains_voltage_max_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa13726d0d6fc8dd12135f4ea92d1dcc92" compoundref="motor__controller_8h" startline="81">mains_voltage_min_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2267f6ae60d8b9024ba418dd1f6d4b15" compoundref="motor__controller_8h" startline="82">motor_temp_max_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa4e9b2370bf4b4680b4c2471d2f7d312e" compoundref="motor__controller_8h" startline="100">motor_temperature_warning</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2fbc7fdf1ab20514fac8d6418291a114" compoundref="motor__controller_8h" startline="94">parameter_conflict_detected</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa696b36face7279e19e2905b0fa9ecb68" compoundref="motor__controller_8h" startline="86">race_away_detected</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa3689755161fb5aa5fae86b270bfbf5fc" compoundref="motor__controller_8h" startline="96">rotate_field_enable_not_present_norun</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffadae8b5f4fb6cd6712202d055529499ef" compoundref="motor__controller_8h" startline="78">rotate_field_enable_not_present_run</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa7483be8346bb7b2fdfb418383961fba7" compoundref="motor__controller_8h" startline="95">special_CPU_fault</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2c5d3b1ee0135916f17e89f331429ed5" compoundref="motor__controller_8h" startline="104">speed_actual_resolution_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa618e6f62f2e284a9fec848782c9473c7" compoundref="motor__controller_8h" startline="106">tripzone_glitch_detected</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffaf06c0a389c1c73850def361e9bd7ffdc" compoundref="motor__controller_8h" startline="102">Vout_saturation_max_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa3050ef440e4e82f9fb3973e1fb9faea7" compoundref="motor__controller_8h" startline="99">warning_5</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffad53242de6aeaa134a78749bc60fec984" compoundref="motor__controller_8h" startline="103">warning_9</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa357611869a1ec791b38a36ec2dfe09b9" compoundref="motor__controller_8h" startline="88">watchdog_reset</references>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1ac592ffd65d2793aadca7ca158a3d2dbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MC_Validate</definition>
        <argsstring>()</argsstring>
        <name>MC_Validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="717" column="6" bodyfile="Core/Src/motor_controller.c" bodystart="717" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1af34e05da8add9233de12150656dad092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MC_Check_Serial_Number</definition>
        <argsstring>(uint8_t Data[])</argsstring>
        <name>MC_Check_Serial_Number</name>
        <param>
          <type>uint8_t</type>
          <declname>Data</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="721" column="6" bodyfile="Core/Src/motor_controller.c" bodystart="721" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1a877a1b68c89c7eeecc3ed294e5dc8a73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MC_Check_Firmware</definition>
        <argsstring>(uint8_t Data[])</argsstring>
        <name>MC_Check_Firmware</name>
        <param>
          <type>uint8_t</type>
          <declname>Data</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="725" column="6" bodyfile="Core/Src/motor_controller.c" bodystart="725" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1aed1407e1e0fd59dc7c5e5d6db671f0ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MC_Startup</definition>
        <argsstring>(void *args)</argsstring>
        <name>MC_Startup</name>
        <param>
          <type>void *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializes the motor controller by performing the following steps:<orderedlist>
<listitem><para>Verifies the serial number from the motor controller.</para>
</listitem><listitem><para>Checks the firmware version to ensure compatibility.</para>
</listitem><listitem><para>Executes a motor spin test at low RPM to validate functionality.</para>
</listitem><listitem><para>Checks for errors and warnings from the motor controller.</para>
</listitem><listitem><para>Logs successful initialization if all checks pass. </para>
</listitem></orderedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="739" column="6" bodyfile="Core/Src/motor_controller.c" bodystart="739" bodyend="803"/>
        <references refid="motor__controller_8h_1a0376dfd1eed1d027d96561fd24e48242aed26e85027514bcd1ca8c3c17c03bef2" compoundref="motor__controller_8h" startline="146">firmware_version</references>
        <references refid="motor__controller_8h_1a829d1af845327949015b4e83bb6fc43d" compoundref="motor__controller_8h" startline="20">FIRMWARE_VERSION_REGISTER</references>
        <references refid="structuv__init__task__args_1adec47e7a54822cacfb8fcfc35a22157f" compoundref="uvfr__utils_8h" startline="331">uv_init_task_args::init_info_queue</references>
        <references refid="motor__controller_8c_1a8f25ebbc9bf59980fdc0458f271437ee" compoundref="motor__controller_8c" startline="20">MC_Expected_FW_Version</references>
        <references refid="motor__controller_8c_1a26195bc72f07eeb97338e761432e03d2" compoundref="motor__controller_8c" startline="19">MC_Expected_Serial_Number</references>
        <references refid="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" compoundref="motor__controller_8c" startline="230" endline="249">MC_Request_Data</references>
        <references refid="structuv__init__task__args_1a3b81430245e7f832dc1112e53b0ef7ad" compoundref="uvfr__utils_8h" startline="332">uv_init_task_args::meta_task_handle</references>
        <references refid="uvfr__utils_8h_1ad70cbc8929c4ad7a5901cd9eef5ca9b0a9c632ecb370b78547a390d1b5cf59671" compoundref="uvfr__utils_8h" startline="205">MOTOR_CONTROLLER</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa595211bb6640ca05c1c3344b47e2890f" compoundref="motor__controller_8h" startline="74">motor_controller_errors_warnings</references>
        <references refid="motor__controller_8c_1ae459dcb08bdf9b88ccc2de10bee4c409" compoundref="motor__controller_8c" startline="119" endline="222">MotorControllerErrorHandler</references>
        <references refid="motor__controller_8c_1a71371a5194c9b5c725abec77feffbc38" compoundref="motor__controller_8c" startline="62" endline="97">MotorControllerSpinTest</references>
        <references refid="motor__controller_8c_1a6e0eaf3bbf353c1b2b7b4ae59e928722" compoundref="motor__controller_8c" startline="107" endline="109">Parse_Bamocar_Response</references>
        <references refid="constants_8h_1a14629afcc7f0b2d62c2b617b07d98184" compoundref="constants_8c" startline="9">RxData</references>
        <references refid="motor__controller_8h_1aab8c03dc3480e25a7a75b60edbf51cb3" compoundref="motor__controller_8h" startline="19">SERIAL_NUMBER_REGISTER</references>
        <references refid="structuv__init__task__args_1a61a9b579a1e65a3875a4edf3201a39f3" compoundref="uvfr__utils_8h" startline="330">uv_init_task_args::specific_args</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" compoundref="uvfr__utils_8h" startline="167">UV_OK</references>
        <references refid="motor__controller_8c_1a560fd64fa21f9583f346b08cd371afa4" compoundref="motor__controller_8c" startline="257" endline="259">WaitFor_CAN_Response</references>
        <referencedby refid="uvfr__utils_8c_1a6d40598f9d8daa89ca159a2e87f4fd01" compoundref="uvfr__utils_8c" startline="39" endline="231">uvInit</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//Motor<sp/>Controller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="motor__controller_8h" kindref="compound">motor_controller.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Functions<sp/>and<sp/>constants<sp/>for<sp/>motor<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="can_8h" kindref="compound">can.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CAN<sp/>communication<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="main_8h" kindref="compound">main.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Application-level<sp/>definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cmsis_os.h&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RTOS-related<sp/>functionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pdu_8h" kindref="compound">pdu.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shutdown<sp/>circuit<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>--------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>External<sp/>Resources<sp/>(provided<sp/>by<sp/>can.c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>--------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>QueueHandle_t<sp/><ref refid="motor__controller_8c_1a31e56f574be52c9850bb3034ebd9e010" kindref="member">canRxQueue</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Queue<sp/>for<sp/>CAN<sp/>receive<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>QueueHandle_t<sp/><ref refid="motor__controller_8c_1ad7e8e999e507ca3c4a6f1d4b5430cfff" kindref="member">canTxQueue</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Queue<sp/>for<sp/>CAN<sp/>transmit<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//extern<sp/>SemaphoreHandle_t<sp/>canResponseSemaphore;<sp/>//<sp/>Semaphore<sp/>for<sp/>synchronizing<sp/>CAN<sp/>responses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>--------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Motor<sp/>Controller<sp/>Constants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>--------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="motor__controller_8c_1a26195bc72f07eeb97338e761432e03d2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="motor__controller_8c_1a26195bc72f07eeb97338e761432e03d2" kindref="member">MC_Expected_Serial_Number</ref><sp/>=<sp/>0x627E7A01;<sp/></highlight><highlight class="comment">//<sp/>Expected<sp/>serial<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="motor__controller_8c_1a8f25ebbc9bf59980fdc0458f271437ee" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="motor__controller_8c_1a8f25ebbc9bf59980fdc0458f271437ee" kindref="member">MC_Expected_FW_Version</ref><sp/>=<sp/>0xDC01;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Expected<sp/>firmware<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="motor__controller_8c_1a347eaa173dae5d48ae87a4bc5532adfc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="motor__controller_8c_1a347eaa173dae5d48ae87a4bc5532adfc" kindref="member">max_motor_speed</ref><sp/>=<sp/>3277;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Max<sp/>RPM<sp/>for<sp/>speed<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//uint32_t<sp/>TxMailbox;<sp/>//Ensure<sp/>TxMailbox<sp/>is<sp/>defined<sp/>as<sp/>a<sp/>uint32_t<sp/>variable<sp/>in<sp/>your<sp/>motor_controller.c<sp/>file<sp/>or<sp/>globally<sp/>in<sp/>can.c<sp/>if<sp/>used<sp/>across<sp/>multiple<sp/>files:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Motor<sp/>controller<sp/>settings<sp/>with<sp/>default<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="motor__controller_8c_1afb41a96439ba6d63dcc64f257c43a1d2" refkind="member"><highlight class="normal"><ref refid="structmotor__controllor__settings" kindref="compound">motor_controller_settings</ref><sp/><ref refid="motor__controller_8c_1afb41a96439ba6d63dcc64f257c43a1d2" kindref="member">mc_default_settings</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structmotor__controllor__settings_1a1229e590ebbf0159f0c829d5f8807294" kindref="member">can_id_tx</ref><sp/>=<sp/>0x200,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CAN<sp/>transmit<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>.can_id_rx<sp/>=<sp/>0x201,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CAN<sp/>receive<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>.mc_CAN_timeout<sp/>=<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CAN<sp/>timeout<sp/>in<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>.proportional_gain<sp/>=<sp/>10,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Proportional<sp/>gain<sp/>(Kp)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>.integral_time_constant<sp/>=<sp/>400,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Integral<sp/>time<sp/>constant<sp/>(Ti)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>.integral_memory_max<sp/>=<sp/>0.6<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Max<sp/>integral<sp/>memory<sp/>(60%)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>--------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>Prototypes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>--------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="motor__controller_8c_1a6e0eaf3bbf353c1b2b7b4ae59e928722" kindref="member">Parse_Bamocar_Response</ref>(uint8_t<sp/>*data,<sp/>uint8_t<sp/>length);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1ae459dcb08bdf9b88ccc2de10bee4c409" kindref="member">MotorControllerErrorHandler</ref>(uint8_t<sp/>*data,<sp/>uint8_t<sp/>length);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="motor__controller_8c_1a71371a5194c9b5c725abec77feffbc38" kindref="member">MotorControllerSpinTest</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1a560fd64fa21f9583f346b08cd371afa4" kindref="member">WaitFor_CAN_Response</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" kindref="member">MC_Request_Data</ref>(uint8_t<sp/>RegID);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>MotorController_Init(void);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>MC_Startup(void);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>--------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>Definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>--------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Spin<sp/>Motor<sp/>Test</highlight></codeline>
<codeline lineno="62" refid="motor__controller_8c_1a71371a5194c9b5c725abec77feffbc38" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="motor__controller_8c_1a71371a5194c9b5c725abec77feffbc38" kindref="member">MotorControllerSpinTest</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>spin_command[2]<sp/>=<sp/>{0x00,<sp/>0x10};<sp/></highlight><highlight class="comment">//<sp/>Command<sp/>to<sp/>spin<sp/>at<sp/>low<sp/>RPM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>CAN_TxHeaderTypeDef<sp/>for<sp/>message<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>CAN_TxHeaderTypeDef<sp/>txHeader;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>txHeader.StdId<sp/>=<sp/><ref refid="motor__controller_8c_1afb41a96439ba6d63dcc64f257c43a1d2" kindref="member">mc_default_settings</ref>.<ref refid="structmotor__controllor__settings_1a1229e590ebbf0159f0c829d5f8807294" kindref="member">can_id_tx</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>CAN<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>txHeader.IDE<sp/>=<sp/>CAN_ID_STD;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>standard<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>txHeader.RTR<sp/>=<sp/>CAN_RTR_DATA;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>txHeader.DLC<sp/>=<sp/>3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>length<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transmit<sp/>the<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_CAN_AddTxMessage(&amp;<ref refid="can_8h_1ab77168d14df04ccca5d48612ee21ced8" kindref="member">hcan2</ref>,<sp/>&amp;txHeader,<sp/>(uint8_t[]){<ref refid="motor__controller_8h_1a8cab19f0549eb777404ec1c7a3b56268aa53daf1b53f678af8159cba9238c5e6f" kindref="member">N_set</ref>,<sp/>spin_command[0],<sp/>spin_command[1]},<sp/>&amp;<ref refid="constants_8h_1aedd1e4ac418a9697f9f41a2713d49569" kindref="member">TxMailbox</ref>)<sp/>!=<sp/>HAL_OK)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Transmission<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(500));<sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>time<sp/>for<sp/>the<sp/>motor<sp/>to<sp/>spin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Request<sp/>actual<sp/>motor<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" kindref="member">MC_Request_Data</ref>(<ref refid="motor__controller_8h_1a8cab19f0549eb777404ec1c7a3b56268a74ac68aa19b65409fa9b18b8f2be3bf4" kindref="member">N_actual</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="motor__controller_8c_1a560fd64fa21f9583f346b08cd371afa4" kindref="member">WaitFor_CAN_Response</ref>())<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;<sp/></highlight><highlight class="comment">//<sp/>Timeout<sp/>occurred</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>actual_speed<sp/>=<sp/>(<ref refid="constants_8h_1a14629afcc7f0b2d62c2b617b07d98184" kindref="member">RxData</ref>[0]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="constants_8h_1a14629afcc7f0b2d62c2b617b07d98184" kindref="member">RxData</ref>[1];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual_speed<sp/>&lt;<sp/>0x10)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>motor<sp/>did<sp/>not<sp/>reach<sp/>the<sp/>expected<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;<sp/></highlight><highlight class="comment">//<sp/>Motor<sp/>failed<sp/>to<sp/>spin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>the<sp/>motor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>stop_command[2]<sp/>=<sp/>{0x00,<sp/>0x00};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_CAN_AddTxMessage(&amp;<ref refid="can_8h_1ab77168d14df04ccca5d48612ee21ced8" kindref="member">hcan2</ref>,<sp/>&amp;txHeader,<sp/>(uint8_t[]){<ref refid="motor__controller_8h_1a8cab19f0549eb777404ec1c7a3b56268aa53daf1b53f678af8159cba9238c5e6f" kindref="member">N_set</ref>,<sp/>stop_command[0],<sp/>stop_command[1]},<sp/>&amp;<ref refid="constants_8h_1aedd1e4ac418a9697f9f41a2713d49569" kindref="member">TxMailbox</ref>)<sp/>!=<sp/>HAL_OK)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4;<sp/></highlight><highlight class="comment">//<sp/>Transmission<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Success</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Parse<sp/>Bamocar<sp/>Response</highlight></codeline>
<codeline lineno="107" refid="motor__controller_8c_1a6e0eaf3bbf353c1b2b7b4ae59e928722" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="motor__controller_8c_1a6e0eaf3bbf353c1b2b7b4ae59e928722" kindref="member">Parse_Bamocar_Response</ref>(uint8_t<sp/>*data,<sp/>uint8_t<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(data[0]<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>(data[1]<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(data[2]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>data[3];</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Handle<sp/>Motor<sp/>Controller<sp/>Errors/Warnings</highlight></codeline>
<codeline lineno="119" refid="motor__controller_8c_1ae459dcb08bdf9b88ccc2de10bee4c409" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1ae459dcb08bdf9b88ccc2de10bee4c409" kindref="member">MotorControllerErrorHandler</ref>(uint8_t<sp/>*data,<sp/>uint8_t<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>MC_errors<sp/>=<sp/>(data[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>data[2];<sp/></highlight><highlight class="comment">//<sp/>Low<sp/>Bytes:<sp/>error<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>MC_warnings<sp/>=<sp/>(data[3]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>data[4];<sp/></highlight><highlight class="comment">//<sp/>High<sp/>Bytes:<sp/>warning<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa87ada8cd125ba521b447d565c12bb30e" kindref="member">eprom_read_error</ref>)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;EPROM<sp/>Read<sp/>Error&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffae9da794167969482cb67bfad83a04d71" kindref="member">hardware_fault</ref>)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Hardware<sp/>Fault&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffadae8b5f4fb6cd6712202d055529499ef" kindref="member">rotate_field_enable_not_present_run</ref>)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Rotating<sp/>Field<sp/>Enable<sp/>Not<sp/>Present<sp/>(Run<sp/>Active)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa425430d2585733363b6043ed70ebd7ab" kindref="member">CAN_timeout_error</ref>)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;CAN<sp/>Timeout<sp/>Error&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2a16f371b0570edeeb17214a398e4bfc" kindref="member">feedback_signal_error</ref>)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Feedback<sp/>Signal<sp/>Error&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa13726d0d6fc8dd12135f4ea92d1dcc92" kindref="member">mains_voltage_min_limit</ref>)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Mains<sp/>Voltage<sp/>Below<sp/>Minimum<sp/>Limit&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2267f6ae60d8b9024ba418dd1f6d4b15" kindref="member">motor_temp_max_limit</ref>)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Motor<sp/>Temperature<sp/>Exceeded<sp/>Maximum<sp/>Limit&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa54a5ca5981535fd231b00a1040622950" kindref="member">IGBT_temp_max_limit</ref>)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;IGBT<sp/>Temperature<sp/>Exceeded<sp/>Maximum<sp/>Limit&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa229533ef674ddd4475b22e47eb506b49" kindref="member">mains_voltage_max_limit</ref>)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Mains<sp/>Voltage<sp/>Exceeded<sp/>Maximum<sp/>Limit&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa29aa452fe3c693b96c17c09849ee1633" kindref="member">critical_AC_current</ref>)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Critical<sp/>AC<sp/>Current<sp/>Detected&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa696b36face7279e19e2905b0fa9ecb68" kindref="member">race_away_detected</ref>)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Race<sp/>Away<sp/>Detected&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa0dd2c6834f96df064d7b152074a9f81f" kindref="member">ecode_timeout_error</ref>)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Ecode<sp/>Timeout<sp/>Error&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa357611869a1ec791b38a36ec2dfe09b9" kindref="member">watchdog_reset</ref>)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Watchdog<sp/>Reset<sp/>Occurred&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa0dbc9540bf7a4c67b6a2810985bfb55d" kindref="member">AC_current_offset_fault</ref>)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;AC<sp/>Current<sp/>Offset<sp/>Fault&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa18df3363e2a0048a813dcef5a41785ce" kindref="member">internal_hardware_voltage_problem</ref>)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Internal<sp/>Hardware<sp/>Voltage<sp/>Problem&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa150953c78b7fcc8ae97a50a5b5765264" kindref="member">bleed_resistor_overload</ref>)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Bleed<sp/>Resistor<sp/>Overload&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2fbc7fdf1ab20514fac8d6418291a114" kindref="member">parameter_conflict_detected</ref>)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uvLog(&quot;Parameter<sp/>Conflict<sp/>Detected&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa7483be8346bb7b2fdfb418383961fba7" kindref="member">special_CPU_fault</ref>)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uvLog(&quot;Special<sp/>CPU<sp/>Fault<sp/>Detected&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa3689755161fb5aa5fae86b270bfbf5fc" kindref="member">rotate_field_enable_not_present_norun</ref>)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uvLog(&quot;Rotating<sp/>Field<sp/>Enable<sp/>Not<sp/>Present<sp/>(No<sp/>Run<sp/>Active)&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa03e3fe1a981eecdeb19cd0589bdcc6f8" kindref="member">auxiliary_voltage_min_limit</ref>)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uvLog(&quot;Auxiliary<sp/>Voltage<sp/>Below<sp/>Minimum<sp/>Limit&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffab6733322e6c8c5197b108e853a58ad13" kindref="member">feedback_signal_problem</ref>)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uvLog(&quot;Feedback<sp/>Signal<sp/>Problem<sp/>Detected&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa3050ef440e4e82f9fb3973e1fb9faea7" kindref="member">warning_5</ref>)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uvLog(&quot;Warning<sp/>5<sp/>Detected&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa4e9b2370bf4b4680b4c2471d2f7d312e" kindref="member">motor_temperature_warning</ref>)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uvLog(&quot;Motor<sp/>Temperature<sp/>Warning<sp/>(&gt;87%)&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa298d28f3aa38960b5d1349a04cbbca95" kindref="member">IGBT_temperature_warning</ref>)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uvLog(&quot;IGBT<sp/>Temperature<sp/>Warning<sp/>(&gt;87%)&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffaf06c0a389c1c73850def361e9bd7ffdc" kindref="member">Vout_saturation_max_limit</ref>)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uvLog(&quot;Output<sp/>Voltage<sp/>Saturation<sp/>Reached<sp/>Maximum<sp/>Limit&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffad53242de6aeaa134a78749bc60fec984" kindref="member">warning_9</ref>)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uvLog(&quot;Warning<sp/>9<sp/>Detected&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2c5d3b1ee0135916f17e89f331429ed5" kindref="member">speed_actual_resolution_limit</ref>)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uvLog(&quot;Speed<sp/>Actual<sp/>Resolution<sp/>Limit<sp/>Exceeded&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa3d2e8b6cb27af4a0a1121c419594bbfa" kindref="member">check_ecode_ID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uvLog(&quot;Check<sp/>Ecode<sp/>ID<sp/>Warning&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa618e6f62f2e284a9fec848782c9473c7" kindref="member">tripzone_glitch_detected</ref>)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uvLog(&quot;Tripzone<sp/>Glitch<sp/>Detected&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa9c77d3a416d8465efe129cf8ad401cfe" kindref="member">ADC_sequencer_problem</ref>)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uvLog(&quot;ADC<sp/>Sequencer<sp/>Problem<sp/>Detected&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffac02a9e080dc6bde671fa915b7e254c67" kindref="member">ADC_measurement_problem</ref>)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uvLog(&quot;ADC<sp/>Measurement<sp/>Problem<sp/>Detected&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffae0c6a82b11d3fb69b758c350960f5a2a" kindref="member">bleeder_resistor_warning</ref>)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uvLog(&quot;Bleeder<sp/>Resistor<sp/>Warning&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Request<sp/>Data<sp/>from<sp/>Motor<sp/>Controller</highlight></codeline>
<codeline lineno="230" refid="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" refkind="member"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" kindref="member">MC_Request_Data</ref>(uint8_t<sp/>RegID)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>CAN<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>CAN_TxHeaderTypeDef<sp/>txHeader;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="constants_8h_1aedd1e4ac418a9697f9f41a2713d49569" kindref="member">TxMailbox</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>the<sp/>CAN<sp/>message<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>txHeader.StdId<sp/>=<sp/><ref refid="motor__controller_8c_1afb41a96439ba6d63dcc64f257c43a1d2" kindref="member">mc_default_settings</ref>.<ref refid="structmotor__controllor__settings_1a1229e590ebbf0159f0c829d5f8807294" kindref="member">can_id_tx</ref>;<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>standard<sp/>CAN<sp/>ID<sp/>from<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>txHeader.IDE<sp/>=<sp/>CAN_ID_STD;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>standard<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>txHeader.RTR<sp/>=<sp/>CAN_RTR_DATA;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>txHeader.DLC<sp/>=<sp/>3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>length<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>message<sp/>payload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[3]<sp/>=<sp/>{0x3D,<sp/>RegID,<sp/>0};<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>request<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transmit<sp/>the<sp/>CAN<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_CAN_AddTxMessage(&amp;<ref refid="can_8h_1ab77168d14df04ccca5d48612ee21ced8" kindref="member">hcan2</ref>,<sp/>&amp;txHeader,<sp/>data,<sp/>&amp;<ref refid="constants_8h_1aedd1e4ac418a9697f9f41a2713d49569" kindref="member">TxMailbox</ref>)<sp/>!=<sp/>HAL_OK)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>transmission<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;CAN<sp/>Request<sp/>Transmission<sp/>Failed&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>CAN<sp/>Response</highlight></codeline>
<codeline lineno="257" refid="motor__controller_8c_1a560fd64fa21f9583f346b08cd371afa4" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1a560fd64fa21f9583f346b08cd371afa4" kindref="member">WaitFor_CAN_Response</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>xSemaphoreTake(canResponseSemaphore,<sp/>pdMS_TO_TICKS(mc_default_settings.mc_CAN_timeout))<sp/>==<sp/>pdTRUE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>MC_Parse_Message(int<sp/>DLC,<sp/>uint8_t<sp/>Data[]){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>The<sp/>first<sp/>step<sp/>is<sp/>to<sp/>look<sp/>at<sp/>the<sp/>first<sp/>byte<sp/>to<sp/>figure<sp/>out<sp/>what<sp/>we&apos;re<sp/>looking<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>TODO<sp/>Need<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>Data[0]<sp/>really<sp/>is<sp/>the<sp/>first<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>switch<sp/>(Data[0]){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>important<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>motor_controller_errors_warnings:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MC_Check_Error_Warning(Data);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>//case<sp/>N_actual:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Decode<sp/>actual<sp/>motor<sp/>speed<sp/>from<sp/>Data<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//uint16_t<sp/>actual_speed<sp/>=<sp/>(Data[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>Data[2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>//break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Additional<sp/>cases<sp/>for<sp/>other<sp/>message<sp/>types:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>case<sp/>motor_temperature:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>case<sp/>DC_bus_voltage:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>default:<sp/>//<sp/>This<sp/>is<sp/>a<sp/>code<sp/>that<sp/>is<sp/>not<sp/>recognized<sp/>(bad)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error_Handler();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="comment">//void<sp/>MC_Request_Data(uint8_t<sp/>RegID){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>TxHeader.StdId<sp/>=<sp/>MC_CAN_ID_Tx;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>TxHeader.DLC<sp/>=<sp/>3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>TxData[0]<sp/>=<sp/>0x3D;<sp/>//<sp/>this<sp/>is<sp/>the<sp/>code<sp/>to<sp/>request<sp/>data<sp/>from<sp/>MC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>TxData[1]<sp/>=<sp/>RegID;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>TxData[2]<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(HAL_CAN_AddTxMessage(&amp;hcan2,<sp/>&amp;TxHeader,<sp/>TxData,<sp/>&amp;TxMailbox)<sp/>!=<sp/>HAL_OK){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>Transmission<sp/>request<sp/>Error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Error_Handler();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>either<sp/>send<sp/>2<sp/>or<sp/>4<sp/>bytes<sp/>of<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>correspond<sp/>to<sp/>a<sp/>DLC<sp/>of<sp/>3<sp/>or<sp/>5,<sp/>respectively</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>byte<sp/>needs<sp/>to<sp/>be<sp/>the<sp/>register<sp/>ID,<sp/>then<sp/>either<sp/>2<sp/>or<sp/>4<sp/>bytes<sp/>of<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>size<sp/>is<sp/>either<sp/>2<sp/>or<sp/>4<sp/>and<sp/>is<sp/>very<sp/>important</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>motor<sp/>controller<sp/>wants<sp/>0x1234,<sp/>the<sp/>input<sp/>to<sp/>this<sp/>function<sp/>should<sp/>be<sp/>0x1234</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>MC_Send_Data(uint8_t<sp/>RegID,<sp/>uint8_t<sp/>data_to_send[],<sp/>uint8_t<sp/>size){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>TxHeader.StdId<sp/>=<sp/>MC_CAN_ID_Tx;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>TxHeader.DLC<sp/>=<sp/>size;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>TxData[0]<sp/>=<sp/>RegID;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>switch<sp/>(size){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>case<sp/>2:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>TxData[1]<sp/>=<sp/>data_to_send[2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>TxData[2]<sp/>=<sp/>data_to_send[1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>case<sp/>4:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>TxData[1]<sp/>=<sp/>data_to_send[4];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>TxData[2]<sp/>=<sp/>data_to_send[3];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>TxData[3]<sp/>=<sp/>data_to_send[2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>TxData[4]<sp/>=<sp/>data_to_send[1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>default:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(HAL_CAN_AddTxMessage(&amp;hcan2,<sp/>&amp;TxHeader,<sp/>TxData,<sp/>&amp;TxMailbox)<sp/>!=<sp/>HAL_OK){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>Transmission<sp/>request<sp/>Error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Error_Handler();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>speed/torque<sp/>control<sp/>will<sp/>either<sp/>take<sp/>the<sp/>ADC<sp/>value<sp/>from<sp/>APPSs<sp/>then<sp/>do<sp/>math<sp/>and<sp/>send<sp/>msg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Or<sp/>we&apos;ll<sp/>do<sp/>the<sp/>math<sp/>in<sp/>the<sp/>main<sp/>and<sp/>then<sp/>just<sp/>send<sp/>motor<sp/>controller<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>MC_Torque_Control(int<sp/>todo){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>Need<sp/>to<sp/>figure<sp/>out<sp/>best<sp/>way<sp/>to<sp/>do<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">//NGL,<sp/>probably<sp/>want<sp/>these<sp/>in<sp/>driving<sp/>loop<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">//#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>MC_Speed_Control(int<sp/>ADC_value){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>TODO<sp/>verify<sp/>endian<sp/>and<sp/>deal<sp/>with<sp/>source<sp/>of<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>ADC_percentage<sp/>=<sp/>ADC_value<sp/>/<sp/>(0xFFF);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>uint16_t<sp/>scaled_motor_speed<sp/>=<sp/>ADC_percentage*max_motor_speed;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>desired_motor_speed[0]<sp/>=<sp/>(scaled_motor_speed<sp/>&amp;<sp/>0xff00)<sp/>&gt;&gt;<sp/>8;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>desired_motor_speed[1]<sp/>=<sp/>scaled_motor_speed<sp/>&amp;<sp/>0x00ff;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MC_Send_Data(N_set,<sp/>desired_motor_speed,<sp/>2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>MC_Check_Error_Warning(uint8_t<sp/>Data[]){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>The<sp/>motor<sp/>controller<sp/>will<sp/>send<sp/>a<sp/>message<sp/>with<sp/>6<sp/>bytes<sp/>of<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>The<sp/>first<sp/>byte<sp/>is<sp/>the<sp/>register<sp/>ID,<sp/>which<sp/>in<sp/>this<sp/>case<sp/>is<sp/>0x8F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>The<sp/>second<sp/>and<sp/>third<sp/>byte<sp/>are<sp/>low<sp/>bytes<sp/>which<sp/>correspond<sp/>to<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>The<sp/>order<sp/>of<sp/>bits<sp/>in<sp/>the<sp/>low<sp/>bytes<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>7<sp/>6<sp/>5<sp/>4<sp/>3<sp/>2<sp/>1<sp/>0<sp/><sp/>15<sp/>14<sp/>13<sp/>12<sp/>11<sp/>10<sp/>9<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>The<sp/>fourth<sp/>and<sp/>fifth<sp/>bytes<sp/>are<sp/>high<sp/>bytes<sp/>and<sp/>correspond<sp/>to<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>The<sp/>order<sp/>of<sp/>bits<sp/>in<sp/>the<sp/>high<sp/>bytes<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>23<sp/>22<sp/>21<sp/>20<sp/>19<sp/>18<sp/>17<sp/>16<sp/><sp/><sp/>31<sp/>30<sp/>29<sp/>28<sp/>27<sp/>26<sp/>25<sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>We<sp/>need<sp/>to<sp/>and<sp/>the<sp/>bytes<sp/>with<sp/>the<sp/>right<sp/>bitmasks<sp/>and<sp/>check<sp/>for<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>Split<sp/>four<sp/>bytes<sp/>into<sp/>2<sp/>high<sp/>and<sp/>2<sp/>low<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>uint16_t<sp/>MC_errors<sp/>=<sp/>(Data[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>Data[2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>uint16_t<sp/>MC_warnings<sp/>=<sp/>(Data[3]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>Data[4];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>All<sp/>the<sp/>error<sp/>flags<sp/>should<sp/>be<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(MC_errors){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Compare<sp/>errors<sp/>to<sp/>errors<sp/>bitmask<sp/>to<sp/>determine<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_errors<sp/>&amp;<sp/>eprom_read_error){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;Eprom<sp/>read<sp/>error&quot;,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_errors<sp/>&amp;<sp/>hardware_fault){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;Hardware<sp/>Fault&quot;,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_errors<sp/>&amp;<sp/>rotate_field_enable_not_present_run){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;Rotating<sp/>Field<sp/>Enable<sp/>Not<sp/>Present&quot;,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_errors<sp/>&amp;<sp/>CAN_timeout_error){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;CAN<sp/>Timeout<sp/>Error&quot;,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_errors<sp/>&amp;<sp/>feedback_signal_error){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;Feedback<sp/>Signal<sp/>Error&quot;,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_errors<sp/>&amp;<sp/>mains_voltage_min_limit){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;Mains<sp/>Voltage<sp/>Min<sp/>Limit&quot;,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_errors<sp/>&amp;<sp/>motor_temp_max_limit){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;Motor<sp/>Temp<sp/>Max<sp/>Limit&quot;,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_errors<sp/>&amp;<sp/>IGBT_temp_max_limit){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;IGBT<sp/>Temp<sp/>Max<sp/>Limit&quot;,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_errors<sp/>&amp;<sp/>mains_voltage_max_limit){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;Mains<sp/>Voltage<sp/>Max<sp/>Limit&quot;,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_errors<sp/>&amp;<sp/>critical_AC_current){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;Critical<sp/>AC<sp/>Current&quot;,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_errors<sp/>&amp;<sp/>race_away_detected){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;Race<sp/>Away<sp/>Detected&quot;,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_errors<sp/>&amp;<sp/>ecode_timeout_error){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;Ecode<sp/>Time<sp/>Out<sp/>Error&quot;,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_errors<sp/>&amp;<sp/>watchdog_reset){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;Watchdog<sp/>Reset&quot;,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_errors<sp/>&amp;<sp/>AC_current_offset_fault){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;AC<sp/>Current<sp/>Offset<sp/>Fault&quot;,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_errors<sp/>&amp;<sp/>internal_hardware_voltage_problem){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;Internal<sp/>Hardware<sp/>Voltage<sp/>Problem&quot;,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_errors<sp/>&amp;<sp/>bleed_resistor_overload){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;Motor<sp/>Controller<sp/>not<sp/>found&quot;,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(MC_warnings){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>compare<sp/>warnings<sp/>to<sp/>warnings<sp/>bitmask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_warnings<sp/>&amp;<sp/>parameter_conflict_detected){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_warnings<sp/>&amp;<sp/>special_CPU_fault){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_warnings<sp/>&amp;<sp/>rotate_field_enable_not_present_norun){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_warnings<sp/>&amp;<sp/>auxiliary_voltage_min_limit){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_warnings<sp/>&amp;<sp/>feedback_signal_problem){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_warnings<sp/>&amp;<sp/>warning_5){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_warnings<sp/>&amp;<sp/>motor_temperature_warning){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_warnings<sp/>&amp;<sp/>IGBT_temperature_warning){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_warnings<sp/>&amp;<sp/>Vout_saturation_max_limit){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_warnings<sp/>&amp;<sp/>warning_9){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_warnings<sp/>&amp;<sp/>speed_actual_resolution_limit){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_warnings<sp/>&amp;<sp/>check_ecode_ID<sp/>){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_warnings<sp/>&amp;<sp/>tripzone_glitch_detected){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_warnings<sp/>&amp;<sp/>ADC_sequencer_problem){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_warnings<sp/>&amp;<sp/>ADC_measurement_problem){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MC_warnings<sp/>&amp;<sp/>bleeder_resistor_warning){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>MC_Check_Serial_Number(uint8_t<sp/>Data[]){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>TODO<sp/>check<sp/>serial<sp/>number</highlight></codeline>
<codeline lineno="511"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>uint32_t<sp/>serial_number<sp/>=<sp/>MC_Request_Data(SERIAL_NUMBER_REGISTER);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(serial_number<sp/>!=<sp/>MC_Expected_Serial_Number)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;Motor<sp/>Controller<sp/>Serial<sp/>Number<sp/>Mismatch&quot;,<sp/>0);<sp/><sp/>//<sp/>Call<sp/>error<sp/>handler<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>MC_Check_Firmware(uint8_t<sp/>Data[]){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>TODO<sp/>check<sp/>motor<sp/>controllers<sp/>firmware<sp/>matches</highlight></codeline>
<codeline lineno="522"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>uint16_t<sp/>firmware_version<sp/>=<sp/>MC_Request_Data(FIRMWARE_VERSION_REGISTER);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(firmware_version<sp/>!=<sp/>MC_Expected_FW_Version)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;Motor<sp/>Controller<sp/>Firmware<sp/>Version<sp/>Mismatch&quot;,<sp/>0);<sp/><sp/>//<sp/>Call<sp/>error<sp/>handler<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>MC_Startup(void*<sp/>args){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>MC_Send_Data(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>HAL_GPIO_TogglePin(GPIOD,GPIO_PIN_14);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>uv_init_task_args*<sp/>params<sp/>=<sp/>(uv_init_task_args*)<sp/>args;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>uv_init_task_response<sp/>response<sp/>=<sp/>{UV_OK,MOTOR_CONTROLLER,0,NULL};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//We<sp/>need<sp/>to<sp/>do<sp/>a<sp/>bunch<sp/>of<sp/>stuff<sp/>to<sp/>actually<sp/>initialize<sp/>the<sp/>motor<sp/>controller<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>motor_controller_settings*<sp/>settings<sp/>=<sp/>(motor_controller_settings*)<sp/>params-&gt;specific_args;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Step<sp/>1:<sp/>Check<sp/>serial<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>MC_Check_Serial_Number();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Step<sp/>2:<sp/>Check<sp/>firmware<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>MC_Check_Firmware();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="583"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//Kill<sp/>yourself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>vTaskSuspend(params-&gt;meta_task_handle);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591" refid="motor__controller_8c_1a40bf1b849ad7443bbe8af342006bb3cd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1a40bf1b849ad7443bbe8af342006bb3cd" kindref="member">MC_Check_Error_Warning</ref>(uint8_t<sp/>Data[]){</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>motor<sp/>controller<sp/>will<sp/>send<sp/>a<sp/>message<sp/>with<sp/>6<sp/>bytes<sp/>of<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>byte<sp/>is<sp/>the<sp/>register<sp/>ID,<sp/>which<sp/>in<sp/>this<sp/>case<sp/>is<sp/>0x8F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>second<sp/>and<sp/>third<sp/>byte<sp/>are<sp/>low<sp/>bytes<sp/>which<sp/>correspond<sp/>to<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>order<sp/>of<sp/>bits<sp/>in<sp/>the<sp/>low<sp/>bytes<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>7<sp/>6<sp/>5<sp/>4<sp/>3<sp/>2<sp/>1<sp/>0<sp/><sp/>15<sp/>14<sp/>13<sp/>12<sp/>11<sp/>10<sp/>9<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>fourth<sp/>and<sp/>fifth<sp/>bytes<sp/>are<sp/>high<sp/>bytes<sp/>and<sp/>correspond<sp/>to<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>order<sp/>of<sp/>bits<sp/>in<sp/>the<sp/>high<sp/>bytes<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>23<sp/>22<sp/>21<sp/>20<sp/>19<sp/>18<sp/>17<sp/>16<sp/><sp/><sp/>31<sp/>30<sp/>29<sp/>28<sp/>27<sp/>26<sp/>25<sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>and<sp/>the<sp/>bytes<sp/>with<sp/>the<sp/>right<sp/>bitmasks<sp/>and<sp/>check<sp/>for<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Split<sp/>four<sp/>bytes<sp/>into<sp/>2<sp/>high<sp/>and<sp/>2<sp/>low<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>MC_errors<sp/>=<sp/>(Data[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>Data[2];</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>MC_warnings<sp/>=<sp/>(Data[3]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>Data[4];</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>the<sp/>error<sp/>flags<sp/>should<sp/>be<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors){</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>errors<sp/>to<sp/>errors<sp/>bitmask<sp/>to<sp/>determine<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa87ada8cd125ba521b447d565c12bb30e" kindref="member">eprom_read_error</ref>){</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffae9da794167969482cb67bfad83a04d71" kindref="member">hardware_fault</ref>){</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffadae8b5f4fb6cd6712202d055529499ef" kindref="member">rotate_field_enable_not_present_run</ref>){</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa425430d2585733363b6043ed70ebd7ab" kindref="member">CAN_timeout_error</ref>){</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2a16f371b0570edeeb17214a398e4bfc" kindref="member">feedback_signal_error</ref>){</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa13726d0d6fc8dd12135f4ea92d1dcc92" kindref="member">mains_voltage_min_limit</ref>){</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2267f6ae60d8b9024ba418dd1f6d4b15" kindref="member">motor_temp_max_limit</ref>){</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa54a5ca5981535fd231b00a1040622950" kindref="member">IGBT_temp_max_limit</ref>){</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa229533ef674ddd4475b22e47eb506b49" kindref="member">mains_voltage_max_limit</ref>){</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa29aa452fe3c693b96c17c09849ee1633" kindref="member">critical_AC_current</ref>){</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa696b36face7279e19e2905b0fa9ecb68" kindref="member">race_away_detected</ref>){</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa0dd2c6834f96df064d7b152074a9f81f" kindref="member">ecode_timeout_error</ref>){</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa357611869a1ec791b38a36ec2dfe09b9" kindref="member">watchdog_reset</ref>){</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa0dbc9540bf7a4c67b6a2810985bfb55d" kindref="member">AC_current_offset_fault</ref>){</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa18df3363e2a0048a813dcef5a41785ce" kindref="member">internal_hardware_voltage_problem</ref>){</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa150953c78b7fcc8ae97a50a5b5765264" kindref="member">bleed_resistor_overload</ref>){</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings){</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compare<sp/>warnings<sp/>to<sp/>warnings<sp/>bitmask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2fbc7fdf1ab20514fac8d6418291a114" kindref="member">parameter_conflict_detected</ref>){</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa7483be8346bb7b2fdfb418383961fba7" kindref="member">special_CPU_fault</ref>){</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa3689755161fb5aa5fae86b270bfbf5fc" kindref="member">rotate_field_enable_not_present_norun</ref>){</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa03e3fe1a981eecdeb19cd0589bdcc6f8" kindref="member">auxiliary_voltage_min_limit</ref>){</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffab6733322e6c8c5197b108e853a58ad13" kindref="member">feedback_signal_problem</ref>){</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa3050ef440e4e82f9fb3973e1fb9faea7" kindref="member">warning_5</ref>){</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa4e9b2370bf4b4680b4c2471d2f7d312e" kindref="member">motor_temperature_warning</ref>){</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa298d28f3aa38960b5d1349a04cbbca95" kindref="member">IGBT_temperature_warning</ref>){</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffaf06c0a389c1c73850def361e9bd7ffdc" kindref="member">Vout_saturation_max_limit</ref>){</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffad53242de6aeaa134a78749bc60fec984" kindref="member">warning_9</ref>){</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2c5d3b1ee0135916f17e89f331429ed5" kindref="member">speed_actual_resolution_limit</ref>){</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa3d2e8b6cb27af4a0a1121c419594bbfa" kindref="member">check_ecode_ID</ref><sp/>){</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa618e6f62f2e284a9fec848782c9473c7" kindref="member">tripzone_glitch_detected</ref>){</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa9c77d3a416d8465efe129cf8ad401cfe" kindref="member">ADC_sequencer_problem</ref>){</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffac02a9e080dc6bde671fa915b7e254c67" kindref="member">ADC_measurement_problem</ref>){</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MC_warnings<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffae0c6a82b11d3fb69b758c350960f5a2a" kindref="member">bleeder_resistor_warning</ref>){</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>great</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717" refid="motor__controller_8c_1ac592ffd65d2793aadca7ca158a3d2dbc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1ac592ffd65d2793aadca7ca158a3d2dbc" kindref="member">MC_Validate</ref>(){</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721" refid="motor__controller_8c_1af34e05da8add9233de12150656dad092" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1af34e05da8add9233de12150656dad092" kindref="member">MC_Check_Serial_Number</ref>(uint8_t<sp/>Data[]){</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725" refid="motor__controller_8c_1a877a1b68c89c7eeecc3ed294e5dc8a73" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1a877a1b68c89c7eeecc3ed294e5dc8a73" kindref="member">MC_Check_Firmware</ref>(uint8_t<sp/>Data[]){</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Motor<sp/>Controller<sp/>Initialization</highlight></codeline>
<codeline lineno="739" refid="motor__controller_8c_1aed1407e1e0fd59dc7c5e5d6db671f0ab" refkind="member"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1aed1407e1e0fd59dc7c5e5d6db671f0ab" kindref="member">MC_Startup</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>args){</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MC_Send_Data(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_GPIO_TogglePin(GPIOD,GPIO_PIN_14);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structuv__init__task__args" kindref="compound">uv_init_task_args</ref>*<sp/>params<sp/>=<sp/>(<ref refid="structuv__init__task__args" kindref="compound">uv_init_task_args</ref>*)<sp/>args;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structuv__init__task__response" kindref="compound">uv_init_task_response</ref><sp/>response<sp/>=<sp/>{<ref refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" kindref="member">UV_OK</ref>,<ref refid="uvfr__utils_8h_1ad70cbc8929c4ad7a5901cd9eef5ca9b0a9c632ecb370b78547a390d1b5cf59671" kindref="member">MOTOR_CONTROLLER</ref>,0,NULL};</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>need<sp/>to<sp/>do<sp/>a<sp/>bunch<sp/>of<sp/>stuff<sp/>to<sp/>actually<sp/>initialize<sp/>the<sp/>motor<sp/>controller<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmotor__controllor__settings" kindref="compound">motor_controller_settings</ref>*<sp/>settings<sp/>=<sp/>(<ref refid="structmotor__controllor__settings" kindref="compound">motor_controller_settings</ref>*)<sp/>params-&gt;<ref refid="structuv__init__task__args_1a61a9b579a1e65a3875a4edf3201a39f3" kindref="member">specific_args</ref>;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>end_mc_init;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" kindref="member">MC_Request_Data</ref>(<ref refid="motor__controller_8h_1aab8c03dc3480e25a7a75b60edbf51cb3" kindref="member">SERIAL_NUMBER_REGISTER</ref>);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="motor__controller_8c_1a560fd64fa21f9583f346b08cd371afa4" kindref="member">WaitFor_CAN_Response</ref>())<sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Serial<sp/>Number<sp/>Request<sp/>Timeout&quot;</highlight><highlight class="normal">,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>No<sp/>response<sp/>received</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial_number<sp/>=<sp/><ref refid="motor__controller_8c_1a6e0eaf3bbf353c1b2b7b4ae59e928722" kindref="member">Parse_Bamocar_Response</ref>(<ref refid="constants_8h_1a14629afcc7f0b2d62c2b617b07d98184" kindref="member">RxData</ref>,<sp/>8);<sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(serial_number<sp/>!=<sp/><ref refid="motor__controller_8c_1a26195bc72f07eeb97338e761432e03d2" kindref="member">MC_Expected_Serial_Number</ref>)<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Serial<sp/>Number<sp/>Mismatch&quot;</highlight><highlight class="normal">,<sp/>serial_number);<sp/></highlight><highlight class="comment">//<sp/>Serial<sp/>number<sp/>mismatch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>2:<sp/>Check<sp/>Firmware<sp/>Version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" kindref="member">MC_Request_Data</ref>(<ref refid="motor__controller_8h_1a829d1af845327949015b4e83bb6fc43d" kindref="member">FIRMWARE_VERSION_REGISTER</ref>);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="motor__controller_8c_1a560fd64fa21f9583f346b08cd371afa4" kindref="member">WaitFor_CAN_Response</ref>())<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Firmware<sp/>Version<sp/>Request<sp/>Timeout&quot;</highlight><highlight class="normal">,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>No<sp/>response<sp/>received</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="motor__controller_8h_1a0376dfd1eed1d027d96561fd24e48242aed26e85027514bcd1ca8c3c17c03bef2" kindref="member">firmware_version</ref><sp/>=<sp/>(<ref refid="constants_8h_1a14629afcc7f0b2d62c2b617b07d98184" kindref="member">RxData</ref>[0]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="constants_8h_1a14629afcc7f0b2d62c2b617b07d98184" kindref="member">RxData</ref>[1];<sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>firmware<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="motor__controller_8h_1a0376dfd1eed1d027d96561fd24e48242aed26e85027514bcd1ca8c3c17c03bef2" kindref="member">firmware_version</ref><sp/>!=<sp/><ref refid="motor__controller_8c_1a8f25ebbc9bf59980fdc0458f271437ee" kindref="member">MC_Expected_FW_Version</ref>)<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Firmware<sp/>Version<sp/>Mismatch&quot;</highlight><highlight class="normal">,<sp/><ref refid="motor__controller_8h_1a0376dfd1eed1d027d96561fd24e48242aed26e85027514bcd1ca8c3c17c03bef2" kindref="member">firmware_version</ref>);<sp/></highlight><highlight class="comment">//<sp/>Firmware<sp/>mismatch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>3:<sp/>Spin<sp/>Motor<sp/>Test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="motor__controller_8c_1a71371a5194c9b5c725abec77feffbc38" kindref="member">MotorControllerSpinTest</ref>()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Motor<sp/>Spin<sp/>Test<sp/>Failed&quot;</highlight><highlight class="normal">,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>Spin<sp/>test<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>4:<sp/>Check<sp/>for<sp/>Errors<sp/>and<sp/>Warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" kindref="member">MC_Request_Data</ref>(<ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa595211bb6640ca05c1c3344b47e2890f" kindref="member">motor_controller_errors_warnings</ref>);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="motor__controller_8c_1a560fd64fa21f9583f346b08cd371afa4" kindref="member">WaitFor_CAN_Response</ref>())<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Error/Warning<sp/>Request<sp/>Timeout&quot;</highlight><highlight class="normal">,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>No<sp/>response<sp/>received</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="motor__controller_8c_1ae459dcb08bdf9b88ccc2de10bee4c409" kindref="member">MotorControllerErrorHandler</ref>(<ref refid="constants_8h_1a14629afcc7f0b2d62c2b617b07d98184" kindref="member">RxData</ref>,<sp/>8);<sp/></highlight><highlight class="comment">//<sp/>Process<sp/>errors<sp/>and<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_mc_init:</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xQueueSendToBack(params-&gt;<ref refid="structuv__init__task__args_1adec47e7a54822cacfb8fcfc35a22157f" kindref="member">init_info_queue</ref>,&amp;response,100)<sp/>!=<sp/>pdPASS){</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//OOPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>enqueue<sp/>MC<sp/>OK<sp/>Response&quot;</highlight><highlight class="normal">,0);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Kill<sp/>yourself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskSuspend(params-&gt;<ref refid="structuv__init__task__args_1a3b81430245e7f832dc1112e53b0ef7ad" kindref="member">meta_task_handle</ref>);</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Core/Src/motor_controller.c"/>
  </compounddef>
</doxygen>
