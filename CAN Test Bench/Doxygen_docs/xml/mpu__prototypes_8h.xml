<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="mpu__prototypes_8h" kind="file" language="C++">
    <compoundname>mpu_prototypes.h</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="mpu__prototypes_8h_1a53ce0915f0062120137efcc89b415715" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskCreate</definition>
        <argsstring>(TaskFunction_t pxTaskCode, const char *const pcName, const uint16_t usStackDepth, void *const pvParameters, UBaseType_t uxPriority, TaskHandle_t *const pxCreatedTask) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTaskCreate</name>
        <param>
          <type><ref refid="projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0" kindref="member">TaskFunction_t</ref></type>
          <declname>pxTaskCode</declname>
        </param>
        <param>
          <type>const char *const</type>
          <declname>pcName</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>usStackDepth</declname>
        </param>
        <param>
          <type>void *const</type>
          <declname>pvParameters</declname>
        </param>
        <param>
          <type>UBaseType_t</type>
          <declname>uxPriority</declname>
        </param>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref> *const</type>
          <declname>pxCreatedTask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="41" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="41" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a3265dccf6178f6b886cf0743886b7662" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
        <definition>TaskHandle_t MPU_xTaskCreateStatic</definition>
        <argsstring>(TaskFunction_t pxTaskCode, const char *const pcName, const uint32_t ulStackDepth, void *const pvParameters, UBaseType_t uxPriority, StackType_t *const puxStackBuffer, StaticTask_t *const pxTaskBuffer) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTaskCreateStatic</name>
        <param>
          <type><ref refid="projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0" kindref="member">TaskFunction_t</ref></type>
          <declname>pxTaskCode</declname>
        </param>
        <param>
          <type>const char *const</type>
          <declname>pcName</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>ulStackDepth</declname>
        </param>
        <param>
          <type>void *const</type>
          <declname>pvParameters</declname>
        </param>
        <param>
          <type>UBaseType_t</type>
          <declname>uxPriority</declname>
        </param>
        <param>
          <type>StackType_t *const</type>
          <declname>puxStackBuffer</declname>
        </param>
        <param>
          <type><ref refid="_free_r_t_o_s_8h_1a1af40d1b7ab8cb328bac2d92d7378c38" kindref="member">StaticTask_t</ref> *const</type>
          <declname>pxTaskBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="42" column="14" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="42" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1aaf2329942140771305220948bc69b1b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskCreateRestricted</definition>
        <argsstring>(const TaskParameters_t *const pxTaskDefinition, TaskHandle_t *pxCreatedTask) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTaskCreateRestricted</name>
        <param>
          <type>const <ref refid="task_8h_1aab31598a83ebd71dfce65f58add35676" kindref="member">TaskParameters_t</ref> *const</type>
          <declname>pxTaskDefinition</declname>
        </param>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref> *</type>
          <declname>pxCreatedTask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="43" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="43" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a0a1c9271074f19d7d3ec5de2cfd4971f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskCreateRestrictedStatic</definition>
        <argsstring>(const TaskParameters_t *const pxTaskDefinition, TaskHandle_t *pxCreatedTask) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTaskCreateRestrictedStatic</name>
        <param>
          <type>const <ref refid="task_8h_1aab31598a83ebd71dfce65f58add35676" kindref="member">TaskParameters_t</ref> *const</type>
          <declname>pxTaskDefinition</declname>
        </param>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref> *</type>
          <declname>pxCreatedTask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="44" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="44" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a9960d84fdd937f613a2a1255db733263" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskAllocateMPURegions</definition>
        <argsstring>(TaskHandle_t xTask, const MemoryRegion_t *const pxRegions) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vTaskAllocateMPURegions</name>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
          <declname>xTask</declname>
        </param>
        <param>
          <type>const <ref refid="task_8h_1af609504de4d78ff6f71477ae47c66e51" kindref="member">MemoryRegion_t</ref> *const</type>
          <declname>pxRegions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="45" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="45" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1accbd3a6ed5d7bf2f8689a04b6b3f72d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskDelete</definition>
        <argsstring>(TaskHandle_t xTaskToDelete) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vTaskDelete</name>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
          <declname>xTaskToDelete</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="46" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="46" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a66ead786f745d188bbd3d0bf30c51069" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskDelay</definition>
        <argsstring>(const TickType_t xTicksToDelay) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vTaskDelay</name>
        <param>
          <type>const TickType_t</type>
          <declname>xTicksToDelay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="47" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="47" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ad50c8ffb6798f50f7b0cc901f35c603f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskDelayUntil</definition>
        <argsstring>(TickType_t *const pxPreviousWakeTime, const TickType_t xTimeIncrement) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vTaskDelayUntil</name>
        <param>
          <type>TickType_t *const</type>
          <declname>pxPreviousWakeTime</declname>
        </param>
        <param>
          <type>const TickType_t</type>
          <declname>xTimeIncrement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="48" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="48" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a5789e4f7340c707c713afa6165ca3363" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskAbortDelay</definition>
        <argsstring>(TaskHandle_t xTask) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTaskAbortDelay</name>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
          <declname>xTask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="49" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="49" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a27c701344d8bab83d9cb1d1cd5aca487" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UBaseType_t</type>
        <definition>UBaseType_t MPU_uxTaskPriorityGet</definition>
        <argsstring>(const TaskHandle_t xTask) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_uxTaskPriorityGet</name>
        <param>
          <type>const <ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
          <declname>xTask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="50" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="50" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a2fa518228b2b8cf0d56868d26744a9b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="task_8h_1a1749369458e2282a22e862a619a3892c" kindref="member">eTaskState</ref></type>
        <definition>eTaskState MPU_eTaskGetState</definition>
        <argsstring>(TaskHandle_t xTask) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_eTaskGetState</name>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
          <declname>xTask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="51" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="51" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a9232f18c3a1657f0b2aa3c6c011a341e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskGetInfo</definition>
        <argsstring>(TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, eTaskState eState) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vTaskGetInfo</name>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
          <declname>xTask</declname>
        </param>
        <param>
          <type><ref refid="task_8h_1a34f88ef69814fb27d554e666e9868a9c" kindref="member">TaskStatus_t</ref> *</type>
          <declname>pxTaskStatus</declname>
        </param>
        <param>
          <type>BaseType_t</type>
          <declname>xGetFreeStackSpace</declname>
        </param>
        <param>
          <type><ref refid="task_8h_1a1749369458e2282a22e862a619a3892c" kindref="member">eTaskState</ref></type>
          <declname>eState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="52" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="52" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a8665769af5e4e4dd56ba3b72ba9e933b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskPrioritySet</definition>
        <argsstring>(TaskHandle_t xTask, UBaseType_t uxNewPriority) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vTaskPrioritySet</name>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
          <declname>xTask</declname>
        </param>
        <param>
          <type>UBaseType_t</type>
          <declname>uxNewPriority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="53" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="53" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a2456fbe3861db2f8e5df961a2fc0ad25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskSuspend</definition>
        <argsstring>(TaskHandle_t xTaskToSuspend) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vTaskSuspend</name>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
          <declname>xTaskToSuspend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="54" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="54" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a5116e0f1df45bba9e351e54fff6e8d14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskResume</definition>
        <argsstring>(TaskHandle_t xTaskToResume) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vTaskResume</name>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
          <declname>xTaskToResume</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="55" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="55" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a67bc097861923c6eee50b87b8655c412" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskStartScheduler</definition>
        <argsstring>(void) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vTaskStartScheduler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="56" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="56" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a383cc2047ccf2b6bcbca1ec65229ab70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskSuspendAll</definition>
        <argsstring>(void) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vTaskSuspendAll</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="57" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="57" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ac0ae320f4e0d00e2f642b7677268a5fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskResumeAll</definition>
        <argsstring>(void) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTaskResumeAll</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="58" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="58" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a3f40c6063f43373dc4208989db24eb7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TickType_t</type>
        <definition>TickType_t MPU_xTaskGetTickCount</definition>
        <argsstring>(void) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTaskGetTickCount</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="59" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="59" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a034d9f2f59ea4aa37bd67a4c9d4b3cd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UBaseType_t</type>
        <definition>UBaseType_t MPU_uxTaskGetNumberOfTasks</definition>
        <argsstring>(void) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_uxTaskGetNumberOfTasks</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="60" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="60" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a881b88f1952798f3da1c459c0f4f20aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* MPU_pcTaskGetName</definition>
        <argsstring>(TaskHandle_t xTaskToQuery) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_pcTaskGetName</name>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
          <declname>xTaskToQuery</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="61" column="7" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="61" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a64a8ffb45977a187281e0316226f7a9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
        <definition>TaskHandle_t MPU_xTaskGetHandle</definition>
        <argsstring>(const char *pcNameToQuery) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTaskGetHandle</name>
        <param>
          <type>const char *</type>
          <declname>pcNameToQuery</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="62" column="14" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="62" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ade37d3f7d9b904e7b0a427b8562f6c9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UBaseType_t</type>
        <definition>UBaseType_t MPU_uxTaskGetStackHighWaterMark</definition>
        <argsstring>(TaskHandle_t xTask) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_uxTaskGetStackHighWaterMark</name>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
          <declname>xTask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="63" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="63" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a99dd993526c3d8b4ebb4e39007faa9ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_free_r_t_o_s_8h_1ae4e85bffd36d76cf2796092f0ccd784a" kindref="member">configSTACK_DEPTH_TYPE</ref></type>
        <definition>configSTACK_DEPTH_TYPE MPU_uxTaskGetStackHighWaterMark2</definition>
        <argsstring>(TaskHandle_t xTask) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_uxTaskGetStackHighWaterMark2</name>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
          <declname>xTask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="64" column="24" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="64" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a9db7ba4634b70ce01c3c80b94930ac57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskSetApplicationTaskTag</definition>
        <argsstring>(TaskHandle_t xTask, TaskHookFunction_t pxHookFunction) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vTaskSetApplicationTaskTag</name>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
          <declname>xTask</declname>
        </param>
        <param>
          <type><ref refid="task_8h_1af984026250bf8fece2e0068874d4661d" kindref="member">TaskHookFunction_t</ref></type>
          <declname>pxHookFunction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="65" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="65" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ab96febf9ce3574ebbc73f07d798156f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="task_8h_1af984026250bf8fece2e0068874d4661d" kindref="member">TaskHookFunction_t</ref></type>
        <definition>TaskHookFunction_t MPU_xTaskGetApplicationTaskTag</definition>
        <argsstring>(TaskHandle_t xTask) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTaskGetApplicationTaskTag</name>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
          <declname>xTask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="66" column="20" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="66" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a1c57bdf4ed6db4253d3e7a4968e3770d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskSetThreadLocalStoragePointer</definition>
        <argsstring>(TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vTaskSetThreadLocalStoragePointer</name>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
          <declname>xTaskToSet</declname>
        </param>
        <param>
          <type>BaseType_t</type>
          <declname>xIndex</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pvValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="67" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="67" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1aa812f838249da470c574c9e13d0e1dc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* MPU_pvTaskGetThreadLocalStoragePointer</definition>
        <argsstring>(TaskHandle_t xTaskToQuery, BaseType_t xIndex) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_pvTaskGetThreadLocalStoragePointer</name>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
          <declname>xTaskToQuery</declname>
        </param>
        <param>
          <type>BaseType_t</type>
          <declname>xIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="68" column="7" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="68" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a49c1dbec95aef701cb84a1bd3b5e21b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskCallApplicationTaskHook</definition>
        <argsstring>(TaskHandle_t xTask, void *pvParameter) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTaskCallApplicationTaskHook</name>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
          <declname>xTask</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pvParameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="69" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="69" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1adea5fb61044c3b5538d958680b1edd85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
        <definition>TaskHandle_t MPU_xTaskGetIdleTaskHandle</definition>
        <argsstring>(void) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTaskGetIdleTaskHandle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="70" column="14" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="70" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1af76f3597175bac3f84ca4f7494433068" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UBaseType_t</type>
        <definition>UBaseType_t MPU_uxTaskGetSystemState</definition>
        <argsstring>(TaskStatus_t *const pxTaskStatusArray, const UBaseType_t uxArraySize, uint32_t *const pulTotalRunTime) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_uxTaskGetSystemState</name>
        <param>
          <type><ref refid="task_8h_1a34f88ef69814fb27d554e666e9868a9c" kindref="member">TaskStatus_t</ref> *const</type>
          <declname>pxTaskStatusArray</declname>
        </param>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxArraySize</declname>
        </param>
        <param>
          <type>uint32_t *const</type>
          <declname>pulTotalRunTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="71" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="71" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a750a835c2aa49865d88f01278e3bb2bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t MPU_ulTaskGetIdleRunTimeCounter</definition>
        <argsstring>(void) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_ulTaskGetIdleRunTimeCounter</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="72" column="10" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="72" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a21b44bd0c658199fe3b0ffb0266811e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskList</definition>
        <argsstring>(char *pcWriteBuffer) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vTaskList</name>
        <param>
          <type>char *</type>
          <declname>pcWriteBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="73" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="73" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ae8018fcf78cd91a7c3c256aa6fee1f7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskGetRunTimeStats</definition>
        <argsstring>(char *pcWriteBuffer) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vTaskGetRunTimeStats</name>
        <param>
          <type>char *</type>
          <declname>pcWriteBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="74" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="74" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a3e782699de49b0bf8382df0b05c1a967" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskGenericNotify</definition>
        <argsstring>(TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTaskGenericNotify</name>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
          <declname>xTaskToNotify</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ulValue</declname>
        </param>
        <param>
          <type><ref refid="task_8h_1ae8abc4f7da5b6880467daafbf19cd233" kindref="member">eNotifyAction</ref></type>
          <declname>eAction</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>pulPreviousNotificationValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="75" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="75" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ac160d248a7ac595a078301610aeea5eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskNotifyWait</definition>
        <argsstring>(uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t *pulNotificationValue, TickType_t xTicksToWait) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTaskNotifyWait</name>
        <param>
          <type>uint32_t</type>
          <declname>ulBitsToClearOnEntry</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ulBitsToClearOnExit</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>pulNotificationValue</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="76" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="76" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1aaf2f2946284b2684ffb04dc8b5461dd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t MPU_ulTaskNotifyTake</definition>
        <argsstring>(BaseType_t xClearCountOnExit, TickType_t xTicksToWait) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_ulTaskNotifyTake</name>
        <param>
          <type>BaseType_t</type>
          <declname>xClearCountOnExit</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="77" column="10" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="77" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a5c5655bc7656778174b357ea86540993" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskNotifyStateClear</definition>
        <argsstring>(TaskHandle_t xTask) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTaskNotifyStateClear</name>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
          <declname>xTask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="78" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="78" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a1c47ddc39d67595b9546165e2d0a78d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t MPU_ulTaskNotifyValueClear</definition>
        <argsstring>(TaskHandle_t xTask, uint32_t ulBitsToClear) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_ulTaskNotifyValueClear</name>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
          <declname>xTask</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ulBitsToClear</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="79" column="10" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="79" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a7546d90ed3ddac32550096dc6b37c35e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskIncrementTick</definition>
        <argsstring>(void) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTaskIncrementTick</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="80" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="80" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ae3a1c8aeb60aa75841a2d224bb0765ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
        <definition>TaskHandle_t MPU_xTaskGetCurrentTaskHandle</definition>
        <argsstring>(void) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTaskGetCurrentTaskHandle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="81" column="14" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="81" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ace70e5eeb78a37b7d151400cf84ac11c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskSetTimeOutState</definition>
        <argsstring>(TimeOut_t *const pxTimeOut) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vTaskSetTimeOutState</name>
        <param>
          <type><ref refid="task_8h_1a5e1a80e591c8c42e2d21a29d70256ea2" kindref="member">TimeOut_t</ref> *const</type>
          <declname>pxTimeOut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="82" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="82" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a6a32c460aa7ea2dd09aaec9df8c1cf13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskCheckForTimeOut</definition>
        <argsstring>(TimeOut_t *const pxTimeOut, TickType_t *const pxTicksToWait) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTaskCheckForTimeOut</name>
        <param>
          <type><ref refid="task_8h_1a5e1a80e591c8c42e2d21a29d70256ea2" kindref="member">TimeOut_t</ref> *const</type>
          <declname>pxTimeOut</declname>
        </param>
        <param>
          <type>TickType_t *const</type>
          <declname>pxTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="83" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="83" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a37c11080d93ec1bec5819ef3f527259f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskMissedYield</definition>
        <argsstring>(void) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vTaskMissedYield</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="84" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="84" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ae67d37ffe2e61cfc3ffc8bae3b46af83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskGetSchedulerState</definition>
        <argsstring>(void) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTaskGetSchedulerState</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="85" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="85" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a7083d320aacaf721da8b86b463c77912" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskCatchUpTicks</definition>
        <argsstring>(TickType_t xTicksToCatchUp) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTaskCatchUpTicks</name>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToCatchUp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="86" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="86" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a8bdf259f59261ca4aa1e558754b4aea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xQueueGenericSend</definition>
        <argsstring>(QueueHandle_t xQueue, const void *const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xQueueGenericSend</name>
        <param>
          <type><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
          <declname>xQueue</declname>
        </param>
        <param>
          <type>const void *const</type>
          <declname>pvItemToQueue</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <param>
          <type>const BaseType_t</type>
          <declname>xCopyPosition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="89" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="89" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ad4f20d999158d27585199f957650ceda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xQueueReceive</definition>
        <argsstring>(QueueHandle_t xQueue, void *const pvBuffer, TickType_t xTicksToWait) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xQueueReceive</name>
        <param>
          <type><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
          <declname>xQueue</declname>
        </param>
        <param>
          <type>void *const</type>
          <declname>pvBuffer</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="90" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="90" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ab43f2a1eabbc923c4f7cea113c29c2a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xQueuePeek</definition>
        <argsstring>(QueueHandle_t xQueue, void *const pvBuffer, TickType_t xTicksToWait) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xQueuePeek</name>
        <param>
          <type><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
          <declname>xQueue</declname>
        </param>
        <param>
          <type>void *const</type>
          <declname>pvBuffer</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="91" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="91" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a4109a6df9e1ff8f7469cfe94b4258fe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xQueueSemaphoreTake</definition>
        <argsstring>(QueueHandle_t xQueue, TickType_t xTicksToWait) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xQueueSemaphoreTake</name>
        <param>
          <type><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
          <declname>xQueue</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="92" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="92" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a7db460ed658e169261ecca82fabf277e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UBaseType_t</type>
        <definition>UBaseType_t MPU_uxQueueMessagesWaiting</definition>
        <argsstring>(const QueueHandle_t xQueue) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_uxQueueMessagesWaiting</name>
        <param>
          <type>const <ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
          <declname>xQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="93" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="93" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a67aec1ebd939c5f98116a8ff03b2ed58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UBaseType_t</type>
        <definition>UBaseType_t MPU_uxQueueSpacesAvailable</definition>
        <argsstring>(const QueueHandle_t xQueue) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_uxQueueSpacesAvailable</name>
        <param>
          <type>const <ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
          <declname>xQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="94" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="94" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a08116a96ea4b07eda68f3e4aa6897b51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vQueueDelete</definition>
        <argsstring>(QueueHandle_t xQueue) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vQueueDelete</name>
        <param>
          <type><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
          <declname>xQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="95" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="95" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a16739521de6a7034e0d4181e65d8ed93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
        <definition>QueueHandle_t MPU_xQueueCreateMutex</definition>
        <argsstring>(const uint8_t ucQueueType) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xQueueCreateMutex</name>
        <param>
          <type>const uint8_t</type>
          <declname>ucQueueType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="96" column="15" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="96" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ab081f53ca41be95c6a47f89b4790ef23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
        <definition>QueueHandle_t MPU_xQueueCreateMutexStatic</definition>
        <argsstring>(const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xQueueCreateMutexStatic</name>
        <param>
          <type>const uint8_t</type>
          <declname>ucQueueType</declname>
        </param>
        <param>
          <type><ref refid="_free_r_t_o_s_8h_1a9deecb4f17c68b05469a3019cc674bac" kindref="member">StaticQueue_t</ref> *</type>
          <declname>pxStaticQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="97" column="15" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="97" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a013ee62a2ce409e0104bcff21dfd5475" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
        <definition>QueueHandle_t MPU_xQueueCreateCountingSemaphore</definition>
        <argsstring>(const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xQueueCreateCountingSemaphore</name>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxMaxCount</declname>
        </param>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxInitialCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="98" column="15" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="98" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ad31f76df40e5fb782fe73c9e8bd0aee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
        <definition>QueueHandle_t MPU_xQueueCreateCountingSemaphoreStatic</definition>
        <argsstring>(const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount, StaticQueue_t *pxStaticQueue) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xQueueCreateCountingSemaphoreStatic</name>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxMaxCount</declname>
        </param>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxInitialCount</declname>
        </param>
        <param>
          <type><ref refid="_free_r_t_o_s_8h_1a9deecb4f17c68b05469a3019cc674bac" kindref="member">StaticQueue_t</ref> *</type>
          <declname>pxStaticQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="99" column="15" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="99" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1af26242a4ac286d585bac42296cfb77f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
        <definition>TaskHandle_t MPU_xQueueGetMutexHolder</definition>
        <argsstring>(QueueHandle_t xSemaphore) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xQueueGetMutexHolder</name>
        <param>
          <type><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
          <declname>xSemaphore</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="100" column="14" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="100" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a70f3b09df93e0432b3b35fe6165cda92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xQueueTakeMutexRecursive</definition>
        <argsstring>(QueueHandle_t xMutex, TickType_t xTicksToWait) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xQueueTakeMutexRecursive</name>
        <param>
          <type><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
          <declname>xMutex</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="101" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="101" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1aeaa5eb80b801575e6174a5fc1f6ce5e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xQueueGiveMutexRecursive</definition>
        <argsstring>(QueueHandle_t pxMutex) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xQueueGiveMutexRecursive</name>
        <param>
          <type><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
          <declname>pxMutex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="102" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="102" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a6fdce2c19119af65e8d212a9f667ec10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vQueueAddToRegistry</definition>
        <argsstring>(QueueHandle_t xQueue, const char *pcName) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vQueueAddToRegistry</name>
        <param>
          <type><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
          <declname>xQueue</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="103" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="103" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a867c601d5d2b5786ada881721e14bdd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vQueueUnregisterQueue</definition>
        <argsstring>(QueueHandle_t xQueue) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vQueueUnregisterQueue</name>
        <param>
          <type><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
          <declname>xQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="104" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="104" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a62a20e00cd306108c5a3ec30c4d86a2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* MPU_pcQueueGetName</definition>
        <argsstring>(QueueHandle_t xQueue) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_pcQueueGetName</name>
        <param>
          <type><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
          <declname>xQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="105" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="105" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a38b0af82b18009ebbb51c18e9f8c4c34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
        <definition>QueueHandle_t MPU_xQueueGenericCreate</definition>
        <argsstring>(const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, const uint8_t ucQueueType) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xQueueGenericCreate</name>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxQueueLength</declname>
        </param>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxItemSize</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>ucQueueType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="106" column="15" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="106" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a50251e0cdfe07ba2ac3317425f1c7d8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
        <definition>QueueHandle_t MPU_xQueueGenericCreateStatic</definition>
        <argsstring>(const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, StaticQueue_t *pxStaticQueue, const uint8_t ucQueueType) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xQueueGenericCreateStatic</name>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxQueueLength</declname>
        </param>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxItemSize</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pucQueueStorage</declname>
        </param>
        <param>
          <type><ref refid="_free_r_t_o_s_8h_1a9deecb4f17c68b05469a3019cc674bac" kindref="member">StaticQueue_t</ref> *</type>
          <declname>pxStaticQueue</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>ucQueueType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="107" column="15" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="107" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1af593d33910a905d35e2d37cde64f059d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="queue_8h_1a1ae056fb02b2467993003b85111dde16" kindref="member">QueueSetHandle_t</ref></type>
        <definition>QueueSetHandle_t MPU_xQueueCreateSet</definition>
        <argsstring>(const UBaseType_t uxEventQueueLength) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xQueueCreateSet</name>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxEventQueueLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="108" column="18" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="108" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1aec6e3a8dd0c477fd6ef7de0b09871b9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xQueueAddToSet</definition>
        <argsstring>(QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xQueueAddToSet</name>
        <param>
          <type><ref refid="queue_8h_1afac7ec7649e5c57381315eb011c36ef5" kindref="member">QueueSetMemberHandle_t</ref></type>
          <declname>xQueueOrSemaphore</declname>
        </param>
        <param>
          <type><ref refid="queue_8h_1a1ae056fb02b2467993003b85111dde16" kindref="member">QueueSetHandle_t</ref></type>
          <declname>xQueueSet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="109" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="109" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a3fed9edbb48b7328e15d2073526b0e00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xQueueRemoveFromSet</definition>
        <argsstring>(QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xQueueRemoveFromSet</name>
        <param>
          <type><ref refid="queue_8h_1afac7ec7649e5c57381315eb011c36ef5" kindref="member">QueueSetMemberHandle_t</ref></type>
          <declname>xQueueOrSemaphore</declname>
        </param>
        <param>
          <type><ref refid="queue_8h_1a1ae056fb02b2467993003b85111dde16" kindref="member">QueueSetHandle_t</ref></type>
          <declname>xQueueSet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="110" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="110" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1adcaae3a3754d63ab4bc0eb0f1c84c261" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="queue_8h_1afac7ec7649e5c57381315eb011c36ef5" kindref="member">QueueSetMemberHandle_t</ref></type>
        <definition>QueueSetMemberHandle_t MPU_xQueueSelectFromSet</definition>
        <argsstring>(QueueSetHandle_t xQueueSet, const TickType_t xTicksToWait) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xQueueSelectFromSet</name>
        <param>
          <type><ref refid="queue_8h_1a1ae056fb02b2467993003b85111dde16" kindref="member">QueueSetHandle_t</ref></type>
          <declname>xQueueSet</declname>
        </param>
        <param>
          <type>const TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="111" column="24" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="111" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a7d10ee03f3b7ef49895d74aea86a5627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xQueueGenericReset</definition>
        <argsstring>(QueueHandle_t xQueue, BaseType_t xNewQueue) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xQueueGenericReset</name>
        <param>
          <type><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
          <declname>xQueue</declname>
        </param>
        <param>
          <type>BaseType_t</type>
          <declname>xNewQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="112" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="112" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a9c3be1dd3202967efaa54c084a38d0b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vQueueSetQueueNumber</definition>
        <argsstring>(QueueHandle_t xQueue, UBaseType_t uxQueueNumber) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vQueueSetQueueNumber</name>
        <param>
          <type><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
          <declname>xQueue</declname>
        </param>
        <param>
          <type>UBaseType_t</type>
          <declname>uxQueueNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="113" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="113" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a86304b09daa9009424fce09e01fdc261" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UBaseType_t</type>
        <definition>UBaseType_t MPU_uxQueueGetQueueNumber</definition>
        <argsstring>(QueueHandle_t xQueue) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_uxQueueGetQueueNumber</name>
        <param>
          <type><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
          <declname>xQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="114" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="114" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ad6f448261df0ec3f071435664916ca88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t MPU_ucQueueGetQueueType</definition>
        <argsstring>(QueueHandle_t xQueue) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_ucQueueGetQueueType</name>
        <param>
          <type><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref></type>
          <declname>xQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="115" column="9" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="115" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a7bdcebee972b0961a644e9fcd5ebb841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref></type>
        <definition>TimerHandle_t MPU_xTimerCreate</definition>
        <argsstring>(const char *const pcTimerName, const TickType_t xTimerPeriodInTicks, const UBaseType_t uxAutoReload, void *const pvTimerID, TimerCallbackFunction_t pxCallbackFunction) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTimerCreate</name>
        <param>
          <type>const char *const</type>
          <declname>pcTimerName</declname>
        </param>
        <param>
          <type>const TickType_t</type>
          <declname>xTimerPeriodInTicks</declname>
        </param>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxAutoReload</declname>
        </param>
        <param>
          <type>void *const</type>
          <declname>pvTimerID</declname>
        </param>
        <param>
          <type><ref refid="timers_8h_1a5cf6d1f61ccd4871022ed8ad454c6027" kindref="member">TimerCallbackFunction_t</ref></type>
          <declname>pxCallbackFunction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="118" column="15" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="118" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ae33d477de9b2dd90e9563e06199034b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref></type>
        <definition>TimerHandle_t MPU_xTimerCreateStatic</definition>
        <argsstring>(const char *const pcTimerName, const TickType_t xTimerPeriodInTicks, const UBaseType_t uxAutoReload, void *const pvTimerID, TimerCallbackFunction_t pxCallbackFunction, StaticTimer_t *pxTimerBuffer) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTimerCreateStatic</name>
        <param>
          <type>const char *const</type>
          <declname>pcTimerName</declname>
        </param>
        <param>
          <type>const TickType_t</type>
          <declname>xTimerPeriodInTicks</declname>
        </param>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxAutoReload</declname>
        </param>
        <param>
          <type>void *const</type>
          <declname>pvTimerID</declname>
        </param>
        <param>
          <type><ref refid="timers_8h_1a5cf6d1f61ccd4871022ed8ad454c6027" kindref="member">TimerCallbackFunction_t</ref></type>
          <declname>pxCallbackFunction</declname>
        </param>
        <param>
          <type><ref refid="_free_r_t_o_s_8h_1af99691595ea45dc3fb803cc004cb6bb9" kindref="member">StaticTimer_t</ref> *</type>
          <declname>pxTimerBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="119" column="15" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="119" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a3384df4d03a4cc917085ca32b9c4c555" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* MPU_pvTimerGetTimerID</definition>
        <argsstring>(const TimerHandle_t xTimer) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_pvTimerGetTimerID</name>
        <param>
          <type>const <ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref></type>
          <declname>xTimer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="120" column="7" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="120" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1adf37969b9e6496069f779ce5b095cc6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTimerSetTimerID</definition>
        <argsstring>(TimerHandle_t xTimer, void *pvNewID) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vTimerSetTimerID</name>
        <param>
          <type><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref></type>
          <declname>xTimer</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pvNewID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="121" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="121" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1adde8656afd37de6481ee64c7f7915748" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTimerIsTimerActive</definition>
        <argsstring>(TimerHandle_t xTimer) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTimerIsTimerActive</name>
        <param>
          <type><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref></type>
          <declname>xTimer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="122" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="122" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a7c25c579e997e4da978f1429786aaab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
        <definition>TaskHandle_t MPU_xTimerGetTimerDaemonTaskHandle</definition>
        <argsstring>(void) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTimerGetTimerDaemonTaskHandle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="123" column="14" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="123" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a5c6a5a9e79aede72337f2cf46f519e6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTimerPendFunctionCall</definition>
        <argsstring>(PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t ulParameter2, TickType_t xTicksToWait) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTimerPendFunctionCall</name>
        <param>
          <type><ref refid="timers_8h_1af6e8e2be58df2be9f9bb808fcdc51622" kindref="member">PendedFunction_t</ref></type>
          <declname>xFunctionToPend</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pvParameter1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ulParameter2</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="124" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="124" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a430ba5639e79e2bb4ab0483ccb573771" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* MPU_pcTimerGetName</definition>
        <argsstring>(TimerHandle_t xTimer) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_pcTimerGetName</name>
        <param>
          <type><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref></type>
          <declname>xTimer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="125" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="125" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a5ee11a468b7646ce12c6f9b66f5b8e8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTimerSetReloadMode</definition>
        <argsstring>(TimerHandle_t xTimer, const UBaseType_t uxAutoReload) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vTimerSetReloadMode</name>
        <param>
          <type><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref></type>
          <declname>xTimer</declname>
        </param>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxAutoReload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="126" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="126" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1adae123f27b51f28bcc98a2f16e1b42b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UBaseType_t</type>
        <definition>UBaseType_t MPU_uxTimerGetReloadMode</definition>
        <argsstring>(TimerHandle_t xTimer) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_uxTimerGetReloadMode</name>
        <param>
          <type><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref></type>
          <declname>xTimer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="127" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="127" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a2830e439084d1da4cf6ce92ba59ee916" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TickType_t</type>
        <definition>TickType_t MPU_xTimerGetPeriod</definition>
        <argsstring>(TimerHandle_t xTimer) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTimerGetPeriod</name>
        <param>
          <type><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref></type>
          <declname>xTimer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="128" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="128" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a41b59bbb282e99aca3fc57e568d5f29c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TickType_t</type>
        <definition>TickType_t MPU_xTimerGetExpiryTime</definition>
        <argsstring>(TimerHandle_t xTimer) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTimerGetExpiryTime</name>
        <param>
          <type><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref></type>
          <declname>xTimer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="129" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="129" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a9d1f63646824f4a2cf015def907d9681" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTimerCreateTimerTask</definition>
        <argsstring>(void) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTimerCreateTimerTask</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="130" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="130" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1aff117583cd279a1afd30d1cebb198d38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTimerGenericCommand</definition>
        <argsstring>(TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_t xOptionalValue, BaseType_t *const pxHigherPriorityTaskWoken, const TickType_t xTicksToWait) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xTimerGenericCommand</name>
        <param>
          <type><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref></type>
          <declname>xTimer</declname>
        </param>
        <param>
          <type>const BaseType_t</type>
          <declname>xCommandID</declname>
        </param>
        <param>
          <type>const TickType_t</type>
          <declname>xOptionalValue</declname>
        </param>
        <param>
          <type>BaseType_t *const</type>
          <declname>pxHigherPriorityTaskWoken</declname>
        </param>
        <param>
          <type>const TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="131" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="131" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ab7648c05a9be0e8fd5f81645ca45f475" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed" kindref="member">EventGroupHandle_t</ref></type>
        <definition>EventGroupHandle_t MPU_xEventGroupCreate</definition>
        <argsstring>(void) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xEventGroupCreate</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="134" column="20" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="134" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a53f543ead37e3ee8b947e3e78a622a2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed" kindref="member">EventGroupHandle_t</ref></type>
        <definition>EventGroupHandle_t MPU_xEventGroupCreateStatic</definition>
        <argsstring>(StaticEventGroup_t *pxEventGroupBuffer) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xEventGroupCreateStatic</name>
        <param>
          <type><ref refid="_free_r_t_o_s_8h_1a4299b2d274d971e7861eb11e4a688a01" kindref="member">StaticEventGroup_t</ref> *</type>
          <declname>pxEventGroupBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="135" column="20" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="135" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1afb424c1d20e00b23d597d63acb06fabb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref></type>
        <definition>EventBits_t MPU_xEventGroupWaitBits</definition>
        <argsstring>(EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor, const BaseType_t xClearOnExit, const BaseType_t xWaitForAllBits, TickType_t xTicksToWait) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xEventGroupWaitBits</name>
        <param>
          <type><ref refid="event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed" kindref="member">EventGroupHandle_t</ref></type>
          <declname>xEventGroup</declname>
        </param>
        <param>
          <type>const <ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref></type>
          <declname>uxBitsToWaitFor</declname>
        </param>
        <param>
          <type>const BaseType_t</type>
          <declname>xClearOnExit</declname>
        </param>
        <param>
          <type>const BaseType_t</type>
          <declname>xWaitForAllBits</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="136" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="136" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1adf34d4972866b0605d7a09d544555ccc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref></type>
        <definition>EventBits_t MPU_xEventGroupClearBits</definition>
        <argsstring>(EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToClear) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xEventGroupClearBits</name>
        <param>
          <type><ref refid="event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed" kindref="member">EventGroupHandle_t</ref></type>
          <declname>xEventGroup</declname>
        </param>
        <param>
          <type>const <ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref></type>
          <declname>uxBitsToClear</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="137" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="137" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a2c5b9a954c46a85f29cf0340aaee108a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref></type>
        <definition>EventBits_t MPU_xEventGroupSetBits</definition>
        <argsstring>(EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xEventGroupSetBits</name>
        <param>
          <type><ref refid="event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed" kindref="member">EventGroupHandle_t</ref></type>
          <declname>xEventGroup</declname>
        </param>
        <param>
          <type>const <ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref></type>
          <declname>uxBitsToSet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="138" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="138" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a6e8e545c245c8e1edfa21fa2dcc312ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref></type>
        <definition>EventBits_t MPU_xEventGroupSync</definition>
        <argsstring>(EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, const EventBits_t uxBitsToWaitFor, TickType_t xTicksToWait) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xEventGroupSync</name>
        <param>
          <type><ref refid="event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed" kindref="member">EventGroupHandle_t</ref></type>
          <declname>xEventGroup</declname>
        </param>
        <param>
          <type>const <ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref></type>
          <declname>uxBitsToSet</declname>
        </param>
        <param>
          <type>const <ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref></type>
          <declname>uxBitsToWaitFor</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="139" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="139" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a7ea31095d7d8ec2a662cf3666085d720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vEventGroupDelete</definition>
        <argsstring>(EventGroupHandle_t xEventGroup) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vEventGroupDelete</name>
        <param>
          <type><ref refid="event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed" kindref="member">EventGroupHandle_t</ref></type>
          <declname>xEventGroup</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="140" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="140" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ac29852a476fa4ed087cbe356023e8015" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UBaseType_t</type>
        <definition>UBaseType_t MPU_uxEventGroupGetNumber</definition>
        <argsstring>(void *xEventGroup) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_uxEventGroupGetNumber</name>
        <param>
          <type>void *</type>
          <declname>xEventGroup</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="141" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="141" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a52e63f26c50a655b89e236008512bffa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t MPU_xStreamBufferSend</definition>
        <argsstring>(StreamBufferHandle_t xStreamBuffer, const void *pvTxData, size_t xDataLengthBytes, TickType_t xTicksToWait) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xStreamBufferSend</name>
        <param>
          <type><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref></type>
          <declname>xStreamBuffer</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>pvTxData</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xDataLengthBytes</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="144" column="8" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="144" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a3e0fbebc55f824c250b7eff4b1f7d765" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t MPU_xStreamBufferReceive</definition>
        <argsstring>(StreamBufferHandle_t xStreamBuffer, void *pvRxData, size_t xBufferLengthBytes, TickType_t xTicksToWait) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xStreamBufferReceive</name>
        <param>
          <type><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref></type>
          <declname>xStreamBuffer</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pvRxData</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xBufferLengthBytes</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="145" column="8" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="145" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a2aa538546170875bce7263e959646635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t MPU_xStreamBufferNextMessageLengthBytes</definition>
        <argsstring>(StreamBufferHandle_t xStreamBuffer) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xStreamBufferNextMessageLengthBytes</name>
        <param>
          <type><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref></type>
          <declname>xStreamBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="146" column="8" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="146" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a1644bcafaedcc89ff26c3d066ae45bb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vStreamBufferDelete</definition>
        <argsstring>(StreamBufferHandle_t xStreamBuffer) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_vStreamBufferDelete</name>
        <param>
          <type><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref></type>
          <declname>xStreamBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="147" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="147" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a40bb70472e5399a601a95eecbf6314fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xStreamBufferIsFull</definition>
        <argsstring>(StreamBufferHandle_t xStreamBuffer) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xStreamBufferIsFull</name>
        <param>
          <type><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref></type>
          <declname>xStreamBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="148" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="148" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a62da4dc560bc0181279b9571c835e8e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xStreamBufferIsEmpty</definition>
        <argsstring>(StreamBufferHandle_t xStreamBuffer) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xStreamBufferIsEmpty</name>
        <param>
          <type><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref></type>
          <declname>xStreamBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="149" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="149" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a6264274cc7d35c512555302523c92f8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xStreamBufferReset</definition>
        <argsstring>(StreamBufferHandle_t xStreamBuffer) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xStreamBufferReset</name>
        <param>
          <type><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref></type>
          <declname>xStreamBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="150" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="150" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1aa66eeea4312467f943cf179b2a8061ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t MPU_xStreamBufferSpacesAvailable</definition>
        <argsstring>(StreamBufferHandle_t xStreamBuffer) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xStreamBufferSpacesAvailable</name>
        <param>
          <type><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref></type>
          <declname>xStreamBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="151" column="8" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="151" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a976371f94aceef5da18188c63bf974f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t MPU_xStreamBufferBytesAvailable</definition>
        <argsstring>(StreamBufferHandle_t xStreamBuffer) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xStreamBufferBytesAvailable</name>
        <param>
          <type><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref></type>
          <declname>xStreamBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="152" column="8" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="152" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ac869cab40fbc949e37b98eac6e10cb0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xStreamBufferSetTriggerLevel</definition>
        <argsstring>(StreamBufferHandle_t xStreamBuffer, size_t xTriggerLevel) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xStreamBufferSetTriggerLevel</name>
        <param>
          <type><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref></type>
          <declname>xStreamBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xTriggerLevel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="153" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="153" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a573ef004bbddcbb9ba99e914a481b900" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref></type>
        <definition>StreamBufferHandle_t MPU_xStreamBufferGenericCreate</definition>
        <argsstring>(size_t xBufferSizeBytes, size_t xTriggerLevelBytes, BaseType_t xIsMessageBuffer) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xStreamBufferGenericCreate</name>
        <param>
          <type>size_t</type>
          <declname>xBufferSizeBytes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xTriggerLevelBytes</declname>
        </param>
        <param>
          <type>BaseType_t</type>
          <declname>xIsMessageBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="154" column="22" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="154" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a30c184d8209f81a8e0d105b4cb0cd620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref></type>
        <definition>StreamBufferHandle_t MPU_xStreamBufferGenericCreateStatic</definition>
        <argsstring>(size_t xBufferSizeBytes, size_t xTriggerLevelBytes, BaseType_t xIsMessageBuffer, uint8_t *const pucStreamBufferStorageArea, StaticStreamBuffer_t *const pxStaticStreamBuffer) FREERTOS_SYSTEM_CALL</argsstring>
        <name>MPU_xStreamBufferGenericCreateStatic</name>
        <param>
          <type>size_t</type>
          <declname>xBufferSizeBytes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xTriggerLevelBytes</declname>
        </param>
        <param>
          <type>BaseType_t</type>
          <declname>xIsMessageBuffer</declname>
        </param>
        <param>
          <type>uint8_t *const</type>
          <declname>pucStreamBufferStorageArea</declname>
        </param>
        <param>
          <type><ref refid="_free_r_t_o_s_8h_1a97741869d647b29aa4b0698a7de79a6a" kindref="member">StaticStreamBuffer_t</ref> *const</type>
          <declname>pxStaticStreamBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="155" column="22" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="155" declcolumn="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>FreeRTOS<sp/>Kernel<sp/>V10.3.1</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2020<sp/>Amazon.com,<sp/>Inc.<sp/>or<sp/>its<sp/>affiliates.<sp/><sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>http://www.FreeRTOS.org</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>http://aws.amazon.com/freertos</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>1<sp/>tab<sp/>==<sp/>4<sp/>spaces!</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>When<sp/>the<sp/>MPU<sp/>is<sp/>used<sp/>the<sp/>standard<sp/>(non<sp/>MPU)<sp/>API<sp/>functions<sp/>are<sp/>mapped<sp/>to</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>equivalents<sp/>that<sp/>start<sp/>&quot;MPU_&quot;,<sp/>the<sp/>prototypes<sp/>for<sp/>which<sp/>are<sp/>defined<sp/>in<sp/>this</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>header<sp/>files.<sp/><sp/>This<sp/>will<sp/>cause<sp/>the<sp/>application<sp/>code<sp/>to<sp/>call<sp/>the<sp/>MPU_<sp/>version</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>which<sp/>wraps<sp/>the<sp/>non-MPU<sp/>version<sp/>with<sp/>privilege<sp/>promoting<sp/>then<sp/>demoting<sp/>code,</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>so<sp/>the<sp/>kernel<sp/>code<sp/>always<sp/>runs<sp/>will<sp/>full<sp/>privileges.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MPU_PROTOTYPES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_PROTOTYPES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MPU<sp/>versions<sp/>of<sp/>tasks.h<sp/>API<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1a53ce0915f0062120137efcc89b415715" kindref="member">MPU_xTaskCreate</ref>(<sp/><ref refid="projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0" kindref="member">TaskFunction_t</ref><sp/>pxTaskCode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pcName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>usStackDepth,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pvParameters,<sp/>UBaseType_t<sp/>uxPriority,<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxCreatedTask<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/><ref refid="mpu__prototypes_8h_1a3265dccf6178f6b886cf0743886b7662" kindref="member">MPU_xTaskCreateStatic</ref>(<sp/><ref refid="projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0" kindref="member">TaskFunction_t</ref><sp/>pxTaskCode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pcName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>ulStackDepth,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pvParameters,<sp/>UBaseType_t<sp/>uxPriority,<sp/>StackType_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>puxStackBuffer,<sp/><ref refid="structx_s_t_a_t_i_c___t_c_b" kindref="compound">StaticTask_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxTaskBuffer<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1aaf2329942140771305220948bc69b1b0" kindref="member">MPU_xTaskCreateRestricted</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s" kindref="compound">TaskParameters_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxTaskDefinition,<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>*pxCreatedTask<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1a0a1c9271074f19d7d3ec5de2cfd4971f" kindref="member">MPU_xTaskCreateRestrictedStatic</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s" kindref="compound">TaskParameters_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxTaskDefinition,<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>*pxCreatedTask<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a9960d84fdd937f613a2a1255db733263" kindref="member">MPU_vTaskAllocateMPURegions</ref>(<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>xTask,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structx_m_e_m_o_r_y___r_e_g_i_o_n" kindref="compound">MemoryRegion_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxRegions<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1accbd3a6ed5d7bf2f8689a04b6b3f72d3" kindref="member">MPU_vTaskDelete</ref>(<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>xTaskToDelete<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a66ead786f745d188bbd3d0bf30c51069" kindref="member">MPU_vTaskDelay</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>xTicksToDelay<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1ad50c8ffb6798f50f7b0cc901f35c603f" kindref="member">MPU_vTaskDelayUntil</ref>(<sp/>TickType_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxPreviousWakeTime,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>xTimeIncrement<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1a5789e4f7340c707c713afa6165ca3363" kindref="member">MPU_xTaskAbortDelay</ref>(<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>xTask<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">UBaseType_t<sp/><ref refid="mpu__prototypes_8h_1a27c701344d8bab83d9cb1d1cd5aca487" kindref="member">MPU_uxTaskPriorityGet</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>xTask<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="task_8h_1a1749369458e2282a22e862a619a3892c" kindref="member">eTaskState</ref><sp/><ref refid="mpu__prototypes_8h_1a2fa518228b2b8cf0d56868d26744a9b5" kindref="member">MPU_eTaskGetState</ref>(<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>xTask<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a9232f18c3a1657f0b2aa3c6c011a341e" kindref="member">MPU_vTaskGetInfo</ref>(<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>xTask,<sp/><ref refid="structx_t_a_s_k___s_t_a_t_u_s" kindref="compound">TaskStatus_t</ref><sp/>*pxTaskStatus,<sp/>BaseType_t<sp/>xGetFreeStackSpace,<sp/><ref refid="task_8h_1a1749369458e2282a22e862a619a3892c" kindref="member">eTaskState</ref><sp/>eState<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a8665769af5e4e4dd56ba3b72ba9e933b" kindref="member">MPU_vTaskPrioritySet</ref>(<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>xTask,<sp/>UBaseType_t<sp/>uxNewPriority<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a2456fbe3861db2f8e5df961a2fc0ad25" kindref="member">MPU_vTaskSuspend</ref>(<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>xTaskToSuspend<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a5116e0f1df45bba9e351e54fff6e8d14" kindref="member">MPU_vTaskResume</ref>(<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>xTaskToResume<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a67bc097861923c6eee50b87b8655c412" kindref="member">MPU_vTaskStartScheduler</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a383cc2047ccf2b6bcbca1ec65229ab70" kindref="member">MPU_vTaskSuspendAll</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1ac0ae320f4e0d00e2f642b7677268a5fc" kindref="member">MPU_xTaskResumeAll</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">TickType_t<sp/><ref refid="mpu__prototypes_8h_1a3f40c6063f43373dc4208989db24eb7d" kindref="member">MPU_xTaskGetTickCount</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">UBaseType_t<sp/><ref refid="mpu__prototypes_8h_1a034d9f2f59ea4aa37bd67a4c9d4b3cd5" kindref="member">MPU_uxTaskGetNumberOfTasks</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="mpu__prototypes_8h_1a881b88f1952798f3da1c459c0f4f20aa" kindref="member">MPU_pcTaskGetName</ref>(<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>xTaskToQuery<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/><ref refid="mpu__prototypes_8h_1a64a8ffb45977a187281e0316226f7a9c" kindref="member">MPU_xTaskGetHandle</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pcNameToQuery<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">UBaseType_t<sp/><ref refid="mpu__prototypes_8h_1ade37d3f7d9b904e7b0a427b8562f6c9d" kindref="member">MPU_uxTaskGetStackHighWaterMark</ref>(<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>xTask<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="_free_r_t_o_s_8h_1ae4e85bffd36d76cf2796092f0ccd784a" kindref="member">configSTACK_DEPTH_TYPE</ref><sp/><ref refid="mpu__prototypes_8h_1a99dd993526c3d8b4ebb4e39007faa9ad" kindref="member">MPU_uxTaskGetStackHighWaterMark2</ref>(<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>xTask<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a9db7ba4634b70ce01c3c80b94930ac57" kindref="member">MPU_vTaskSetApplicationTaskTag</ref>(<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>xTask,<sp/><ref refid="task_8h_1af984026250bf8fece2e0068874d4661d" kindref="member">TaskHookFunction_t</ref><sp/>pxHookFunction<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="task_8h_1af984026250bf8fece2e0068874d4661d" kindref="member">TaskHookFunction_t</ref><sp/><ref refid="mpu__prototypes_8h_1ab96febf9ce3574ebbc73f07d798156f6" kindref="member">MPU_xTaskGetApplicationTaskTag</ref>(<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>xTask<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a1c57bdf4ed6db4253d3e7a4968e3770d" kindref="member">MPU_vTaskSetThreadLocalStoragePointer</ref>(<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>xTaskToSet,<sp/>BaseType_t<sp/>xIndex,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvValue<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="mpu__prototypes_8h_1aa812f838249da470c574c9e13d0e1dc9" kindref="member">MPU_pvTaskGetThreadLocalStoragePointer</ref>(<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>xTaskToQuery,<sp/>BaseType_t<sp/>xIndex<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1a49c1dbec95aef701cb84a1bd3b5e21b6" kindref="member">MPU_xTaskCallApplicationTaskHook</ref>(<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>xTask,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvParameter<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/><ref refid="mpu__prototypes_8h_1adea5fb61044c3b5538d958680b1edd85" kindref="member">MPU_xTaskGetIdleTaskHandle</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">UBaseType_t<sp/><ref refid="mpu__prototypes_8h_1af76f3597175bac3f84ca4f7494433068" kindref="member">MPU_uxTaskGetSystemState</ref>(<sp/><ref refid="structx_t_a_s_k___s_t_a_t_u_s" kindref="compound">TaskStatus_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxTaskStatusArray,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxArraySize,<sp/>uint32_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pulTotalRunTime<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">uint32_t<sp/><ref refid="mpu__prototypes_8h_1a750a835c2aa49865d88f01278e3bb2bc" kindref="member">MPU_ulTaskGetIdleRunTimeCounter</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a21b44bd0c658199fe3b0ffb0266811e7" kindref="member">MPU_vTaskList</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>pcWriteBuffer<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1ae8018fcf78cd91a7c3c256aa6fee1f7a" kindref="member">MPU_vTaskGetRunTimeStats</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pcWriteBuffer<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1a3e782699de49b0bf8382df0b05c1a967" kindref="member">MPU_xTaskGenericNotify</ref>(<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>xTaskToNotify,<sp/>uint32_t<sp/>ulValue,<sp/><ref refid="task_8h_1ae8abc4f7da5b6880467daafbf19cd233" kindref="member">eNotifyAction</ref><sp/>eAction,<sp/>uint32_t<sp/>*pulPreviousNotificationValue<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1ac160d248a7ac595a078301610aeea5eb" kindref="member">MPU_xTaskNotifyWait</ref>(<sp/>uint32_t<sp/>ulBitsToClearOnEntry,<sp/>uint32_t<sp/>ulBitsToClearOnExit,<sp/>uint32_t<sp/>*pulNotificationValue,<sp/>TickType_t<sp/>xTicksToWait<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">uint32_t<sp/><ref refid="mpu__prototypes_8h_1aaf2f2946284b2684ffb04dc8b5461dd7" kindref="member">MPU_ulTaskNotifyTake</ref>(<sp/>BaseType_t<sp/>xClearCountOnExit,<sp/>TickType_t<sp/>xTicksToWait<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1a5c5655bc7656778174b357ea86540993" kindref="member">MPU_xTaskNotifyStateClear</ref>(<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>xTask<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">uint32_t<sp/><ref refid="mpu__prototypes_8h_1a1c47ddc39d67595b9546165e2d0a78d4" kindref="member">MPU_ulTaskNotifyValueClear</ref>(<sp/><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/>xTask,<sp/>uint32_t<sp/>ulBitsToClear<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1a7546d90ed3ddac32550096dc6b37c35e" kindref="member">MPU_xTaskIncrementTick</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/><ref refid="mpu__prototypes_8h_1ae3a1c8aeb60aa75841a2d224bb0765ec" kindref="member">MPU_xTaskGetCurrentTaskHandle</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1ace70e5eeb78a37b7d151400cf84ac11c" kindref="member">MPU_vTaskSetTimeOutState</ref>(<sp/><ref refid="structx_t_i_m_e___o_u_t" kindref="compound">TimeOut_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxTimeOut<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1a6a32c460aa7ea2dd09aaec9df8c1cf13" kindref="member">MPU_xTaskCheckForTimeOut</ref>(<sp/><ref refid="structx_t_i_m_e___o_u_t" kindref="compound">TimeOut_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxTimeOut,<sp/>TickType_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxTicksToWait<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a37c11080d93ec1bec5819ef3f527259f" kindref="member">MPU_vTaskMissedYield</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1ae67d37ffe2e61cfc3ffc8bae3b46af83" kindref="member">MPU_xTaskGetSchedulerState</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1a7083d320aacaf721da8b86b463c77912" kindref="member">MPU_xTaskCatchUpTicks</ref>(<sp/>TickType_t<sp/>xTicksToCatchUp<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MPU<sp/>versions<sp/>of<sp/>queue.h<sp/>API<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1a8bdf259f59261ca4aa1e558754b4aea1" kindref="member">MPU_xQueueGenericSend</ref>(<sp/><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/>xQueue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pvItemToQueue,<sp/>TickType_t<sp/>xTicksToWait,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BaseType_t<sp/>xCopyPosition<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1ad4f20d999158d27585199f957650ceda" kindref="member">MPU_xQueueReceive</ref>(<sp/><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/>xQueue,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pvBuffer,<sp/>TickType_t<sp/>xTicksToWait<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1ab43f2a1eabbc923c4f7cea113c29c2a8" kindref="member">MPU_xQueuePeek</ref>(<sp/><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/>xQueue,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pvBuffer,<sp/>TickType_t<sp/>xTicksToWait<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1a4109a6df9e1ff8f7469cfe94b4258fe0" kindref="member">MPU_xQueueSemaphoreTake</ref>(<sp/><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/>xQueue,<sp/>TickType_t<sp/>xTicksToWait<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">UBaseType_t<sp/><ref refid="mpu__prototypes_8h_1a7db460ed658e169261ecca82fabf277e" kindref="member">MPU_uxQueueMessagesWaiting</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/>xQueue<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">UBaseType_t<sp/><ref refid="mpu__prototypes_8h_1a67aec1ebd939c5f98116a8ff03b2ed58" kindref="member">MPU_uxQueueSpacesAvailable</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/>xQueue<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a08116a96ea4b07eda68f3e4aa6897b51" kindref="member">MPU_vQueueDelete</ref>(<sp/><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/>xQueue<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/><ref refid="mpu__prototypes_8h_1a16739521de6a7034e0d4181e65d8ed93" kindref="member">MPU_xQueueCreateMutex</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>ucQueueType<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/><ref refid="mpu__prototypes_8h_1ab081f53ca41be95c6a47f89b4790ef23" kindref="member">MPU_xQueueCreateMutexStatic</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>ucQueueType,<sp/><ref refid="structx_s_t_a_t_i_c___q_u_e_u_e" kindref="compound">StaticQueue_t</ref><sp/>*pxStaticQueue<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/><ref refid="mpu__prototypes_8h_1a013ee62a2ce409e0104bcff21dfd5475" kindref="member">MPU_xQueueCreateCountingSemaphore</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxMaxCount,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxInitialCount<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/><ref refid="mpu__prototypes_8h_1ad31f76df40e5fb782fe73c9e8bd0aee0" kindref="member">MPU_xQueueCreateCountingSemaphoreStatic</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxMaxCount,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxInitialCount,<sp/><ref refid="structx_s_t_a_t_i_c___q_u_e_u_e" kindref="compound">StaticQueue_t</ref><sp/>*pxStaticQueue<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/><ref refid="mpu__prototypes_8h_1af26242a4ac286d585bac42296cfb77f3" kindref="member">MPU_xQueueGetMutexHolder</ref>(<sp/><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/>xSemaphore<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1a70f3b09df93e0432b3b35fe6165cda92" kindref="member">MPU_xQueueTakeMutexRecursive</ref>(<sp/><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/>xMutex,<sp/>TickType_t<sp/>xTicksToWait<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1aeaa5eb80b801575e6174a5fc1f6ce5e9" kindref="member">MPU_xQueueGiveMutexRecursive</ref>(<sp/><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/>pxMutex<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a6fdce2c19119af65e8d212a9f667ec10" kindref="member">MPU_vQueueAddToRegistry</ref>(<sp/><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/>xQueue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pcName<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a867c601d5d2b5786ada881721e14bdd7" kindref="member">MPU_vQueueUnregisterQueue</ref>(<sp/><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/>xQueue<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="mpu__prototypes_8h_1a62a20e00cd306108c5a3ec30c4d86a2c" kindref="member">MPU_pcQueueGetName</ref>(<sp/><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/>xQueue<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/><ref refid="mpu__prototypes_8h_1a38b0af82b18009ebbb51c18e9f8c4c34" kindref="member">MPU_xQueueGenericCreate</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxQueueLength,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxItemSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>ucQueueType<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/><ref refid="mpu__prototypes_8h_1a50251e0cdfe07ba2ac3317425f1c7d8c" kindref="member">MPU_xQueueGenericCreateStatic</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxQueueLength,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxItemSize,<sp/>uint8_t<sp/>*pucQueueStorage,<sp/><ref refid="structx_s_t_a_t_i_c___q_u_e_u_e" kindref="compound">StaticQueue_t</ref><sp/>*pxStaticQueue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>ucQueueType<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="queue_8h_1a1ae056fb02b2467993003b85111dde16" kindref="member">QueueSetHandle_t</ref><sp/><ref refid="mpu__prototypes_8h_1af593d33910a905d35e2d37cde64f059d" kindref="member">MPU_xQueueCreateSet</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxEventQueueLength<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1aec6e3a8dd0c477fd6ef7de0b09871b9d" kindref="member">MPU_xQueueAddToSet</ref>(<sp/><ref refid="queue_8h_1afac7ec7649e5c57381315eb011c36ef5" kindref="member">QueueSetMemberHandle_t</ref><sp/>xQueueOrSemaphore,<sp/><ref refid="queue_8h_1a1ae056fb02b2467993003b85111dde16" kindref="member">QueueSetHandle_t</ref><sp/>xQueueSet<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1a3fed9edbb48b7328e15d2073526b0e00" kindref="member">MPU_xQueueRemoveFromSet</ref>(<sp/><ref refid="queue_8h_1afac7ec7649e5c57381315eb011c36ef5" kindref="member">QueueSetMemberHandle_t</ref><sp/>xQueueOrSemaphore,<sp/><ref refid="queue_8h_1a1ae056fb02b2467993003b85111dde16" kindref="member">QueueSetHandle_t</ref><sp/>xQueueSet<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><ref refid="queue_8h_1afac7ec7649e5c57381315eb011c36ef5" kindref="member">QueueSetMemberHandle_t</ref><sp/><ref refid="mpu__prototypes_8h_1adcaae3a3754d63ab4bc0eb0f1c84c261" kindref="member">MPU_xQueueSelectFromSet</ref>(<sp/><ref refid="queue_8h_1a1ae056fb02b2467993003b85111dde16" kindref="member">QueueSetHandle_t</ref><sp/>xQueueSet,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>xTicksToWait<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1a7d10ee03f3b7ef49895d74aea86a5627" kindref="member">MPU_xQueueGenericReset</ref>(<sp/><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/>xQueue,<sp/>BaseType_t<sp/>xNewQueue<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a9c3be1dd3202967efaa54c084a38d0b0" kindref="member">MPU_vQueueSetQueueNumber</ref>(<sp/><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/>xQueue,<sp/>UBaseType_t<sp/>uxQueueNumber<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">UBaseType_t<sp/><ref refid="mpu__prototypes_8h_1a86304b09daa9009424fce09e01fdc261" kindref="member">MPU_uxQueueGetQueueNumber</ref>(<sp/><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/>xQueue<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">uint8_t<sp/><ref refid="mpu__prototypes_8h_1ad6f448261df0ec3f071435664916ca88" kindref="member">MPU_ucQueueGetQueueType</ref>(<sp/><ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref><sp/>xQueue<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MPU<sp/>versions<sp/>of<sp/>timers.h<sp/>API<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/><ref refid="mpu__prototypes_8h_1a7bdcebee972b0961a644e9fcd5ebb841" kindref="member">MPU_xTimerCreate</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pcTimerName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>xTimerPeriodInTicks,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxAutoReload,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pvTimerID,<sp/><ref refid="timers_8h_1a5cf6d1f61ccd4871022ed8ad454c6027" kindref="member">TimerCallbackFunction_t</ref><sp/>pxCallbackFunction<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/><ref refid="mpu__prototypes_8h_1ae33d477de9b2dd90e9563e06199034b0" kindref="member">MPU_xTimerCreateStatic</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pcTimerName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>xTimerPeriodInTicks,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxAutoReload,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pvTimerID,<sp/><ref refid="timers_8h_1a5cf6d1f61ccd4871022ed8ad454c6027" kindref="member">TimerCallbackFunction_t</ref><sp/>pxCallbackFunction,<sp/><ref refid="structx_s_t_a_t_i_c___t_i_m_e_r" kindref="compound">StaticTimer_t</ref><sp/>*pxTimerBuffer<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="mpu__prototypes_8h_1a3384df4d03a4cc917085ca32b9c4c555" kindref="member">MPU_pvTimerGetTimerID</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimer<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1adf37969b9e6496069f779ce5b095cc6c" kindref="member">MPU_vTimerSetTimerID</ref>(<sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimer,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvNewID<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1adde8656afd37de6481ee64c7f7915748" kindref="member">MPU_xTimerIsTimerActive</ref>(<sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimer<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref><sp/><ref refid="mpu__prototypes_8h_1a7c25c579e997e4da978f1429786aaab3" kindref="member">MPU_xTimerGetTimerDaemonTaskHandle</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1a5c6a5a9e79aede72337f2cf46f519e6f" kindref="member">MPU_xTimerPendFunctionCall</ref>(<sp/><ref refid="timers_8h_1af6e8e2be58df2be9f9bb808fcdc51622" kindref="member">PendedFunction_t</ref><sp/>xFunctionToPend,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvParameter1,<sp/>uint32_t<sp/>ulParameter2,<sp/>TickType_t<sp/>xTicksToWait<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="mpu__prototypes_8h_1a430ba5639e79e2bb4ab0483ccb573771" kindref="member">MPU_pcTimerGetName</ref>(<sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimer<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a5ee11a468b7646ce12c6f9b66f5b8e8b" kindref="member">MPU_vTimerSetReloadMode</ref>(<sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxAutoReload<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">UBaseType_t<sp/><ref refid="mpu__prototypes_8h_1adae123f27b51f28bcc98a2f16e1b42b1" kindref="member">MPU_uxTimerGetReloadMode</ref>(<sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimer<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">TickType_t<sp/><ref refid="mpu__prototypes_8h_1a2830e439084d1da4cf6ce92ba59ee916" kindref="member">MPU_xTimerGetPeriod</ref>(<sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimer<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">TickType_t<sp/><ref refid="mpu__prototypes_8h_1a41b59bbb282e99aca3fc57e568d5f29c" kindref="member">MPU_xTimerGetExpiryTime</ref>(<sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimer<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1a9d1f63646824f4a2cf015def907d9681" kindref="member">MPU_xTimerCreateTimerTask</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1aff117583cd279a1afd30d1cebb198d38" kindref="member">MPU_xTimerGenericCommand</ref>(<sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BaseType_t<sp/>xCommandID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>xOptionalValue,<sp/>BaseType_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxHigherPriorityTaskWoken,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>xTicksToWait<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MPU<sp/>versions<sp/>of<sp/>event_group.h<sp/>API<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><ref refid="event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed" kindref="member">EventGroupHandle_t</ref><sp/><ref refid="mpu__prototypes_8h_1ab7648c05a9be0e8fd5f81645ca45f475" kindref="member">MPU_xEventGroupCreate</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><ref refid="event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed" kindref="member">EventGroupHandle_t</ref><sp/><ref refid="mpu__prototypes_8h_1a53f543ead37e3ee8b947e3e78a622a2a" kindref="member">MPU_xEventGroupCreateStatic</ref>(<sp/><ref refid="structx_s_t_a_t_i_c___e_v_e_n_t___g_r_o_u_p" kindref="compound">StaticEventGroup_t</ref><sp/>*pxEventGroupBuffer<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref><sp/><ref refid="mpu__prototypes_8h_1afb424c1d20e00b23d597d63acb06fabb" kindref="member">MPU_xEventGroupWaitBits</ref>(<sp/><ref refid="event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed" kindref="member">EventGroupHandle_t</ref><sp/>xEventGroup,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref><sp/>uxBitsToWaitFor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BaseType_t<sp/>xClearOnExit,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BaseType_t<sp/>xWaitForAllBits,<sp/>TickType_t<sp/>xTicksToWait<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref><sp/><ref refid="mpu__prototypes_8h_1adf34d4972866b0605d7a09d544555ccc" kindref="member">MPU_xEventGroupClearBits</ref>(<sp/><ref refid="event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed" kindref="member">EventGroupHandle_t</ref><sp/>xEventGroup,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref><sp/>uxBitsToClear<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref><sp/><ref refid="mpu__prototypes_8h_1a2c5b9a954c46a85f29cf0340aaee108a" kindref="member">MPU_xEventGroupSetBits</ref>(<sp/><ref refid="event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed" kindref="member">EventGroupHandle_t</ref><sp/>xEventGroup,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref><sp/>uxBitsToSet<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref><sp/><ref refid="mpu__prototypes_8h_1a6e8e545c245c8e1edfa21fa2dcc312ce" kindref="member">MPU_xEventGroupSync</ref>(<sp/><ref refid="event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed" kindref="member">EventGroupHandle_t</ref><sp/>xEventGroup,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref><sp/>uxBitsToSet,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref><sp/>uxBitsToWaitFor,<sp/>TickType_t<sp/>xTicksToWait<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a7ea31095d7d8ec2a662cf3666085d720" kindref="member">MPU_vEventGroupDelete</ref>(<sp/><ref refid="event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed" kindref="member">EventGroupHandle_t</ref><sp/>xEventGroup<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">UBaseType_t<sp/><ref refid="mpu__prototypes_8h_1ac29852a476fa4ed087cbe356023e8015" kindref="member">MPU_uxEventGroupGetNumber</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>xEventGroup<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MPU<sp/>versions<sp/>of<sp/>message/stream_buffer.h<sp/>API<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a52e63f26c50a655b89e236008512bffa" kindref="member">MPU_xStreamBufferSend</ref>(<sp/><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref><sp/>xStreamBuffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvTxData,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xDataLengthBytes,<sp/>TickType_t<sp/>xTicksToWait<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a3e0fbebc55f824c250b7eff4b1f7d765" kindref="member">MPU_xStreamBufferReceive</ref>(<sp/><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref><sp/>xStreamBuffer,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvRxData,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xBufferLengthBytes,<sp/>TickType_t<sp/>xTicksToWait<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a2aa538546170875bce7263e959646635" kindref="member">MPU_xStreamBufferNextMessageLengthBytes</ref>(<sp/><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref><sp/>xStreamBuffer<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a1644bcafaedcc89ff26c3d066ae45bb2" kindref="member">MPU_vStreamBufferDelete</ref>(<sp/><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref><sp/>xStreamBuffer<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1a40bb70472e5399a601a95eecbf6314fa" kindref="member">MPU_xStreamBufferIsFull</ref>(<sp/><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref><sp/>xStreamBuffer<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1a62da4dc560bc0181279b9571c835e8e6" kindref="member">MPU_xStreamBufferIsEmpty</ref>(<sp/><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref><sp/>xStreamBuffer<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1a6264274cc7d35c512555302523c92f8a" kindref="member">MPU_xStreamBufferReset</ref>(<sp/><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref><sp/>xStreamBuffer<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1aa66eeea4312467f943cf179b2a8061ef" kindref="member">MPU_xStreamBufferSpacesAvailable</ref>(<sp/><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref><sp/>xStreamBuffer<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="mpu__prototypes_8h_1a976371f94aceef5da18188c63bf974f7" kindref="member">MPU_xStreamBufferBytesAvailable</ref>(<sp/><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref><sp/>xStreamBuffer<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">BaseType_t<sp/><ref refid="mpu__prototypes_8h_1ac869cab40fbc949e37b98eac6e10cb0a" kindref="member">MPU_xStreamBufferSetTriggerLevel</ref>(<sp/><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref><sp/>xStreamBuffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xTriggerLevel<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref><sp/><ref refid="mpu__prototypes_8h_1a573ef004bbddcbb9ba99e914a481b900" kindref="member">MPU_xStreamBufferGenericCreate</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xBufferSizeBytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xTriggerLevelBytes,<sp/>BaseType_t<sp/>xIsMessageBuffer<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><ref refid="stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f" kindref="member">StreamBufferHandle_t</ref><sp/><ref refid="mpu__prototypes_8h_1a30c184d8209f81a8e0d105b4cb0cd620" kindref="member">MPU_xStreamBufferGenericCreateStatic</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xBufferSizeBytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xTriggerLevelBytes,<sp/>BaseType_t<sp/>xIsMessageBuffer,<sp/>uint8_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pucStreamBufferStorageArea,<sp/><ref refid="structx_s_t_a_t_i_c___s_t_r_e_a_m___b_u_f_f_e_r" kindref="compound">StaticStreamBuffer_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxStaticStreamBuffer<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b" kindref="member">FREERTOS_SYSTEM_CALL</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MPU_PROTOTYPES_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h"/>
  </compounddef>
</doxygen>
