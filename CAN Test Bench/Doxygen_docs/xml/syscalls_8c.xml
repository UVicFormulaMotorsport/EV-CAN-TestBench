<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="syscalls_8c" kind="file" language="C++">
    <compoundname>syscalls.c</compoundname>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">sys/time.h</includes>
    <includes local="no">sys/times.h</includes>
    <incdepgraph>
      <node id="2">
        <label>sys/stat.h</label>
      </node>
      <node id="9">
        <label>sys/times.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="4">
        <label>errno.h</label>
      </node>
      <node id="6">
        <label>signal.h</label>
      </node>
      <node id="7">
        <label>time.h</label>
      </node>
      <node id="8">
        <label>sys/time.h</label>
      </node>
      <node id="1">
        <label>Core/Src/syscalls.c</label>
        <link refid="syscalls_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="syscalls_8c_1aa006daaf11f1e2e45a6ababaf463212b" prot="public" static="no" mutable="no">
        <type>char **</type>
        <definition>char** environ</definition>
        <argsstring></argsstring>
        <name>environ</name>
        <initializer>= __env</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/syscalls.c" line="40" column="6" bodyfile="Core/Src/syscalls.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="syscalls_8c_1aa53ed4b191897a1bfc205aa1da005d24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int __io_putchar</definition>
        <argsstring>(int ch) __attribute__((weak))</argsstring>
        <name>__io_putchar</name>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/syscalls.c" line="35" column="12" declfile="Core/Src/syscalls.c" declline="35" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="syscalls_8c_1ad0122671640a3af49792ddaa59e8294e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int __io_getchar</definition>
        <argsstring>(void)</argsstring>
        <name>__io_getchar</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/syscalls.c" line="36" column="12" bodyfile="Core/Src/syscalls.c" bodystart="36" bodyend="39"/>
        <referencedby refid="syscalls_8c_1af9aace1b44b73111e15aa39f06f43456" compoundref="syscalls_8c" startline="67" endline="78">__attribute__</referencedby>
      </memberdef>
      <memberdef kind="function" id="syscalls_8c_1a25c7f100d498300fff65568c2fcfe639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initialise_monitor_handles</definition>
        <argsstring>()</argsstring>
        <name>initialise_monitor_handles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/syscalls.c" line="44" column="6" bodyfile="Core/Src/syscalls.c" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="syscalls_8c_1a945e539df8e0f66d3c73c533fe1968ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _getpid</definition>
        <argsstring>(void)</argsstring>
        <name>_getpid</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/syscalls.c" line="48" column="5" bodyfile="Core/Src/syscalls.c" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="syscalls_8c_1a062a5101199c3128edd5170f2575bb10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _kill</definition>
        <argsstring>(int pid, int sig)</argsstring>
        <name>_kill</name>
        <param>
          <type>int</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/syscalls.c" line="53" column="5" bodyfile="Core/Src/syscalls.c" bodystart="53" bodyend="59"/>
        <referencedby refid="syscalls_8c_1abc96bd69b58b2deaddb484478d911c1b" compoundref="syscalls_8c" startline="61" endline="65">_exit</referencedby>
      </memberdef>
      <memberdef kind="function" id="syscalls_8c_1abc96bd69b58b2deaddb484478d911c1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _exit</definition>
        <argsstring>(int status)</argsstring>
        <name>_exit</name>
        <param>
          <type>int</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/syscalls.c" line="61" column="6" bodyfile="Core/Src/syscalls.c" bodystart="61" bodyend="65"/>
        <references refid="syscalls_8c_1a062a5101199c3128edd5170f2575bb10" compoundref="syscalls_8c" startline="53" endline="59">_kill</references>
      </memberdef>
      <memberdef kind="function" id="syscalls_8c_1af9aace1b44b73111e15aa39f06f43456" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>__attribute__</definition>
        <argsstring>((weak))</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(weak)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/syscalls.c" line="67" column="1" bodyfile="Core/Src/syscalls.c" bodystart="67" bodyend="78"/>
        <references refid="syscalls_8c_1ad0122671640a3af49792ddaa59e8294e" compoundref="syscalls_8c" startline="36" endline="39">__io_getchar</references>
      </memberdef>
      <memberdef kind="function" id="syscalls_8c_1a5aab5e2acfd600e3667dc915a2bbc7cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _close</definition>
        <argsstring>(int file)</argsstring>
        <name>_close</name>
        <param>
          <type>int</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/syscalls.c" line="92" column="5" bodyfile="Core/Src/syscalls.c" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="syscalls_8c_1a41eef54307912a82d20e71c3d47315aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _fstat</definition>
        <argsstring>(int file, struct stat *st)</argsstring>
        <name>_fstat</name>
        <param>
          <type>int</type>
          <declname>file</declname>
        </param>
        <param>
          <type>struct stat *</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/syscalls.c" line="99" column="5" bodyfile="Core/Src/syscalls.c" bodystart="99" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="syscalls_8c_1ad3134a3dc296622b8d1c5456e481505b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _isatty</definition>
        <argsstring>(int file)</argsstring>
        <name>_isatty</name>
        <param>
          <type>int</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/syscalls.c" line="106" column="5" bodyfile="Core/Src/syscalls.c" bodystart="106" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="syscalls_8c_1a7a61311bdf1cb025fc07dc2bdae22ce4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _lseek</definition>
        <argsstring>(int file, int ptr, int dir)</argsstring>
        <name>_lseek</name>
        <param>
          <type>int</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/syscalls.c" line="112" column="5" bodyfile="Core/Src/syscalls.c" bodystart="112" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="syscalls_8c_1a270c9113047edd8d64186710ad76062b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _open</definition>
        <argsstring>(char *path, int flags,...)</argsstring>
        <name>_open</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/syscalls.c" line="120" column="5" bodyfile="Core/Src/syscalls.c" bodystart="120" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="syscalls_8c_1aeef0c3372d04caa1bcc99fed2ab6ec72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _wait</definition>
        <argsstring>(int *status)</argsstring>
        <name>_wait</name>
        <param>
          <type>int *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/syscalls.c" line="128" column="5" bodyfile="Core/Src/syscalls.c" bodystart="128" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="syscalls_8c_1a70b2f211d665cded5637065aa2bb89dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _unlink</definition>
        <argsstring>(char *name)</argsstring>
        <name>_unlink</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/syscalls.c" line="135" column="5" bodyfile="Core/Src/syscalls.c" bodystart="135" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="syscalls_8c_1aaf727ebf57cd64d6c58b23e6ee4a4a69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _times</definition>
        <argsstring>(struct tms *buf)</argsstring>
        <name>_times</name>
        <param>
          <type>struct tms *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/syscalls.c" line="142" column="5" bodyfile="Core/Src/syscalls.c" bodystart="142" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="syscalls_8c_1a4711e961db985ed2c850a8be6597af50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _stat</definition>
        <argsstring>(char *file, struct stat *st)</argsstring>
        <name>_stat</name>
        <param>
          <type>char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>struct stat *</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/syscalls.c" line="148" column="5" bodyfile="Core/Src/syscalls.c" bodystart="148" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="syscalls_8c_1a31da4cd5328defa76a9e2246992aba12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _link</definition>
        <argsstring>(char *old, char *new)</argsstring>
        <name>_link</name>
        <param>
          <type>char *</type>
          <declname>old</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>new</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/syscalls.c" line="155" column="5" bodyfile="Core/Src/syscalls.c" bodystart="155" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="syscalls_8c_1a6cb6331c9d166180903d5fb78b9c9dd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _fork</definition>
        <argsstring>(void)</argsstring>
        <name>_fork</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/syscalls.c" line="163" column="5" bodyfile="Core/Src/syscalls.c" bodystart="163" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="syscalls_8c_1ad2a07db8fdf26151eb98ba5711fad8c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _execve</definition>
        <argsstring>(char *name, char **argv, char **env)</argsstring>
        <name>_execve</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/syscalls.c" line="169" column="5" bodyfile="Core/Src/syscalls.c" bodystart="169" bodyend="176"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>STM32CubeIDE Minimal System calls file. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Auto-generated by STM32CubeIDE <verbatim>       For more information about which c-functions
       need which of these lowlevel functions
       please consult the Newlib libc-manual
</verbatim></para>
</simplesect>
<simplesect kind="attention"><para></para>
</simplesect>
Copyright (c) 2020-2023 STMicroelectronics. All rights reserved.</para>
<para>This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="23"><highlight class="comment">/*<sp/>Includes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/times.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="syscalls_8c_1aa53ed4b191897a1bfc205aa1da005d24" kindref="member">__io_putchar</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch)<sp/><ref refid="syscalls_8c_1af9aace1b44b73111e15aa39f06f43456" kindref="member">__attribute__</ref>((weak));</highlight></codeline>
<codeline lineno="36" refid="syscalls_8c_1ad0122671640a3af49792ddaa59e8294e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="syscalls_8c_1ad0122671640a3af49792ddaa59e8294e" kindref="member">__io_getchar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/><ref refid="syscalls_8c_1af9aace1b44b73111e15aa39f06f43456" kindref="member">__attribute__</ref>((weak));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__env[1]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="40" refid="syscalls_8c_1aa006daaf11f1e2e45a6ababaf463212b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="syscalls_8c_1aa006daaf11f1e2e45a6ababaf463212b" kindref="member">environ</ref><sp/>=<sp/>__env;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="syscalls_8c_1a25c7f100d498300fff65568c2fcfe639" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="syscalls_8c_1a25c7f100d498300fff65568c2fcfe639" kindref="member">initialise_monitor_handles</ref>()</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="syscalls_8c_1a945e539df8e0f66d3c73c533fe1968ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="syscalls_8c_1a945e539df8e0f66d3c73c533fe1968ee" kindref="member">_getpid</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="syscalls_8c_1a062a5101199c3128edd5170f2575bb10" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="syscalls_8c_1a062a5101199c3128edd5170f2575bb10" kindref="member">_kill</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>(void)pid;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>(void)sig;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="syscalls_8c_1abc96bd69b58b2deaddb484478d911c1b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="syscalls_8c_1abc96bd69b58b2deaddb484478d911c1b" kindref="member">_exit</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="syscalls_8c_1a062a5101199c3128edd5170f2575bb10" kindref="member">_kill</ref>(status,<sp/>-1);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{}<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>we<sp/>hang<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="syscalls_8c_1af9aace1b44b73111e15aa39f06f43456" refkind="member"><highlight class="normal"><ref refid="syscalls_8c_1af9aace1b44b73111e15aa39f06f43456" kindref="member">__attribute__</ref>((weak))<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_read(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>(void)file;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DataIdx;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(DataIdx<sp/>=<sp/>0;<sp/>DataIdx<sp/>&lt;<sp/>len;<sp/>DataIdx++)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr++<sp/>=<sp/><ref refid="syscalls_8c_1ad0122671640a3af49792ddaa59e8294e" kindref="member">__io_getchar</ref>();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><ref refid="syscalls_8c_1af9aace1b44b73111e15aa39f06f43456" kindref="member">__attribute__</ref>((weak))<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_write(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>(void)file;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DataIdx;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(DataIdx<sp/>=<sp/>0;<sp/>DataIdx<sp/>&lt;<sp/>len;<sp/>DataIdx++)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="syscalls_8c_1aa53ed4b191897a1bfc205aa1da005d24" kindref="member">__io_putchar</ref>(*ptr++);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="syscalls_8c_1a5aab5e2acfd600e3667dc915a2bbc7cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="syscalls_8c_1a5aab5e2acfd600e3667dc915a2bbc7cb" kindref="member">_close</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>(void)file;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="syscalls_8c_1a41eef54307912a82d20e71c3d47315aa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="syscalls_8c_1a41eef54307912a82d20e71c3d47315aa" kindref="member">_fstat</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat<sp/>*st)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>(void)file;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>st-&gt;st_mode<sp/>=<sp/>S_IFCHR;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="syscalls_8c_1ad3134a3dc296622b8d1c5456e481505b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="syscalls_8c_1ad3134a3dc296622b8d1c5456e481505b" kindref="member">_isatty</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>(void)file;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="syscalls_8c_1a7a61311bdf1cb025fc07dc2bdae22ce4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="syscalls_8c_1a7a61311bdf1cb025fc07dc2bdae22ce4" kindref="member">_lseek</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>(void)file;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>(void)ptr;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>(void)dir;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="syscalls_8c_1a270c9113047edd8d64186710ad76062b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="syscalls_8c_1a270c9113047edd8d64186710ad76062b" kindref="member">_open</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/>...)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>(void)path;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>(void)flags;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pretend<sp/>like<sp/>we<sp/>always<sp/>fail<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="syscalls_8c_1aeef0c3372d04caa1bcc99fed2ab6ec72" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="syscalls_8c_1aeef0c3372d04caa1bcc99fed2ab6ec72" kindref="member">_wait</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*status)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>(void)status;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>errno<sp/>=<sp/>ECHILD;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="syscalls_8c_1a70b2f211d665cded5637065aa2bb89dc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="syscalls_8c_1a70b2f211d665cded5637065aa2bb89dc" kindref="member">_unlink</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>(void)name;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>errno<sp/>=<sp/>ENOENT;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="syscalls_8c_1aaf727ebf57cd64d6c58b23e6ee4a4a69" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="syscalls_8c_1aaf727ebf57cd64d6c58b23e6ee4a4a69" kindref="member">_times</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>tms<sp/>*buf)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>(void)buf;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="syscalls_8c_1a4711e961db985ed2c850a8be6597af50" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="syscalls_8c_1a4711e961db985ed2c850a8be6597af50" kindref="member">_stat</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat<sp/>*st)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>(void)file;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>st-&gt;st_mode<sp/>=<sp/>S_IFCHR;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="syscalls_8c_1a31da4cd5328defa76a9e2246992aba12" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="syscalls_8c_1a31da4cd5328defa76a9e2246992aba12" kindref="member">_link</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*old,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>(void)old;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>(void)</highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>errno<sp/>=<sp/>EMLINK;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="syscalls_8c_1a6cb6331c9d166180903d5fb78b9c9dd7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="syscalls_8c_1a6cb6331c9d166180903d5fb78b9c9dd7" kindref="member">_fork</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>errno<sp/>=<sp/>EAGAIN;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="syscalls_8c_1ad2a07db8fdf26151eb98ba5711fad8c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="syscalls_8c_1ad2a07db8fdf26151eb98ba5711fad8c5" kindref="member">_execve</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**env)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>(void)name;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>(void)argv;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>(void)env;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>errno<sp/>=<sp/>ENOMEM;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Core/Src/syscalls.c"/>
  </compounddef>
</doxygen>
