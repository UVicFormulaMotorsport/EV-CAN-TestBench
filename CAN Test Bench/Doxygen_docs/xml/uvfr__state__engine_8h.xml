<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="uvfr__state__engine_8h" kind="file" language="C++">
    <compoundname>uvfr_state_engine.h</compoundname>
    <includes refid="uvfr__utils_8h" local="yes">uvfr_utils.h</includes>
    <includedby refid="uvfr__utils_8h" local="yes">Core/Inc/uvfr_utils.h</includedby>
    <incdepgraph>
      <node id="6">
        <label>stdarg.h</label>
      </node>
      <node id="12">
        <label>tim.h</label>
        <link refid="tim_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>imd.h</label>
        <link refid="imd_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>dash.h</label>
        <link refid="dash_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>driving_loop.h</label>
        <link refid="driving__loop_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>temp_monitoring.h</label>
        <link refid="temp__monitoring_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>stdint.h</label>
      </node>
      <node id="32">
        <label>stdlib.h</label>
      </node>
      <node id="27">
        <label>oled.h</label>
        <link refid="oled_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>adc.h</label>
        <link refid="adc_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cmsis_os.h</label>
      </node>
      <node id="2">
        <label>uvfr_utils.h</label>
        <link refid="uvfr__utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>message_buffer.h</label>
      </node>
      <node id="22">
        <label>bms.h</label>
        <link refid="bms_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>spi.h</label>
        <link refid="spi_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>pdu.h</label>
        <link refid="pdu_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>motor_controller.h</label>
        <link refid="motor__controller_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>uvfr_settings.h</label>
        <link refid="uvfr__settings_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>daq.h</label>
        <link refid="daq_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>gpio.h</label>
        <link refid="gpio_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>rb_tree.h</label>
        <link refid="rb__tree_8h"/>
      </node>
      <node id="10">
        <label>constants.h</label>
        <link refid="constants_8h"/>
      </node>
      <node id="9">
        <label>can.h</label>
        <link refid="can_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>uvfr_global_config.h</label>
        <link refid="uvfr__global__config_8h"/>
      </node>
      <node id="30">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
      </node>
      <node id="1">
        <label>Core/Inc/uvfr_state_engine.h</label>
        <link refid="uvfr__state__engine_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>odometer.h</label>
        <link refid="odometer_8h"/>
      </node>
      <node id="5">
        <label>stm32f4xx_hal.h</label>
      </node>
      <node id="15">
        <label>FreeRTOS.h</label>
      </node>
      <node id="11">
        <label>dma.h</label>
        <link refid="dma_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>task.h</label>
      </node>
      <node id="4">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="17">
        <label>Core/Inc/tim.h</label>
        <link refid="tim_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>Core/Inc/imd.h</label>
        <link refid="imd_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>Core/Src/daq.c</label>
        <link refid="daq_8c"/>
      </node>
      <node id="28">
        <label>Core/Inc/dash.h</label>
        <link refid="dash_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>Core/Inc/driving_loop.h</label>
        <link refid="driving__loop_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>Core/Inc/temp_monitoring.h</label>
        <link refid="temp__monitoring_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>Core/Src/pdu.c</label>
        <link refid="pdu_8c"/>
      </node>
      <node id="10">
        <label>Core/Src/dash.c</label>
        <link refid="dash_8c"/>
      </node>
      <node id="18">
        <label>Core/Src/tim.c</label>
        <link refid="tim_8c"/>
      </node>
      <node id="44">
        <label>Core/Src/uvfr_state_engine.c</label>
        <link refid="uvfr__state__engine_8c"/>
      </node>
      <node id="39">
        <label>Core/Inc/oled.h</label>
        <link refid="oled_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Core/Inc/adc.h</label>
        <link refid="adc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>Core/Src/stm32f4xx_hal_msp.c</label>
        <link refid="stm32f4xx__hal__msp_8c"/>
      </node>
      <node id="2">
        <label>Core/Inc/uvfr_utils.h</label>
        <link refid="uvfr__utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>Core/Src/odometer.c</label>
        <link refid="odometer_8c"/>
      </node>
      <node id="32">
        <label>Core/Src/freertos.c</label>
        <link refid="freertos_8c"/>
      </node>
      <node id="8">
        <label>Core/Src/bms.c</label>
        <link refid="bms_8c"/>
      </node>
      <node id="27">
        <label>Core/Inc/bms.h</label>
        <link refid="bms_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Core/Src/motor_controller.c</label>
        <link refid="motor__controller_8c"/>
      </node>
      <node id="36">
        <label>Core/Src/uvfr_settings.c</label>
        <link refid="uvfr__settings_8c"/>
      </node>
      <node id="11">
        <label>Core/Src/driving_loop.c</label>
        <link refid="driving__loop_8c"/>
      </node>
      <node id="22">
        <label>Core/Inc/spi.h</label>
        <link refid="spi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>Core/Inc/pdu.h</label>
        <link refid="pdu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Core/Src/gpio.c</label>
        <link refid="gpio_8c"/>
      </node>
      <node id="24">
        <label>Core/Inc/motor_controller.h</label>
        <link refid="motor__controller_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>Core/Inc/uvfr_settings.h</label>
        <link refid="uvfr__settings_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>Core/Src/rb_tree.c</label>
        <link refid="rb__tree_8c"/>
      </node>
      <node id="16">
        <label>Core/Src/dma.c</label>
        <link refid="dma_8c"/>
      </node>
      <node id="21">
        <label>Core/Src/temp_monitoring.c</label>
        <link refid="temp__monitoring_8c"/>
      </node>
      <node id="37">
        <label>Core/Inc/daq.h</label>
        <link refid="daq_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>Core/Inc/gpio.h</label>
        <link refid="gpio_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>Core/Src/uvfr_utils.c</label>
        <link refid="uvfr__utils_8c"/>
      </node>
      <node id="23">
        <label>Core/Src/spi.c</label>
        <link refid="spi_8c"/>
      </node>
      <node id="31">
        <label>Core/Src/constants.c</label>
        <link refid="constants_8c"/>
      </node>
      <node id="12">
        <label>Core/Src/imd.c</label>
        <link refid="imd_8c"/>
      </node>
      <node id="7">
        <label>Core/Inc/can.h</label>
        <link refid="can_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>Core/Src/stm32f4xx_it.c</label>
        <link refid="stm32f4xx__it_8c"/>
      </node>
      <node id="1">
        <label>Core/Inc/uvfr_state_engine.h</label>
        <link refid="uvfr__state__engine_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Core/Src/can.c</label>
        <link refid="can_8c"/>
      </node>
      <node id="41">
        <label>Core/Inc/uvfr_vehicle_commands.h</label>
        <link refid="uvfr__vehicle__commands_8h"/>
      </node>
      <node id="33">
        <label>Core/Src/oled.c</label>
        <link refid="oled_8c"/>
      </node>
      <node id="5">
        <label>Core/Src/adc.c</label>
        <link refid="adc_8c"/>
      </node>
      <node id="6">
        <label>Core/Src/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="15">
        <label>Core/Inc/dma.h</label>
        <link refid="dma_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Core/Inc/main.h</label>
        <link refid="main_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structuv__scd__response" prot="public">uv_scd_response</innerclass>
    <innerclass refid="structtask__management__info" prot="public">task_management_info</innerclass>
    <innerclass refid="structtask__status__block" prot="public">task_status_block</innerclass>
    <innerclass refid="structuv__os__settings" prot="public">uv_os_settings</innerclass>
    <innerclass refid="structuv__task__info" prot="public">uv_task_info</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="uvfr__state__engine_8h_1a20115c3c236542d702abb10565f381f2" prot="public" static="no">
        <name>_UV_DEFAULT_TASK_INSTANCES</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="56" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="uvfr__state__engine_8h_1a32571accb85a2d8f479c6066d7a46238" prot="public" static="no">
        <name>_UV_DEFAULT_TASK_STACK_SIZE</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="58" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="uvfr__state__engine_8h_1a3ecc1e9c72ff5ba01649bf037186b015" prot="public" static="no">
        <name>_UV_DEFAULT_TASK_PERIOD</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="60" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="uvfr__state__engine_8h_1a7aab8d4b97eeacffeb153a91f70b5e6b" prot="public" static="no">
        <name>_UV_MIN_TASK_PERIOD</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="61" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="uvfr__state__engine_8h_1a2b86418bd482f9d4a2a36f35e786798e" prot="public" static="no">
        <name>_LONGEST_SC_TIME</name>
        <initializer>300</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="63" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="uvfr__state__engine_8h_1a092c530d4a0cd880a59598dc0fca95d4" prot="public" static="no">
        <name>_SC_DAEMON_PERIOD</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="64" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="uvfr__state__engine_8h_1afa84e50f417bfe6026bd922b546e4daa" prot="public" static="no">
        <name>SVC_TASK_MAX_CHECKIN_PERIOD</name>
        <initializer>500</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="66" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1ga253c75b331d0976b9a414657cef780cd" prot="public" static="no">
        <name>UV_TASK_VEHICLE_APPLICATION</name>
        <initializer>0x0001U&lt;&lt;(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="181" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1ga3142d67aec5c34719e90cf122948f1db" prot="public" static="no">
        <name>UV_TASK_PERIODIC_SVC</name>
        <initializer>0x0001U&lt;&lt;(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="182" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1gaae81d88a64e53c686e8e0fd01bfe723d" prot="public" static="no">
        <name>UV_TASK_DORMANT_SVC</name>
        <initializer>0b0000000000000011</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="183" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1ga056a2272c9356c78597c5c82bc58db2f" prot="public" static="no">
        <name>UV_TASK_GENERIC_SVC</name>
        <initializer>0x0001U&lt;&lt;(2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="184" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1ga96c7c915194ecba48edd70def54a700b" prot="public" static="no">
        <name>UV_TASK_MANAGER_MASK</name>
        <initializer>0b0000000000000011</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="185" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1gafc49f7a5303ebabaa3fc0886d67f3e9a" prot="public" static="no">
        <name>UV_TASK_LOG_START_STOP_TIME</name>
        <initializer>0x0001U&lt;&lt;(2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="186" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1ga0c0d91f0feee4f7b0816b3c06b61b459" prot="public" static="no">
        <name>UV_TASK_LOG_MEM_USAGE</name>
        <initializer>0x0001U&lt;&lt;(3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="187" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1ga4d87bda0a72990876364bd8764777cb2" prot="public" static="no">
        <name>UV_TASK_SCD_IGNORE</name>
        <initializer>0x0001U&lt;&lt;(4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="188" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1ga732a956baeb0b603c6c935f1bea13fab" prot="public" static="no">
        <name>UV_TASK_IS_PARENT</name>
        <initializer>0x0001U&lt;&lt;(5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="189" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1ga5030c3ffc04fb93607cf1d4880a66731" prot="public" static="no">
        <name>UV_TASK_IS_CHILD</name>
        <initializer>0x0001U&lt;&lt;(6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="190" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1gab3967da84c26663341e0cb2ed5177c70" prot="public" static="no">
        <name>UV_TASK_IS_ORPHAN</name>
        <initializer>0x0001U&lt;&lt;(7)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="191" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1ga52394ced81b82c523082ed2c4bb9e2d7" prot="public" static="no">
        <name>UV_TASK_ERR_IN_CHILD</name>
        <initializer>0x0001U&lt;&lt;(8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="192" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1ga0ce66ea8b0c49749cc05a3ba06b2df75" prot="public" static="no">
        <name>UV_TASK_AWAITING_DELETION</name>
        <initializer>0x0001U&lt;&lt;(9)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="193" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1gaf1374f633bd37be99d7d58e33270ce8c" prot="public" static="no">
        <name>UV_TASK_DEFER_DELETION</name>
        <initializer>0x0001U&lt;&lt;(10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="194" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1ga4d88012d785bba8a4aa943c23c4450a2" prot="public" static="no">
        <name>UV_TASK_DEADLINE_NOT_ENFORCED</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="195" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1ga337aaae50133aedb5d733b6ede6fb10d" prot="public" static="no">
        <name>UV_TASK_PRIO_INCREMENTATION</name>
        <initializer>0x0001U&lt;&lt;(11)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="196" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1gaa3b4befdf874ecfeac5face2cf1ae1a5" prot="public" static="no">
        <name>UV_TASK_DEADLINE_FIRM</name>
        <initializer>0x0001U&lt;&lt;(12)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="197" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1ga50fac7a227841deccc8b30cef230ba08" prot="public" static="no">
        <name>UV_TASK_DEADLINE_HARD</name>
        <initializer>(0x0001U&lt;&lt;(11)|0x0001U&lt;&lt;(12))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="198" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1ga04e93f880387fe61195800f0dfaac0bd" prot="public" static="no">
        <name>UV_TASK_DEADLINE_MASK</name>
        <initializer>(0x0001U&lt;&lt;(11)|0x0001U&lt;&lt;(12))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="199" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1gab37af27fe89f1987ee38bdb0bc945c43" prot="public" static="no">
        <name>UV_TASK_MISSION_CRITICAL</name>
        <initializer>0x0001U&lt;&lt;(13)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="200" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1ga70b5081fb012f121afe19c5ad2da9622" prot="public" static="no">
        <name>UV_TASK_DELAYING</name>
        <initializer>0x0001U&lt;&lt;(14)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="201" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1ga07dcd5b5c28f257e50e0d04f519b5e7a" prot="public" static="no">
        <name>uvTaskSetDeletionBit</name>
        <param><defname>t</defname></param>
        <initializer>(t-&gt;task_flags|=<ref refid="group__state__engine__api_1ga0ce66ea8b0c49749cc05a3ba06b2df75" kindref="member">UV_TASK_AWAITING_DELETION</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="260" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1gabe734bf4eb30c1a532e083dc9bdf938c" prot="public" static="no">
        <name>uvTaskResetDeletionBit</name>
        <param><defname>t</defname></param>
        <initializer>(t-&gt;task_flags &amp;=(~<ref refid="group__state__engine__api_1ga0ce66ea8b0c49749cc05a3ba06b2df75" kindref="member">UV_TASK_AWAITING_DELETION</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="261" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1ga3cab3b3fd6589348dceaf91b14e2a6ef" prot="public" static="no">
        <name>uvTaskSetDelayBit</name>
        <param><defname>t</defname></param>
        <initializer>(t-&gt;task_flags|=<ref refid="group__state__engine__api_1ga70b5081fb012f121afe19c5ad2da9622" kindref="member">UV_TASK_DELAYING</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="263" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1ga2d3d223399d12a0af224266487f35483" prot="public" static="no">
        <name>uvTaskResetDelayBit</name>
        <param><defname>t</defname></param>
        <initializer>(t-&gt;task_flags&amp;=(~<ref refid="group__state__engine__api_1ga70b5081fb012f121afe19c5ad2da9622" kindref="member">UV_TASK_DELAYING</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="265" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1ga0e5d6feafad4764ab2ffd4604ab633b5" prot="public" static="no">
        <name>uvTaskIsDelaying</name>
        <param><defname>t</defname></param>
        <initializer>((t-&gt;task_flags&amp;<ref refid="group__state__engine__api_1ga70b5081fb012f121afe19c5ad2da9622" kindref="member">UV_TASK_DELAYING</ref>)==<ref refid="group__state__engine__api_1ga70b5081fb012f121afe19c5ad2da9622" kindref="member">UV_TASK_DELAYING</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="267" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1ga5073c1aa60fa9292bc88054a2184daee" prot="public" static="no">
        <name>uvTaskDelay</name>
        <param><defname>x</defname></param>
        <param><defname>t</defname></param>
        <initializer><ref refid="group__state__engine__api_1ga3cab3b3fd6589348dceaf91b14e2a6ef" kindref="member">uvTaskSetDelayBit</ref>(x);\
	vTaskDelay(t);\
	<ref refid="group__state__engine__api_1ga2d3d223399d12a0af224266487f35483" kindref="member">uvTaskResetDelayBit</ref>(x)</initializer>
        <briefdescription>
<para>State engine aware vTaskDelay wrapper. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>is how long to delay in ticks </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="274" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__state__engine__api_1ga1fc770ae6f3a6643548e0fb00a732ae5" prot="public" static="no">
        <name>uvTaskDelayUntil</name>
        <param><defname>x</defname></param>
        <param><defname>lasttim</defname></param>
        <param><defname>per</defname></param>
        <initializer><ref refid="group__state__engine__api_1ga3cab3b3fd6589348dceaf91b14e2a6ef" kindref="member">uvTaskSetDelayBit</ref>(x);\
	vTaskDelayUntil(&amp;lasttim,per);\
	<ref refid="group__state__engine__api_1ga2d3d223399d12a0af224266487f35483" kindref="member">uvTaskResetDelayBit</ref>(x)</initializer>
        <briefdescription>
<para>State engine aware vTaskDelayUntil wrapper. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lasttim</parametername>
</parameternamelist>
<parameterdescription>
<para>is the variable storing the last delay time. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>per</parametername>
</parameternamelist>
<parameterdescription>
<para>is the period.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This will cause the task to wait until the last time + the period. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="286" column="9" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__state__engine__api_1ga259abff5a03eaf908dc8f03d99f478e4" prot="public" static="no" strong="no">
        <type></type>
        <name>uv_vehicle_state_t</name>
        <enumvalue id="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4a5e3e7ecab0a58b320912cb4129641579" prot="public">
          <name>UV_INIT</name>
          <initializer>= 0x0001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Vehicle is in the process of initializing </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4a9ec1eef180c6208b25b08f0526dc5eb8" prot="public">
          <name>UV_READY</name>
          <initializer>= 0x0002</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Vehicle has initialized and is ready to drive </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4abed5371c079ef927fb67d8bb8e8aa286" prot="public">
          <name>PROGRAMMING</name>
          <initializer>= 0x0004</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The settings of the vehicle are being edited now </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4aa4f9f0d81d66079ab97ea3abc3808969" prot="public">
          <name>UV_DRIVING</name>
          <initializer>= 0x0008</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The vehicle is actively driving </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4abfddf18c580c465bb3c27b522aa4e4a9" prot="public">
          <name>UV_SUSPENDED</name>
          <initializer>= 0x0010</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The vehicle is not allowed to produce any torque, but not full shutdown </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4a7ff39f8abdc9adbfd693e412e4aaeb6e" prot="public">
          <name>UV_LAUNCH_CONTROL</name>
          <initializer>= 0x0020</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The vehicle is presently in launch control mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4ac1fcacc095b8c0f1c9f452d51815bcb5" prot="public">
          <name>UV_ERROR_STATE</name>
          <initializer>= 0x0040</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Some error has occurred here </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4afdfc4cdb8c5210e05bdfdc3df51f80ff" prot="public">
          <name>UV_BOOT</name>
          <initializer>= 0x0080</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Pre-init, when the boot loader is going </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4a2d3dc239e61931f9f779b71e84005b1b" prot="public">
          <name>UV_HALT</name>
          <initializer>= 0x0100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Stop literally everything, except for what is needed to reset vehicle </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Type representing the overall state and operating mode of the vehicle. </para>
        </briefdescription>
        <detaileddescription>
<para>Type made to represent the state of the vehicle, and the location in the state machine The states are powers of two to make it easier to discern tasks that need to happen in multiple states </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="81" column="32" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="81" bodyend="91"/>
      </memberdef>
      <memberdef kind="enum" id="group__state__engine__api_1gaf11e8677926913f2dd803fabbed3455c" prot="public" static="no" strong="no">
        <type></type>
        <name>uv_task_cmd_e</name>
        <enumvalue id="group__state__engine__api_1ggaf11e8677926913f2dd803fabbed3455ca3641b5b35403903b66faf4d615c3199d" prot="public">
          <name>UV_NO_CMD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The SCD has issued no command, and therefore no action is required </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1ggaf11e8677926913f2dd803fabbed3455ca0e75e398c2bbcb663eaeb98684ca69d6" prot="public">
          <name>UV_KILL_CMD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The SCD has decreed that this task must be deleted </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1ggaf11e8677926913f2dd803fabbed3455ca5f389a67f2a45fe1f51492b3b8f04077" prot="public">
          <name>UV_SUSPEND_CMD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The SCD has decreed that this task must be suspended </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1ggaf11e8677926913f2dd803fabbed3455cabac2ecce11df7b3e4b872ba4d22f7564" prot="public">
          <name>UV_TASK_START_CMD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>OK for task to begin execution </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Special commands used to start and shutdown tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="96" column="27" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="96" bodyend="101"/>
      </memberdef>
      <memberdef kind="enum" id="group__state__engine__api_1gadfdfabf66fb37e4e702a1019bf1a9a76" prot="public" static="no" strong="no">
        <type></type>
        <name>uv_scd_response_e</name>
        <enumvalue id="group__state__engine__api_1ggadfdfabf66fb37e4e702a1019bf1a9a76a886d929188a37a7fdae4b18b65a261ca" prot="public">
          <name>UV_SUCCESSFUL_DELETION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Returned when a task was successfully deleted </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1ggadfdfabf66fb37e4e702a1019bf1a9a76a75d7f4415a6450a9c3d35aaf7b9577cd" prot="public">
          <name>UV_SUCCESSFUL_SUSPENSION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Returned when a task is successfully suspended </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1ggadfdfabf66fb37e4e702a1019bf1a9a76aa66da42f9355512e286812074433015b" prot="public">
          <name>UV_COULDNT_DELETE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task was not successfully deleted </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1ggadfdfabf66fb37e4e702a1019bf1a9a76a3c33585e5ac7f76a9bc4dc1fccb764ec" prot="public">
          <name>UV_COULDNT_SUSPEND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task was not successfully suspended </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1ggadfdfabf66fb37e4e702a1019bf1a9a76a0dd4e6d2bbbde83536ed21ac4ce2bd00" prot="public">
          <name>UV_UNSAFE_STATE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task has ended up in a fucked middle ground state </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Response from a task confirming it has been either deleted or suspended. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="106" column="23" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="106" bodyend="112"/>
      </memberdef>
      <memberdef kind="enum" id="group__state__engine__api_1gac94b6bd11853173599ccff034055cc88" prot="public" static="no" strong="no">
        <type></type>
        <name>uv_task_state_t</name>
        <enumvalue id="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88a529c3f9ad3ef9a8e387d875c7a118c7e" prot="public">
          <name>UV_TASK_NOT_STARTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88af6465f57e0b6515721c5cbebd769e691" prot="public">
          <name>UV_TASK_DELETED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88ad4da927019afea812b31d46d28b7354c" prot="public">
          <name>UV_TASK_RUNNING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88a147f6febce613c666fe922907472ca0f" prot="public">
          <name>UV_TASK_SUSPENDED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum representing the state of a managed task. </para>
        </briefdescription>
        <detaileddescription>
<para>This is used as a flag to indicate whether or not the state_engine is aware of a task is running or not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="124" column="29" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="124" bodyend="129"/>
      </memberdef>
      <memberdef kind="enum" id="group__state__engine__api_1ga6166ed80f8e3bd62f1e7e6122c8817f6" prot="public" static="no" strong="no">
        <type></type>
        <name>task_priority</name>
        <enumvalue id="group__state__engine__api_1gga6166ed80f8e3bd62f1e7e6122c8817f6ae1e0864e3b20ced26bebc93aa0766aec" prot="public">
          <name>IDLE_TASK_PRIORITY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1gga6166ed80f8e3bd62f1e7e6122c8817f6adb8ee22a232a2787f32ba28da55c43c1" prot="public">
          <name>LOW_PRIORITY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1gga6166ed80f8e3bd62f1e7e6122c8817f6afe8b192d5f5af86fd93c4f84f7ef3383" prot="public">
          <name>BELOW_NORMAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1gga6166ed80f8e3bd62f1e7e6122c8817f6a06b314d863076d54942e065d90c179c4" prot="public">
          <name>MEDIUM_PRIORITY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1gga6166ed80f8e3bd62f1e7e6122c8817f6a052e6887345173e8b7556738c28fa920" prot="public">
          <name>ABOVE_NORMAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1gga6166ed80f8e3bd62f1e7e6122c8817f6acb1785f11dd02aa7f5d164fb314c594e" prot="public">
          <name>HIGH_PRIORITY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__state__engine__api_1gga6166ed80f8e3bd62f1e7e6122c8817f6aa20ceda9447596a05151a4a66db46a92" prot="public">
          <name>REALTIME_PRIORITY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Priority of a managed task. Maps directly to OS priority. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="135" column="27" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="135" bodyend="143"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="uvfr__state__engine_8h_1aef3770e45bbacbf527fd93dd80eea9b9" prot="public" static="no">
        <type>enum <ref refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9e" kindref="member">uv_status_t</ref></type>
        <definition>typedef enum uv_status_t uv_status</definition>
        <argsstring></argsstring>
        <name>uv_status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="47" column="10" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="uvfr__state__engine_8h_1aa6ffd72eb4909ddb38c37a1369e13f09" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t uv_task_id</definition>
        <argsstring></argsstring>
        <name>uv_task_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="52" column="17" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="uvfr__state__engine_8h_1af1ca0b89ee88cdf48a7640d6ec793350" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t uv_timespan_ms</definition>
        <argsstring></argsstring>
        <name>uv_timespan_ms</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="70" column="18" bodyfile="Core/Inc/uvfr_state_engine.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__state__engine__api_1ga140983d0a0ccbfd2d5f2c93183cbe797" prot="public" static="no">
        <type>enum <ref refid="group__state__engine__api_1ga259abff5a03eaf908dc8f03d99f478e4" kindref="member">uv_vehicle_state_t</ref></type>
        <definition>typedef enum uv_vehicle_state_t uv_vehicle_state</definition>
        <argsstring></argsstring>
        <name>uv_vehicle_state</name>
        <briefdescription>
<para>Type representing the overall state and operating mode of the vehicle. </para>
        </briefdescription>
        <detaileddescription>
<para>Type made to represent the state of the vehicle, and the location in the state machine The states are powers of two to make it easier to discern tasks that need to happen in multiple states </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="91" column="17"/>
      </memberdef>
      <memberdef kind="typedef" id="group__state__engine__api_1gae1b70a2c1baa7da5592e7324008636e4" prot="public" static="no">
        <type>enum <ref refid="group__state__engine__api_1gaf11e8677926913f2dd803fabbed3455c" kindref="member">uv_task_cmd_e</ref></type>
        <definition>typedef enum uv_task_cmd_e uv_task_cmd</definition>
        <argsstring></argsstring>
        <name>uv_task_cmd</name>
        <briefdescription>
<para>Special commands used to start and shutdown tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="101" column="12"/>
      </memberdef>
      <memberdef kind="typedef" id="group__state__engine__api_1ga856f7f6f3b6b92f655aafc552606ffea" prot="public" static="no">
        <type>struct <ref refid="structuv__scd__response" kindref="compound">uv_scd_response</ref></type>
        <definition>typedef struct uv_scd_response uv_scd_response</definition>
        <argsstring></argsstring>
        <name>uv_scd_response</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="117" column="16"/>
      </memberdef>
      <memberdef kind="typedef" id="group__state__engine__api_1ga82006c09ffd194e360785bb51a39ec3f" prot="public" static="no">
        <type>enum <ref refid="group__state__engine__api_1gac94b6bd11853173599ccff034055cc88" kindref="member">uv_task_state_t</ref></type>
        <definition>typedef enum uv_task_state_t  uv_task_status</definition>
        <argsstring></argsstring>
        <name>uv_task_status</name>
        <briefdescription>
<para>Enum representing the state of a managed task. </para>
        </briefdescription>
        <detaileddescription>
<para>This is used as a flag to indicate whether or not the state_engine is aware of a task is running or not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="129" column="16"/>
      </memberdef>
      <memberdef kind="typedef" id="group__state__engine__api_1ga0faa8cc05082e150c515bbddea144d90" prot="public" static="no">
        <type>enum <ref refid="group__state__engine__api_1ga6166ed80f8e3bd62f1e7e6122c8817f6" kindref="member">task_priority</ref></type>
        <definition>typedef enum task_priority task_priority</definition>
        <argsstring></argsstring>
        <name>task_priority</name>
        <briefdescription>
<para>Priority of a managed task. Maps directly to OS priority. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="143" column="14"/>
      </memberdef>
      <memberdef kind="typedef" id="group__state__engine__api_1gae41267a13309a303a826aa55c4873a31" prot="public" static="no">
        <type>struct <ref refid="structtask__management__info" kindref="compound">task_management_info</ref></type>
        <definition>typedef struct task_management_info task_management_info</definition>
        <argsstring></argsstring>
        <name>task_management_info</name>
        <briefdescription>
<para>Struct to contain data about a parent task. </para>
        </briefdescription>
        <detaileddescription>
<para>This contains the information required for the child task to communicate with it&apos;s parent.</para>
<para>This will be a queue, since one parent task can in theory have several child tasks </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="157" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="group__state__engine__api_1ga0d368f40115996d74f2e3833ff1a5396" prot="public" static="no">
        <type>struct <ref refid="structtask__status__block" kindref="compound">task_status_block</ref></type>
        <definition>typedef struct task_status_block task_status_block</definition>
        <argsstring></argsstring>
        <name>task_status_block</name>
        <briefdescription>
<para>Information about the task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="165" column="18"/>
      </memberdef>
      <memberdef kind="typedef" id="group__state__engine__api_1ga4622e8f893111a8641c8e5a44df3d3dd" prot="public" static="no">
        <type>struct <ref refid="structuv__os__settings" kindref="compound">uv_os_settings</ref></type>
        <definition>typedef struct uv_os_settings uv_os_settings</definition>
        <argsstring></argsstring>
        <name>uv_os_settings</name>
        <briefdescription>
<para>Settings that dictate state engine behavior. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="178" column="15"/>
      </memberdef>
      <memberdef kind="typedef" id="group__state__engine__api_1gaebe69bead1b7c3a1371ffe610708e0ef" prot="public" static="no">
        <type>struct <ref refid="structuv__task__info" kindref="compound">uv_task_info</ref></type>
        <definition>typedef struct uv_task_info uv_task_info</definition>
        <argsstring></argsstring>
        <name>uv_task_info</name>
        <briefdescription>
<para>This struct is designed to hold neccessary information about an RTOS task that will be managed by uvfr_state_engine. </para>
        </briefdescription>
        <detaileddescription>
<para>Pay close attention, because this is one of the most cursed structs in the project, as well as one of the most important </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="258" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__state__engine_1ga2f58cf65b3566bc390600f877f8bed35" prot="public" static="no" mutable="no">
        <type>enum <ref refid="group__state__engine__api_1ga259abff5a03eaf908dc8f03d99f478e4" kindref="member">uv_vehicle_state_t</ref></type>
        <definition>enum uv_vehicle_state_t vehicle_state</definition>
        <argsstring></argsstring>
        <name>vehicle_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="340" column="6" bodyfile="Core/Src/uvfr_state_engine.c" bodystart="39" bodyend="-1" declfile="Core/Inc/uvfr_state_engine.h" declline="340" declcolumn="6"/>
        <referencedby refid="daq_8c_1a433bb586ceab47aed8d633fa2ff8ce56" compoundref="daq_8c" startline="62" endline="101">daqMasterTask</referencedby>
        <referencedby refid="group__state__engine__api_1gaa3ad3e8df75177c00265881c16563212" compoundref="uvfr__state__engine_8c" startline="86" endline="143">changeVehicleState</referencedby>
        <referencedby refid="group__state__engine__api_1ga2ad1d74b5783a51355c047be6642fab8" compoundref="uvfr__state__engine_8c" startline="179" endline="231">uvStartStateMachine</referencedby>
        <referencedby refid="group__state__engine__backend_1ga8519c96858b096f2fccb96d3334df93a" compoundref="uvfr__state__engine_8c" startline="868" endline="1041">_stateChangeDaemon</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__state__engine__api_1ga99bfc92472cdc99e9005e9d3c792909a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structuv__task__info" kindref="compound">uv_task_info</ref> *</type>
        <definition>struct uv_task_info* uvCreateTask</definition>
        <argsstring>()</argsstring>
        <name>uvCreateTask</name>
        <briefdescription>
<para>This function gets called when you want to create a task, and register it with the task register. Theres some gnarlyness here, but not unacceptable levels. Pray this thing doesn&apos;t hang itself. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Do not exceed the number of tasks available</para>
<para>Acquire the pointer to the spot in the array, we are doing this since we need to return the pointer anyways, and it cleans up the syntax a little.</para>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="294" column="20" bodyfile="Core/Src/uvfr_state_engine.c" bodystart="249" bodyend="287" declfile="Core/Inc/uvfr_state_engine.h" declline="294" declcolumn="20"/>
        <references refid="group__state__engine_1gaf070a24ce066297b4a8276ddcb884b0c" compoundref="uvfr__state__engine_8c" startline="25">_next_task_id</references>
        <references refid="group__state__engine_1ga8a80fe70c2d06583bbcd00c5162860c5" compoundref="uvfr__state__engine_8c" startline="20">MAX_NUM_MANAGED_TASKS</references>
        <references refid="group__state__engine_1ga6b49ab568bed9d9189782eebb90545b5" compoundref="uvfr__state__engine_8c" startline="26">_task_register</references>
        <references refid="structuv__task__info_1a8ed5c619d9eea62c2beb08fa2db6b092" compoundref="uvfr__state__engine_8h" startline="210">uv_task_info::task_id</references>
        <references refid="structuv__task__info_1ad24b438130bb3098ee5e855222dff21d" compoundref="uvfr__state__engine_8h" startline="211">uv_task_info::task_name</references>
        <references refid="structuv__task__info_1afcd240d2b6b01b4acea600ef4dfe8fbc" compoundref="uvfr__state__engine_8h" startline="216">uv_task_info::task_function</references>
        <references refid="structuv__task__info_1aff45751f7189980589d55379d1d5a355" compoundref="uvfr__state__engine_8h" startline="217">uv_task_info::task_priority</references>
        <references refid="structuv__task__info_1a353ec6bf2c42ab0920f3d1e671e568a3" compoundref="uvfr__state__engine_8h" startline="220">uv_task_info::stack_size</references>
        <references refid="uvfr__state__engine_8h_1a32571accb85a2d8f479c6066d7a46238" compoundref="uvfr__state__engine_8h" startline="58">_UV_DEFAULT_TASK_STACK_SIZE</references>
        <references refid="structuv__task__info_1a43e5b3136b38dde4272aa510c5349ba3" compoundref="uvfr__state__engine_8h" startline="225">uv_task_info::task_state</references>
        <references refid="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88a529c3f9ad3ef9a8e387d875c7a118c7e" compoundref="uvfr__state__engine_8h" startline="125">UV_TASK_NOT_STARTED</references>
        <references refid="structuv__task__info_1ab24dea3bde4de2d839bf15e65c2df0d6" compoundref="uvfr__state__engine_8h" startline="239">uv_task_info::active_states</references>
        <references refid="structuv__task__info_1a6986d7216c7f889164931b37ab752c29" compoundref="uvfr__state__engine_8h" startline="240">uv_task_info::deletion_states</references>
        <references refid="structuv__task__info_1aafd4e2d916f50b54b99fd02d63831e43" compoundref="uvfr__state__engine_8h" startline="241">uv_task_info::suspension_states</references>
        <references refid="structuv__task__info_1a5d32fc8f47b905499257336c561d189b" compoundref="uvfr__state__engine_8h" startline="234">uv_task_info::parent</references>
        <references refid="structuv__task__info_1a5347f41c4b15b2d6b039c339613fde43" compoundref="uvfr__state__engine_8h" startline="228">uv_task_info::task_handle</references>
        <references refid="structuv__task__info_1a6567a294eec7b11ac0d4bc3b927ef9e9" compoundref="uvfr__state__engine_8h" startline="243">uv_task_info::task_flags</references>
        <references refid="group__state__engine__api_1ga253c75b331d0976b9a414657cef780cd" compoundref="uvfr__state__engine_8h" startline="181">UV_TASK_VEHICLE_APPLICATION</references>
        <referencedby refid="daq_8c_1af2c619df9f3d115dcbc511b0bb738e87" compoundref="daq_8c" startline="30" endline="57">initDaqTask</referencedby>
        <referencedby refid="driving__loop_8c_1af580185fb5bb1cfba30ee1709d90628c" compoundref="driving__loop_8c" startline="25" endline="59">initDrivingLoop</referencedby>
        <referencedby refid="odometer_8c_1ace344890a9a3f03e059a4eb44af85e00" compoundref="odometer_8c" startline="11" endline="40">initOdometer</referencedby>
        <referencedby refid="temp__monitoring_8c_1a979dc6ff14a3ef1f72e3cbea884871b0" compoundref="temp__monitoring_8c" startline="12" endline="40">initTempMonitor</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__state__engine__backend_1ga20334b4aff0cfdab7be1d2864089c5ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structuv__task__info" kindref="compound">uv_task_info</ref> *</type>
        <definition>struct uv_task_info* uvCreateServiceTask</definition>
        <argsstring>()</argsstring>
        <name>uvCreateServiceTask</name>
        <briefdescription>
<para>Create a new service task, because fuck you, thats why. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Acquire the pointer to the spot in the array, we are doing this since we need to return the pointer anyways, and it cleans up the syntax a little.</para>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="296" column="20" bodyfile="Core/Src/uvfr_state_engine.c" bodystart="1138" bodyend="1173" declfile="Core/Inc/uvfr_state_engine.h" declline="296" declcolumn="20"/>
        <references refid="group__state__engine_1gaf070a24ce066297b4a8276ddcb884b0c" compoundref="uvfr__state__engine_8c" startline="25">_next_task_id</references>
        <references refid="group__state__engine_1ga8a80fe70c2d06583bbcd00c5162860c5" compoundref="uvfr__state__engine_8c" startline="20">MAX_NUM_MANAGED_TASKS</references>
        <references refid="group__state__engine_1ga6b49ab568bed9d9189782eebb90545b5" compoundref="uvfr__state__engine_8c" startline="26">_task_register</references>
        <references refid="structuv__task__info_1a8ed5c619d9eea62c2beb08fa2db6b092" compoundref="uvfr__state__engine_8h" startline="210">uv_task_info::task_id</references>
        <references refid="group__state__engine_1gae48b13e362d2b9d10ec61f516ea5c09f" compoundref="uvfr__state__engine_8c" startline="28">_next_svc_task_id</references>
        <references refid="structuv__task__info_1ad24b438130bb3098ee5e855222dff21d" compoundref="uvfr__state__engine_8h" startline="211">uv_task_info::task_name</references>
        <references refid="structuv__task__info_1afcd240d2b6b01b4acea600ef4dfe8fbc" compoundref="uvfr__state__engine_8h" startline="216">uv_task_info::task_function</references>
        <references refid="structuv__task__info_1aff45751f7189980589d55379d1d5a355" compoundref="uvfr__state__engine_8h" startline="217">uv_task_info::task_priority</references>
        <references refid="structuv__task__info_1a353ec6bf2c42ab0920f3d1e671e568a3" compoundref="uvfr__state__engine_8h" startline="220">uv_task_info::stack_size</references>
        <references refid="uvfr__state__engine_8h_1a32571accb85a2d8f479c6066d7a46238" compoundref="uvfr__state__engine_8h" startline="58">_UV_DEFAULT_TASK_STACK_SIZE</references>
        <references refid="structuv__task__info_1a43e5b3136b38dde4272aa510c5349ba3" compoundref="uvfr__state__engine_8h" startline="225">uv_task_info::task_state</references>
        <references refid="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88a529c3f9ad3ef9a8e387d875c7a118c7e" compoundref="uvfr__state__engine_8h" startline="125">UV_TASK_NOT_STARTED</references>
        <references refid="structuv__task__info_1ab24dea3bde4de2d839bf15e65c2df0d6" compoundref="uvfr__state__engine_8h" startline="239">uv_task_info::active_states</references>
        <references refid="structuv__task__info_1a6986d7216c7f889164931b37ab752c29" compoundref="uvfr__state__engine_8h" startline="240">uv_task_info::deletion_states</references>
        <references refid="structuv__task__info_1aafd4e2d916f50b54b99fd02d63831e43" compoundref="uvfr__state__engine_8h" startline="241">uv_task_info::suspension_states</references>
        <references refid="structuv__task__info_1a5d32fc8f47b905499257336c561d189b" compoundref="uvfr__state__engine_8h" startline="234">uv_task_info::parent</references>
        <references refid="structuv__task__info_1a5347f41c4b15b2d6b039c339613fde43" compoundref="uvfr__state__engine_8h" startline="228">uv_task_info::task_handle</references>
        <references refid="structuv__task__info_1a6567a294eec7b11ac0d4bc3b927ef9e9" compoundref="uvfr__state__engine_8h" startline="243">uv_task_info::task_flags</references>
        <references refid="group__state__engine__api_1ga056a2272c9356c78597c5c82bc58db2f" compoundref="uvfr__state__engine_8h" startline="184">UV_TASK_GENERIC_SVC</references>
        <referencedby refid="group__state__engine__api_1ga5c608f3832c45eac6e2da198d4ef1ba0" compoundref="uvfr__state__engine_8c" startline="151" endline="172">uvInitStateEngine</referencedby>
        <referencedby refid="group__state__engine_1gaff684308203d45e9e16ad3d115c54279" compoundref="uvfr__state__engine_8c" startline="1284" endline="1335">uvSVCTaskManager</referencedby>
      </memberdef>
      <memberdef kind="function" id="uvfr__state__engine_8h_1ac77de2c18076b8e04742d2ca927dbd55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structuv__task__info" kindref="compound">uv_task_info</ref> *</type>
        <definition>struct uv_task_info* uvGetTaskById</definition>
        <argsstring>(uint8_t id)</argsstring>
        <name>uvGetTaskById</name>
        <param>
          <type>uint8_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="298" column="20" declfile="Core/Inc/uvfr_state_engine.h" declline="298" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__state__engine__backend_1gaf342326f88e8accc1efa35e02cdd6c37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref></type>
        <definition>uv_status _uvValidateSpecificTask</definition>
        <argsstring>(uint8_t id)</argsstring>
        <name>_uvValidateSpecificTask</name>
        <param>
          <type>uint8_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>make sure the parameters of a task_info struct is valid </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="300" column="11" bodyfile="Core/Src/uvfr_state_engine.c" bodystart="308" bodyend="338" declfile="Core/Inc/uvfr_state_engine.h" declline="300" declcolumn="11"/>
        <references refid="group__state__engine_1ga6b49ab568bed9d9189782eebb90545b5" compoundref="uvfr__state__engine_8c" startline="26">_task_register</references>
        <references refid="structuv__task__info_1ab24dea3bde4de2d839bf15e65c2df0d6" compoundref="uvfr__state__engine_8h" startline="239">uv_task_info::active_states</references>
        <references refid="structuv__task__info_1a6986d7216c7f889164931b37ab752c29" compoundref="uvfr__state__engine_8h" startline="240">uv_task_info::deletion_states</references>
        <references refid="structuv__task__info_1aafd4e2d916f50b54b99fd02d63831e43" compoundref="uvfr__state__engine_8h" startline="241">uv_task_info::suspension_states</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea480ef4e56d17703f0629bfe1e06bc4f0" compoundref="uvfr__utils_8h" startline="169">UV_ERROR</references>
        <references refid="structuv__task__info_1a6567a294eec7b11ac0d4bc3b927ef9e9" compoundref="uvfr__state__engine_8h" startline="243">uv_task_info::task_flags</references>
        <references refid="group__state__engine__api_1ga96c7c915194ecba48edd70def54a700b" compoundref="uvfr__state__engine_8h" startline="185">UV_TASK_MANAGER_MASK</references>
        <references refid="group__state__engine__api_1ga253c75b331d0976b9a414657cef780cd" compoundref="uvfr__state__engine_8h" startline="181">UV_TASK_VEHICLE_APPLICATION</references>
        <references refid="structuv__task__info_1afcd240d2b6b01b4acea600ef4dfe8fbc" compoundref="uvfr__state__engine_8h" startline="216">uv_task_info::task_function</references>
        <references refid="structuv__task__info_1ad24b438130bb3098ee5e855222dff21d" compoundref="uvfr__state__engine_8h" startline="211">uv_task_info::task_name</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" compoundref="uvfr__utils_8h" startline="167">UV_OK</references>
        <referencedby refid="group__state__engine__backend_1ga8e41e95f69723171fab38aba3b00a091" compoundref="uvfr__state__engine_8c" startline="295" endline="303">addTaskToTaskRegister</referencedby>
        <referencedby refid="group__state__engine__backend_1ga8c1618caac0d7f29836107f1a44833e8" compoundref="uvfr__state__engine_8c" startline="343" endline="356">uvValidateManagedTasks</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__state__engine__backend_1ga8c1618caac0d7f29836107f1a44833e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref></type>
        <definition>uv_status uvValidateManagedTasks</definition>
        <argsstring>()</argsstring>
        <name>uvValidateManagedTasks</name>
        <briefdescription>
<para>ensure that all the tasks people have created actually make sense, and are valid </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="302" column="11" bodyfile="Core/Src/uvfr_state_engine.c" bodystart="343" bodyend="356" declfile="Core/Inc/uvfr_state_engine.h" declline="302" declcolumn="11"/>
        <references refid="group__state__engine_1gaf070a24ce066297b4a8276ddcb884b0c" compoundref="uvfr__state__engine_8c" startline="25">_next_task_id</references>
        <references refid="group__state__engine__backend_1gaf342326f88e8accc1efa35e02cdd6c37" compoundref="uvfr__state__engine_8c" startline="308" endline="338">_uvValidateSpecificTask</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" compoundref="uvfr__utils_8h" startline="167">UV_OK</references>
        <referencedby refid="group__state__engine__api_1ga2ad1d74b5783a51355c047be6642fab8" compoundref="uvfr__state__engine_8c" startline="179" endline="231">uvStartStateMachine</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__state__engine__backend_1ga15cdf09b5625c2ba29a6c6d5c96214dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref></type>
        <definition>uv_status uvStartTask</definition>
        <argsstring>(uint32_t *tracker, struct uv_task_info *t)</argsstring>
        <name>uvStartTask</name>
        <param>
          <type>uint32_t *</type>
          <declname>tracker</declname>
        </param>
        <param>
          <type>struct <ref refid="structuv__task__info" kindref="compound">uv_task_info</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>: This is a function that starts tasks which are already registered in the system </para>
        </briefdescription>
        <detaileddescription>
<para>This bad boi gets called from the stateChangeDaemon because it&apos;s a special little snowflake. </para>
        </detaileddescription>
        <inbodydescription>
<para>The first thing we will do is check if the task is running, since this could theoretically get called from literally anywhere. If the task is running, then we check to see if <computeroutput>t-&gt;task_handle</computeroutput> is set to <computeroutput>NULL</computeroutput> . If it is null, that is a physically impossible_state. Neither very mindful or very demure.</para>
<para>That being said, if the task appears legit, then just update the corresponding bits in the tracker, and return that the task has aborted.</para>
<para>If a task has been suspended, we do not want to create a new instance of the task, becuase then the task will go out of scope, and changing the task handle to a new instance will result in the task never being de-initialized, therefore causing a memory leak. We want to call <computeroutput>vTaskResume</computeroutput> instead, and just boot the task back into existence.</para>
<para>If none of the previous if statements caught the task handle, then that means that either this is our first time attempting to activate this task, or the task has been deleted at some point prior to this one</para>
<para>The function <computeroutput>osThreadCreate</computeroutput> returns null if it fails to create a thread. If that happens, we really do have a problem, so we will be returning an error value</para>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="304" column="11" bodyfile="Core/Src/uvfr_state_engine.c" bodystart="365" bodyend="431" declfile="Core/Inc/uvfr_state_engine.h" declline="304" declcolumn="11"/>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea480ef4e56d17703f0629bfe1e06bc4f0" compoundref="uvfr__utils_8h" startline="169">UV_ERROR</references>
        <references refid="structuv__task__info_1a43e5b3136b38dde4272aa510c5349ba3" compoundref="uvfr__state__engine_8h" startline="225">uv_task_info::task_state</references>
        <references refid="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88ad4da927019afea812b31d46d28b7354c" compoundref="uvfr__state__engine_8h" startline="127">UV_TASK_RUNNING</references>
        <references refid="structuv__task__info_1a5347f41c4b15b2d6b039c339613fde43" compoundref="uvfr__state__engine_8h" startline="228">uv_task_info::task_handle</references>
        <references refid="group__utility__macros_1ga581e5838a8a85f12137dd310b210024d" compoundref="uvfr__utils_8h" startline="72">_BV_32</references>
        <references refid="structuv__task__info_1a8ed5c619d9eea62c2beb08fa2db6b092" compoundref="uvfr__state__engine_8h" startline="210">uv_task_info::task_id</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea6aa86f67f1dcd70789b27731c3ac4e7a" compoundref="uvfr__utils_8h" startline="170">UV_ABORTED</references>
        <references refid="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88a147f6febce613c666fe922907472ca0f" compoundref="uvfr__state__engine_8h" startline="128">UV_TASK_SUSPENDED</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" compoundref="uvfr__utils_8h" startline="167">UV_OK</references>
        <references refid="structuv__task__info_1afcd240d2b6b01b4acea600ef4dfe8fbc" compoundref="uvfr__state__engine_8h" startline="216">uv_task_info::task_function</references>
        <references refid="structuv__task__info_1ad24b438130bb3098ee5e855222dff21d" compoundref="uvfr__state__engine_8h" startline="211">uv_task_info::task_name</references>
        <references refid="structuv__task__info_1a353ec6bf2c42ab0920f3d1e671e568a3" compoundref="uvfr__state__engine_8h" startline="220">uv_task_info::stack_size</references>
        <references refid="structuv__task__info_1aff45751f7189980589d55379d1d5a355" compoundref="uvfr__state__engine_8h" startline="217">uv_task_info::task_priority</references>
        <referencedby refid="group__state__engine__backend_1ga8519c96858b096f2fccb96d3334df93a" compoundref="uvfr__state__engine_8c" startline="868" endline="1041">_stateChangeDaemon</referencedby>
        <referencedby refid="group__state__engine_1gaff684308203d45e9e16ad3d115c54279" compoundref="uvfr__state__engine_8c" startline="1284" endline="1335">uvSVCTaskManager</referencedby>
      </memberdef>
      <memberdef kind="function" id="uvfr__state__engine_8h_1a0547a08e521248754efe91c5de5ec182" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref></type>
        <definition>uv_status uvRegisterTask</definition>
        <argsstring>()</argsstring>
        <name>uvRegisterTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="306" column="11" declfile="Core/Inc/uvfr_state_engine.h" declline="306" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__state__engine__api_1ga5c608f3832c45eac6e2da198d4ef1ba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref></type>
        <definition>uv_status uvInitStateEngine</definition>
        <argsstring>()</argsstring>
        <name>uvInitStateEngine</name>
        <briefdescription>
<para>Function that prepares the state engine to do its thing. </para>
        </briefdescription>
        <detaileddescription>
<para>This is called when the system is first starting up. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="308" column="11" bodyfile="Core/Src/uvfr_state_engine.c" bodystart="151" bodyend="172" declfile="Core/Inc/uvfr_state_engine.h" declline="308" declcolumn="11"/>
        <references refid="group__state__engine_1ga6b49ab568bed9d9189782eebb90545b5" compoundref="uvfr__state__engine_8c" startline="26">_task_register</references>
        <references refid="group__state__engine_1ga8a80fe70c2d06583bbcd00c5162860c5" compoundref="uvfr__state__engine_8c" startline="20">MAX_NUM_MANAGED_TASKS</references>
        <references refid="uvfr__utils_8h_1a92b5ac44171d49acd084c274385a043a" compoundref="uvfr__utils_8c" startline="263" endline="277">__uvInitPanic</references>
        <references refid="group__state__engine_1ga42329069c59ef55a97a6b0bca0cafd32" compoundref="uvfr__state__engine_8c" startline="43">svc_task_manager</references>
        <references refid="group__state__engine__backend_1ga20334b4aff0cfdab7be1d2864089c5ce" compoundref="uvfr__state__engine_8c" startline="1138" endline="1173">uvCreateServiceTask</references>
        <references refid="group__state__engine_1ga3de41676729241e58688c61c450e4a1e" compoundref="uvfr__state__engine_8c" startline="42">task_manager</references>
        <references refid="driving__loop_8h_1af580185fb5bb1cfba30ee1709d90628c" compoundref="driving__loop_8c" startline="25" endline="59">initDrivingLoop</references>
        <references refid="temp__monitoring_8h_1a4d862a74e85fea73d9089ed437f9859b" compoundref="temp__monitoring_8c" startline="12" endline="40">initTempMonitor</references>
        <references refid="daq_8h_1adecae26482eb2c3289131a2a486ac8b3" compoundref="daq_8c" startline="30" endline="57">initDaqTask</references>
        <references refid="odometer_8h_1ace344890a9a3f03e059a4eb44af85e00" compoundref="odometer_8c" startline="11" endline="40">initOdometer</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" compoundref="uvfr__utils_8h" startline="167">UV_OK</references>
        <referencedby refid="uvfr__utils_8c_1a6d40598f9d8daa89ca159a2e87f4fd01" compoundref="uvfr__utils_8c" startline="37" endline="229">uvInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__state__engine__api_1ga2ad1d74b5783a51355c047be6642fab8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref></type>
        <definition>uv_status uvStartStateMachine</definition>
        <argsstring>()</argsstring>
        <name>uvStartStateMachine</name>
        <briefdescription>
<para>Actually starts up the state engine to do state engine things. </para>
        </briefdescription>
        <detaileddescription>
<para>This function ensures that all of the managed tasks are setup in a legal way, and then it allocates resources for, and starts the state engine and the background tasks. This unlocks the ability for the vehicle to do basically anything. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="310" column="11" bodyfile="Core/Src/uvfr_state_engine.c" bodystart="179" bodyend="231" declfile="Core/Inc/uvfr_state_engine.h" declline="310" declcolumn="11"/>
        <references refid="group__state__engine_1ga2ce6eef16a78c095592954d2fe68af2e" compoundref="uvfr__state__engine_8c" startline="40">previous_state</references>
        <references refid="group__state__engine_1ga2f58cf65b3566bc390600f877f8bed35" compoundref="uvfr__state__engine_8c" startline="39">vehicle_state</references>
        <references refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4a5e3e7ecab0a58b320912cb4129641579" compoundref="uvfr__state__engine_8h" startline="82">UV_INIT</references>
        <references refid="group__state__engine_1ga42329069c59ef55a97a6b0bca0cafd32" compoundref="uvfr__state__engine_8c" startline="43">svc_task_manager</references>
        <references refid="structuv__task__info_1ad24b438130bb3098ee5e855222dff21d" compoundref="uvfr__state__engine_8h" startline="211">uv_task_info::task_name</references>
        <references refid="structuv__task__info_1a6567a294eec7b11ac0d4bc3b927ef9e9" compoundref="uvfr__state__engine_8h" startline="243">uv_task_info::task_flags</references>
        <references refid="group__state__engine__api_1gab37af27fe89f1987ee38bdb0bc945c43" compoundref="uvfr__state__engine_8h" startline="200">UV_TASK_MISSION_CRITICAL</references>
        <references refid="group__state__engine__api_1ga4d87bda0a72990876364bd8764777cb2" compoundref="uvfr__state__engine_8h" startline="188">UV_TASK_SCD_IGNORE</references>
        <references refid="structuv__task__info_1afcd240d2b6b01b4acea600ef4dfe8fbc" compoundref="uvfr__state__engine_8h" startline="216">uv_task_info::task_function</references>
        <references refid="group__state__engine_1gaff684308203d45e9e16ad3d115c54279" compoundref="uvfr__state__engine_8c" startline="1284" endline="1335">uvSVCTaskManager</references>
        <references refid="structuv__task__info_1a353ec6bf2c42ab0920f3d1e671e568a3" compoundref="uvfr__state__engine_8h" startline="220">uv_task_info::stack_size</references>
        <references refid="structuv__task__info_1ad157811debce6672bb6d00da7e90b6ca" compoundref="uvfr__state__engine_8h" startline="213">uv_task_info::task_period</references>
        <references refid="group__state__engine_1ga3de41676729241e58688c61c450e4a1e" compoundref="uvfr__state__engine_8c" startline="42">task_manager</references>
        <references refid="group__state__engine__backend_1gaf2dbdd0d9d9aa8bcbef120661117fc5e" compoundref="uvfr__state__engine_8c" startline="1065" endline="1132">uvTaskManager</references>
        <references refid="group__state__engine__backend_1ga8c1618caac0d7f29836107f1a44833e8" compoundref="uvfr__state__engine_8c" startline="343" endline="356">uvValidateManagedTasks</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" compoundref="uvfr__utils_8h" startline="167">UV_OK</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea480ef4e56d17703f0629bfe1e06bc4f0" compoundref="uvfr__utils_8h" startline="169">UV_ERROR</references>
        <references refid="structuv__task__info_1a5347f41c4b15b2d6b039c339613fde43" compoundref="uvfr__state__engine_8h" startline="228">uv_task_info::task_handle</references>
        <referencedby refid="uvfr__utils_8c_1a6d40598f9d8daa89ca159a2e87f4fd01" compoundref="uvfr__utils_8c" startline="37" endline="229">uvInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__state__engine__backend_1ga6291142ec714ce1450099943b1b8d00a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref></type>
        <definition>uv_status uvDeleteTask</definition>
        <argsstring>(uint32_t *tracker, struct uv_task_info *t)</argsstring>
        <name>uvDeleteTask</name>
        <param>
          <type>uint32_t *</type>
          <declname>tracker</declname>
        </param>
        <param>
          <type>struct <ref refid="structuv__task__info" kindref="compound">uv_task_info</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>deletes a managed task via the system </para>
        </briefdescription>
        <detaileddescription>
<para>This function is the lowtier god of the program. It pulls up and is like &quot;YOU SHOULD KILL YOURSELF, NOW!!&quot; It sends a message to the task which tells it to kill itself.</para>
<para>The task complies. It does not have a choice. </para>
        </detaileddescription>
        <inbodydescription>
<para>This checks with the RTOS kernel to see that the task as stated by the scheduler matches the state known by uvfr_utils</para>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="314" column="11" bodyfile="Core/Src/uvfr_state_engine.c" bodystart="491" bodyend="544" declfile="Core/Inc/uvfr_state_engine.h" declline="314" declcolumn="11"/>
        <references refid="structuv__task__info_1a43e5b3136b38dde4272aa510c5349ba3" compoundref="uvfr__state__engine_8h" startline="225">uv_task_info::task_state</references>
        <references refid="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88af6465f57e0b6515721c5cbebd769e691" compoundref="uvfr__state__engine_8h" startline="126">UV_TASK_DELETED</references>
        <references refid="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88a529c3f9ad3ef9a8e387d875c7a118c7e" compoundref="uvfr__state__engine_8h" startline="125">UV_TASK_NOT_STARTED</references>
        <references refid="structuv__task__info_1a5347f41c4b15b2d6b039c339613fde43" compoundref="uvfr__state__engine_8h" startline="228">uv_task_info::task_handle</references>
        <references refid="structuv__task__info_1a8ed5c619d9eea62c2beb08fa2db6b092" compoundref="uvfr__state__engine_8h" startline="210">uv_task_info::task_id</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea6aa86f67f1dcd70789b27731c3ac4e7a" compoundref="uvfr__utils_8h" startline="170">UV_ABORTED</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea480ef4e56d17703f0629bfe1e06bc4f0" compoundref="uvfr__utils_8h" startline="169">UV_ERROR</references>
        <references refid="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88a147f6febce613c666fe922907472ca0f" compoundref="uvfr__state__engine_8h" startline="128">UV_TASK_SUSPENDED</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" compoundref="uvfr__utils_8h" startline="167">UV_OK</references>
        <references refid="structuv__task__info_1af532b5031cd6a168a3ec45ab9ead4f23" compoundref="uvfr__state__engine_8h" startline="230">uv_task_info::cmd_data</references>
        <references refid="group__state__engine__api_1ggaf11e8677926913f2dd803fabbed3455ca0e75e398c2bbcb663eaeb98684ca69d6" compoundref="uvfr__state__engine_8h" startline="98">UV_KILL_CMD</references>
        <references refid="group__state__engine__api_1ga0e5d6feafad4764ab2ffd4604ab633b5" compoundref="uvfr__state__engine_8h" startline="267">uvTaskIsDelaying</references>
        <referencedby refid="group__state__engine__backend_1gab8a03e5812e395199b3b0003cd8266cb" compoundref="uvfr__state__engine_8c" startline="446" endline="458">killEmAll</referencedby>
        <referencedby refid="group__state__engine__backend_1ga8519c96858b096f2fccb96d3334df93a" compoundref="uvfr__state__engine_8c" startline="868" endline="1041">_stateChangeDaemon</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__state__engine__backend_1gafd67eecbab2e6e6915bc6bc71806b715" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref></type>
        <definition>uv_status uvSuspendTask</definition>
        <argsstring>(uint32_t *tracker, struct uv_task_info *t)</argsstring>
        <name>uvSuspendTask</name>
        <param>
          <type>uint32_t *</type>
          <declname>tracker</declname>
        </param>
        <param>
          <type>struct <ref refid="structuv__task__info" kindref="compound">uv_task_info</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>function to suspend one of the managed tasks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tracker</parametername>
</parameternamelist>
<parameterdescription>
<para>is a pointer to an int. If the task actually suspends, we update the tracker, since no further action is needed.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>is a pointer to a <ref refid="structuv__task__info" kindref="compound">uv_task_info</ref> struct. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="316" column="11" bodyfile="Core/Src/uvfr_state_engine.c" bodystart="590" bodyend="633" declfile="Core/Inc/uvfr_state_engine.h" declline="316" declcolumn="11"/>
        <references refid="structuv__task__info_1a5347f41c4b15b2d6b039c339613fde43" compoundref="uvfr__state__engine_8h" startline="228">uv_task_info::task_handle</references>
        <references refid="structuv__task__info_1a43e5b3136b38dde4272aa510c5349ba3" compoundref="uvfr__state__engine_8h" startline="225">uv_task_info::task_state</references>
        <references refid="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88af6465f57e0b6515721c5cbebd769e691" compoundref="uvfr__state__engine_8h" startline="126">UV_TASK_DELETED</references>
        <references refid="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88a529c3f9ad3ef9a8e387d875c7a118c7e" compoundref="uvfr__state__engine_8h" startline="125">UV_TASK_NOT_STARTED</references>
        <references refid="structuv__task__info_1a8ed5c619d9eea62c2beb08fa2db6b092" compoundref="uvfr__state__engine_8h" startline="210">uv_task_info::task_id</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" compoundref="uvfr__utils_8h" startline="167">UV_OK</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea480ef4e56d17703f0629bfe1e06bc4f0" compoundref="uvfr__utils_8h" startline="169">UV_ERROR</references>
        <references refid="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88a147f6febce613c666fe922907472ca0f" compoundref="uvfr__state__engine_8h" startline="128">UV_TASK_SUSPENDED</references>
        <references refid="structuv__task__info_1af532b5031cd6a168a3ec45ab9ead4f23" compoundref="uvfr__state__engine_8h" startline="230">uv_task_info::cmd_data</references>
        <references refid="group__state__engine__api_1ggaf11e8677926913f2dd803fabbed3455ca5f389a67f2a45fe1f51492b3b8f04077" compoundref="uvfr__state__engine_8h" startline="99">UV_SUSPEND_CMD</references>
        <references refid="group__state__engine__api_1ga0e5d6feafad4764ab2ffd4604ab633b5" compoundref="uvfr__state__engine_8h" startline="267">uvTaskIsDelaying</references>
        <referencedby refid="group__state__engine__backend_1ga8519c96858b096f2fccb96d3334df93a" compoundref="uvfr__state__engine_8c" startline="868" endline="1041">_stateChangeDaemon</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__state__engine__api_1ga5cb739823b10b90a139315356aa6b22f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref></type>
        <definition>uv_status uvDeInitStateEngine</definition>
        <argsstring>()</argsstring>
        <name>uvDeInitStateEngine</name>
        <briefdescription>
<para>Stops and frees all resources used by uvfr_state_engine. </para>
        </briefdescription>
        <detaileddescription>
<para>If we need to initialize the state engine, gotta de-initialize as well. This is the opposite of <ref refid="group__state__engine__api_1ga5c608f3832c45eac6e2da198d4ef1ba0" kindref="member">uvInitStateEngine</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="318" column="11" bodyfile="Core/Src/uvfr_state_engine.c" bodystart="239" bodyend="241" declfile="Core/Inc/uvfr_state_engine.h" declline="318" declcolumn="11"/>
        <references refid="group__state__engine__backend_1gab8a03e5812e395199b3b0003cd8266cb" compoundref="uvfr__state__engine_8c" startline="446" endline="458">killEmAll</references>
      </memberdef>
      <memberdef kind="function" id="uvfr__state__engine_8h_1a7493b2515639f60db83cd6ed77b50432" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref></type>
        <definition>uv_status updateRunningTasks</definition>
        <argsstring>()</argsstring>
        <name>updateRunningTasks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="320" column="11" declfile="Core/Inc/uvfr_state_engine.h" declline="320" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__state__engine__api_1gaa3ad3e8df75177c00265881c16563212" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref></type>
        <definition>uv_status changeVehicleState</definition>
        <argsstring>(uint16_t state)</argsstring>
        <name>changeVehicleState</name>
        <param>
          <type>uint16_t</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Function for changing the state of the vehicle, as well as the list of active + inactive tasks. </para>
        </briefdescription>
        <detaileddescription>
<para>This function also changes out the tasks that are executing, by invoking the legendary _state_change_daemon</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>is a member of <ref refid="uvfr__utils_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref>, and therefore a power of two </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>returns</parametername>
</parameternamelist>
<parameterdescription>
<para>a memeber of <ref refid="uvfr__utils_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref> depending on whether execution is successful</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Example usage:</para>
<para><programlisting><codeline><highlight class="normal">if((brakepedal_pressed<sp/>==<sp/>true)<sp/>&amp;&amp;<sp/>(start_button_pressed<sp/>==<sp/>true)){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>changeVehicleState(UV_DRIVING);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>As you can see, all you need to do is specify the new state. Naturally, the task should be ready to get deleted by the state_change_daemon, but that is neither here nor there. </para>
        </detaileddescription>
        <inbodydescription>
<para>If the state we wish to change to is the same as the state we&apos;re in, then no need to be executing any of this fancy code</para>
<para>Transition from <computeroutput>UV_INIT</computeroutput> to <computeroutput>UV_READY</computeroutput> states</para>
<para>Transition from <computeroutput>UV_INIT</computeroutput> to <computeroutput>UV_ERROR</computeroutput> states</para>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="322" column="11" bodyfile="Core/Src/uvfr_state_engine.c" bodystart="86" bodyend="143" declfile="Core/Inc/uvfr_state_engine.h" declline="322" declcolumn="11"/>
        <references refid="group__utility__macros_1gade3043fb92536f8e1a616ba8aaef4ab9" compoundref="uvfr__utils_8h" startline="117">isPowerOfTwo</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea480ef4e56d17703f0629bfe1e06bc4f0" compoundref="uvfr__utils_8h" startline="169">UV_ERROR</references>
        <references refid="group__state__engine_1ga2f58cf65b3566bc390600f877f8bed35" compoundref="uvfr__state__engine_8c" startline="39">vehicle_state</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea6aa86f67f1dcd70789b27731c3ac4e7a" compoundref="uvfr__utils_8h" startline="170">UV_ABORTED</references>
        <references refid="group__state__engine_1ga2ce6eef16a78c095592954d2fe68af2e" compoundref="uvfr__state__engine_8c" startline="40">previous_state</references>
        <references refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4a5e3e7ecab0a58b320912cb4129641579" compoundref="uvfr__state__engine_8h" startline="82">UV_INIT</references>
        <references refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4a9ec1eef180c6208b25b08f0526dc5eb8" compoundref="uvfr__state__engine_8h" startline="83">UV_READY</references>
        <references refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4ac1fcacc095b8c0f1c9f452d51815bcb5" compoundref="uvfr__state__engine_8h" startline="88">UV_ERROR_STATE</references>
        <references refid="structstate__change__daemon__args_1aa19a15c725f1fdc8dcc05227584153bc" compoundref="uvfr__state__engine_8c" startline="59">state_change_daemon_args::meta_task_handle</references>
        <references refid="group__state__engine__backend_1ga8519c96858b096f2fccb96d3334df93a" compoundref="uvfr__state__engine_8c" startline="868" endline="1041">_stateChangeDaemon</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" compoundref="uvfr__utils_8h" startline="167">UV_OK</references>
        <referencedby refid="daq_8c_1a433bb586ceab47aed8d633fa2ff8ce56" compoundref="daq_8c" startline="62" endline="101">daqMasterTask</referencedby>
        <referencedby refid="uvfr__utils_8c_1a6d40598f9d8daa89ca159a2e87f4fd01" compoundref="uvfr__utils_8c" startline="37" endline="229">uvInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__state__engine__backend_1gab2449f66698295ebfaff451c2f63607f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __uvPanic</definition>
        <argsstring>(char *msg, uint8_t msg_len, const char *file, const int line, const char *func)</argsstring>
        <name>__uvPanic</name>
        <param>
          <type>char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>msg_len</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
<para>Something bad has occurred here now we in trouble. </para>
        </briefdescription>
        <detaileddescription>
<para>General idea here: Something bad has happened that is severe enough that it requires the shutdown of the vehicle. This can mean several things, such as being on fire, etc... that need to be appropriately handled</para>
<para>This should also log whatever the fuck happened.</para>
<para>The following should happen, in order:<itemizedlist>
<listitem><para>Forcibly put vehicle into a safe state</para>
</listitem><listitem><para>Change vehicle state to error, and invoke the SCD</para>
</listitem><listitem><para>Log the error in our lil running journal</para>
</listitem></itemizedlist>
</para>
<para>Should change vehicle state itself be the source of the error, we just need the software to completely fucking hang itself. If things are so fucked that we genuinely cannot even transition to the error state, then get that shit the fuck outta here, we shuttin down fr fr. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="325" column="6" bodyfile="Core/Src/uvfr_state_engine.c" bodystart="697" bodyend="708" declfile="Core/Inc/uvfr_state_engine.h" declline="325" declcolumn="6"/>
        <references refid="group__state__engine__backend_1ga8073be27b31b156bee66e3b3038144c9" compoundref="uvfr__state__engine_8c" startline="669" endline="677">uvSecureVehicle</references>
      </memberdef>
      <memberdef kind="function" id="group__state__engine__backend_1ga5f35b34432afed7f18f91fb8607f096f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void killSelf</definition>
        <argsstring>(struct uv_task_info *t)</argsstring>
        <name>killSelf</name>
        <param>
          <type>struct <ref refid="structuv__task__info" kindref="compound">uv_task_info</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>This function is called by a task to nuke itself. Is a wrapper function that is used to do all the different things. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>First lets load up the queue and the values in it. These come from the task we are doing.</para>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="338" column="6" bodyfile="Core/Src/uvfr_state_engine.c" bodystart="715" bodyend="748" declfile="Core/Inc/uvfr_state_engine.h" declline="338" declcolumn="6"/>
        <references refid="structuv__task__info_1a43e5b3136b38dde4272aa510c5349ba3" compoundref="uvfr__state__engine_8h" startline="225">uv_task_info::task_state</references>
        <references refid="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88af6465f57e0b6515721c5cbebd769e691" compoundref="uvfr__state__engine_8h" startline="126">UV_TASK_DELETED</references>
        <references refid="structuv__scd__response_1a0812669214881a452cc54e8783a74c4f" compoundref="uvfr__state__engine_8h" startline="116">uv_scd_response::meta_id</references>
        <references refid="structuv__task__info_1a8ed5c619d9eea62c2beb08fa2db6b092" compoundref="uvfr__state__engine_8h" startline="210">uv_task_info::task_id</references>
        <references refid="structuv__scd__response_1a92a8d03f9ffbbd860cb0bbe48f90bd7e" compoundref="uvfr__state__engine_8h" startline="115">uv_scd_response::response_val</references>
        <references refid="group__state__engine__api_1ggadfdfabf66fb37e4e702a1019bf1a9a76a886d929188a37a7fdae4b18b65a261ca" compoundref="uvfr__state__engine_8h" startline="107">UV_SUCCESSFUL_DELETION</references>
        <references refid="group__state__engine_1ga6837d935e61f84062544da8971a18560" compoundref="uvfr__state__engine_8c" startline="35">state_change_queue</references>
        <references refid="structuv__task__info_1af532b5031cd6a168a3ec45ab9ead4f23" compoundref="uvfr__state__engine_8h" startline="230">uv_task_info::cmd_data</references>
        <references refid="group__state__engine__api_1ggaf11e8677926913f2dd803fabbed3455ca3641b5b35403903b66faf4d615c3199d" compoundref="uvfr__state__engine_8h" startline="97">UV_NO_CMD</references>
        <references refid="structuv__task__info_1a5347f41c4b15b2d6b039c339613fde43" compoundref="uvfr__state__engine_8h" startline="228">uv_task_info::task_handle</references>
        <referencedby refid="daq_8c_1a433bb586ceab47aed8d633fa2ff8ce56" compoundref="daq_8c" startline="62" endline="101">daqMasterTask</referencedby>
        <referencedby refid="driving__loop_8c_1a80cc48f06202edc29bcad26a956bcc98" compoundref="driving__loop_8c" startline="68" endline="207">StartDrivingLoop</referencedby>
        <referencedby refid="odometer_8c_1a56d2ca9f89394f6519acb2ba11320d55" compoundref="odometer_8c" startline="46" endline="71">odometerTask</referencedby>
        <referencedby refid="temp__monitoring_8c_1a2a1d7fee4cea6ce07e4d4acc1b2ca752" compoundref="temp__monitoring_8c" startline="48" endline="122">tempMonitorTask</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__state__engine__backend_1gad6117850b55ad52be51d93915bcc313c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void suspendSelf</definition>
        <argsstring>(struct uv_task_info *t)</argsstring>
        <name>suspendSelf</name>
        <param>
          <type>struct <ref refid="structuv__task__info" kindref="compound">uv_task_info</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Called by a task that needs to suspend itself, once the task has determined it is safe to do so. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="340" column="6" bodyfile="Core/Src/uvfr_state_engine.c" bodystart="756" bodyend="787" declfile="Core/Inc/uvfr_state_engine.h" declline="340" declcolumn="6"/>
        <references refid="structuv__task__info_1a43e5b3136b38dde4272aa510c5349ba3" compoundref="uvfr__state__engine_8h" startline="225">uv_task_info::task_state</references>
        <references refid="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88a147f6febce613c666fe922907472ca0f" compoundref="uvfr__state__engine_8h" startline="128">UV_TASK_SUSPENDED</references>
        <references refid="structuv__scd__response_1a0812669214881a452cc54e8783a74c4f" compoundref="uvfr__state__engine_8h" startline="116">uv_scd_response::meta_id</references>
        <references refid="structuv__task__info_1a8ed5c619d9eea62c2beb08fa2db6b092" compoundref="uvfr__state__engine_8h" startline="210">uv_task_info::task_id</references>
        <references refid="structuv__scd__response_1a92a8d03f9ffbbd860cb0bbe48f90bd7e" compoundref="uvfr__state__engine_8h" startline="115">uv_scd_response::response_val</references>
        <references refid="group__state__engine__api_1ggadfdfabf66fb37e4e702a1019bf1a9a76a75d7f4415a6450a9c3d35aaf7b9577cd" compoundref="uvfr__state__engine_8h" startline="108">UV_SUCCESSFUL_SUSPENSION</references>
        <references refid="group__state__engine_1ga6837d935e61f84062544da8971a18560" compoundref="uvfr__state__engine_8c" startline="35">state_change_queue</references>
        <references refid="structuv__task__info_1af532b5031cd6a168a3ec45ab9ead4f23" compoundref="uvfr__state__engine_8h" startline="230">uv_task_info::cmd_data</references>
        <references refid="group__state__engine__api_1ggaf11e8677926913f2dd803fabbed3455ca3641b5b35403903b66faf4d615c3199d" compoundref="uvfr__state__engine_8h" startline="97">UV_NO_CMD</references>
        <references refid="structuv__task__info_1a5347f41c4b15b2d6b039c339613fde43" compoundref="uvfr__state__engine_8h" startline="228">uv_task_info::task_handle</references>
        <referencedby refid="daq_8c_1a433bb586ceab47aed8d633fa2ff8ce56" compoundref="daq_8c" startline="62" endline="101">daqMasterTask</referencedby>
        <referencedby refid="driving__loop_8c_1a80cc48f06202edc29bcad26a956bcc98" compoundref="driving__loop_8c" startline="68" endline="207">StartDrivingLoop</referencedby>
        <referencedby refid="odometer_8c_1a56d2ca9f89394f6519acb2ba11320d55" compoundref="odometer_8c" startline="46" endline="71">odometerTask</referencedby>
        <referencedby refid="temp__monitoring_8c_1a2a1d7fee4cea6ce07e4d4acc1b2ca752" compoundref="temp__monitoring_8c" startline="48" endline="122">tempMonitorTask</referencedby>
      </memberdef>
      <memberdef kind="function" id="uvfr__state__engine_8h_1a502ae7695a8539242b8b18c2eb61c1c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="uvfr__state__engine_8h_1aa6ffd72eb4909ddb38c37a1369e13f09" kindref="member">uv_task_id</ref></type>
        <definition>uv_task_id getSVCTaskID</definition>
        <argsstring>(char *tsk_name)</argsstring>
        <name>getSVCTaskID</name>
        <param>
          <type>char *</type>
          <declname>tsk_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/uvfr_state_engine.h" line="357" column="12" declfile="Core/Inc/uvfr_state_engine.h" declline="357" declcolumn="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>uvfr_state_engine.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Oct<sp/>15,<sp/>2024</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>byo10</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor">#ifndef<sp/>INC_UVFR_STATE_ENGINE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INC_UVFR_STATE_ENGINE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="uvfr__utils_8h" kindref="compound">uvfr_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;uvfr_utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="uvfr__state__engine_8h_1aef3770e45bbacbf527fd93dd80eea9b9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9e" kindref="member">uv_status_t</ref><sp/><ref refid="uvfr__state__engine_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref>;</highlight></codeline>
<codeline lineno="52" refid="uvfr__state__engine_8h_1aa6ffd72eb4909ddb38c37a1369e13f09" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="uvfr__state__engine_8h_1aa6ffd72eb4909ddb38c37a1369e13f09" kindref="member">uv_task_id</ref>;<sp/></highlight><highlight class="comment">//WHY<sp/>DO<sp/>I<sp/>NEED<sp/>TO<sp/>DO<sp/>THIS<sp/>STUPID<sp/>REDEFINITION<sp/>HERE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="uvfr__state__engine_8h_1a20115c3c236542d702abb10565f381f2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_UV_DEFAULT_TASK_INSTANCES<sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//STACK<sp/>size<sp/>0,<sp/>means<sp/>that<sp/>it<sp/>uses<sp/>operating<sp/>system<sp/>defaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="uvfr__state__engine_8h_1a32571accb85a2d8f479c6066d7a46238" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_UV_DEFAULT_TASK_STACK_SIZE<sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//period<sp/>of<sp/>100ms,<sp/>aka<sp/>10Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="uvfr__state__engine_8h_1a3ecc1e9c72ff5ba01649bf037186b015" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_UV_DEFAULT_TASK_PERIOD<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="uvfr__state__engine_8h_1a7aab8d4b97eeacffeb153a91f70b5e6b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_UV_MIN_TASK_PERIOD<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="uvfr__state__engine_8h_1a2b86418bd482f9d4a2a36f35e786798e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_LONGEST_SC_TIME<sp/>300</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="uvfr__state__engine_8h_1a092c530d4a0cd880a59598dc0fca95d4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SC_DAEMON_PERIOD<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="uvfr__state__engine_8h_1afa84e50f417bfe6026bd922b546e4daa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVC_TASK_MAX_CHECKIN_PERIOD<sp/>500</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//typedef<sp/>uint8_t<sp/>uv_task_cmd;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="uvfr__state__engine_8h_1af1ca0b89ee88cdf48a7640d6ec793350" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="uvfr__state__engine_8h_1af1ca0b89ee88cdf48a7640d6ec793350" kindref="member">uv_timespan_ms</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="group__state__engine__api_1ga259abff5a03eaf908dc8f03d99f478e4" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__state__engine__api_1ga259abff5a03eaf908dc8f03d99f478e4" kindref="member">uv_vehicle_state_t</ref>{</highlight></codeline>
<codeline lineno="82" refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4a5e3e7ecab0a58b320912cb4129641579" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4a5e3e7ecab0a58b320912cb4129641579" kindref="member">UV_INIT</ref><sp/>=<sp/>0x0001,<sp/></highlight></codeline>
<codeline lineno="83" refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4a9ec1eef180c6208b25b08f0526dc5eb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4a9ec1eef180c6208b25b08f0526dc5eb8" kindref="member">UV_READY</ref><sp/>=<sp/>0x0002,<sp/></highlight></codeline>
<codeline lineno="84" refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4abed5371c079ef927fb67d8bb8e8aa286" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4abed5371c079ef927fb67d8bb8e8aa286" kindref="member">PROGRAMMING</ref><sp/>=<sp/>0x0004,<sp/></highlight></codeline>
<codeline lineno="85" refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4aa4f9f0d81d66079ab97ea3abc3808969" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4aa4f9f0d81d66079ab97ea3abc3808969" kindref="member">UV_DRIVING</ref><sp/>=<sp/>0x0008,<sp/></highlight></codeline>
<codeline lineno="86" refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4abfddf18c580c465bb3c27b522aa4e4a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4abfddf18c580c465bb3c27b522aa4e4a9" kindref="member">UV_SUSPENDED</ref><sp/>=<sp/>0x0010,<sp/></highlight></codeline>
<codeline lineno="87" refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4a7ff39f8abdc9adbfd693e412e4aaeb6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4a7ff39f8abdc9adbfd693e412e4aaeb6e" kindref="member">UV_LAUNCH_CONTROL</ref><sp/>=<sp/>0x0020,<sp/></highlight></codeline>
<codeline lineno="88" refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4ac1fcacc095b8c0f1c9f452d51815bcb5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4ac1fcacc095b8c0f1c9f452d51815bcb5" kindref="member">UV_ERROR_STATE</ref><sp/>=<sp/>0x0040,<sp/></highlight></codeline>
<codeline lineno="89" refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4afdfc4cdb8c5210e05bdfdc3df51f80ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4afdfc4cdb8c5210e05bdfdc3df51f80ff" kindref="member">UV_BOOT</ref><sp/>=<sp/>0x0080,<sp/></highlight></codeline>
<codeline lineno="90" refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4a2d3dc239e61931f9f779b71e84005b1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4a2d3dc239e61931f9f779b71e84005b1b" kindref="member">UV_HALT</ref><sp/>=<sp/>0x0100<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal">}<ref refid="group__state__engine__api_1ga140983d0a0ccbfd2d5f2c93183cbe797" kindref="member">uv_vehicle_state</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="group__state__engine__api_1gaf11e8677926913f2dd803fabbed3455c" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__state__engine__api_1gaf11e8677926913f2dd803fabbed3455c" kindref="member">uv_task_cmd_e</ref>{</highlight></codeline>
<codeline lineno="97" refid="group__state__engine__api_1ggaf11e8677926913f2dd803fabbed3455ca3641b5b35403903b66faf4d615c3199d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1ggaf11e8677926913f2dd803fabbed3455ca3641b5b35403903b66faf4d615c3199d" kindref="member">UV_NO_CMD</ref>,</highlight></codeline>
<codeline lineno="98" refid="group__state__engine__api_1ggaf11e8677926913f2dd803fabbed3455ca0e75e398c2bbcb663eaeb98684ca69d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1ggaf11e8677926913f2dd803fabbed3455ca0e75e398c2bbcb663eaeb98684ca69d6" kindref="member">UV_KILL_CMD</ref>,<sp/></highlight></codeline>
<codeline lineno="99" refid="group__state__engine__api_1ggaf11e8677926913f2dd803fabbed3455ca5f389a67f2a45fe1f51492b3b8f04077" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1ggaf11e8677926913f2dd803fabbed3455ca5f389a67f2a45fe1f51492b3b8f04077" kindref="member">UV_SUSPEND_CMD</ref>,<sp/></highlight></codeline>
<codeline lineno="100" refid="group__state__engine__api_1ggaf11e8677926913f2dd803fabbed3455cabac2ecce11df7b3e4b872ba4d22f7564" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1ggaf11e8677926913f2dd803fabbed3455cabac2ecce11df7b3e4b872ba4d22f7564" kindref="member">UV_TASK_START_CMD</ref><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal">}<ref refid="group__state__engine__api_1gae1b70a2c1baa7da5592e7324008636e4" kindref="member">uv_task_cmd</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="group__state__engine__api_1gadfdfabf66fb37e4e702a1019bf1a9a76" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__state__engine__api_1gadfdfabf66fb37e4e702a1019bf1a9a76" kindref="member">uv_scd_response_e</ref>{</highlight></codeline>
<codeline lineno="107" refid="group__state__engine__api_1ggadfdfabf66fb37e4e702a1019bf1a9a76a886d929188a37a7fdae4b18b65a261ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1ggadfdfabf66fb37e4e702a1019bf1a9a76a886d929188a37a7fdae4b18b65a261ca" kindref="member">UV_SUCCESSFUL_DELETION</ref>,<sp/></highlight></codeline>
<codeline lineno="108" refid="group__state__engine__api_1ggadfdfabf66fb37e4e702a1019bf1a9a76a75d7f4415a6450a9c3d35aaf7b9577cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1ggadfdfabf66fb37e4e702a1019bf1a9a76a75d7f4415a6450a9c3d35aaf7b9577cd" kindref="member">UV_SUCCESSFUL_SUSPENSION</ref>,</highlight></codeline>
<codeline lineno="109" refid="group__state__engine__api_1ggadfdfabf66fb37e4e702a1019bf1a9a76aa66da42f9355512e286812074433015b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1ggadfdfabf66fb37e4e702a1019bf1a9a76aa66da42f9355512e286812074433015b" kindref="member">UV_COULDNT_DELETE</ref>,<sp/></highlight></codeline>
<codeline lineno="110" refid="group__state__engine__api_1ggadfdfabf66fb37e4e702a1019bf1a9a76a3c33585e5ac7f76a9bc4dc1fccb764ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1ggadfdfabf66fb37e4e702a1019bf1a9a76a3c33585e5ac7f76a9bc4dc1fccb764ec" kindref="member">UV_COULDNT_SUSPEND</ref>,<sp/></highlight></codeline>
<codeline lineno="111" refid="group__state__engine__api_1ggadfdfabf66fb37e4e702a1019bf1a9a76a0dd4e6d2bbbde83536ed21ac4ce2bd00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1ggadfdfabf66fb37e4e702a1019bf1a9a76a0dd4e6d2bbbde83536ed21ac4ce2bd00" kindref="member">UV_UNSAFE_STATE</ref><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal">};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="structuv__scd__response" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuv__scd__response" kindref="compound">uv_scd_response</ref>{</highlight></codeline>
<codeline lineno="115" refid="structuv__scd__response_1a92a8d03f9ffbbd860cb0bbe48f90bd7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__state__engine__api_1gadfdfabf66fb37e4e702a1019bf1a9a76" kindref="member">uv_scd_response_e</ref><sp/><ref refid="structuv__scd__response_1a92a8d03f9ffbbd860cb0bbe48f90bd7e" kindref="member">response_val</ref>;<sp/></highlight></codeline>
<codeline lineno="116" refid="structuv__scd__response_1a0812669214881a452cc54e8783a74c4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="uvfr__state__engine_8h_1aa6ffd72eb4909ddb38c37a1369e13f09" kindref="member">uv_task_id</ref><sp/><ref refid="structuv__scd__response_1a0812669214881a452cc54e8783a74c4f" kindref="member">meta_id</ref>;<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal">}<ref refid="group__state__engine__api_1ga856f7f6f3b6b92f655aafc552606ffea" kindref="member">uv_scd_response</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="group__state__engine__api_1gac94b6bd11853173599ccff034055cc88" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__state__engine__api_1gac94b6bd11853173599ccff034055cc88" kindref="member">uv_task_state_t</ref>{</highlight></codeline>
<codeline lineno="125" refid="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88a529c3f9ad3ef9a8e387d875c7a118c7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88a529c3f9ad3ef9a8e387d875c7a118c7e" kindref="member">UV_TASK_NOT_STARTED</ref>,</highlight></codeline>
<codeline lineno="126" refid="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88af6465f57e0b6515721c5cbebd769e691" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88af6465f57e0b6515721c5cbebd769e691" kindref="member">UV_TASK_DELETED</ref>,</highlight></codeline>
<codeline lineno="127" refid="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88ad4da927019afea812b31d46d28b7354c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88ad4da927019afea812b31d46d28b7354c" kindref="member">UV_TASK_RUNNING</ref>,</highlight></codeline>
<codeline lineno="128" refid="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88a147f6febce613c666fe922907472ca0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1ggac94b6bd11853173599ccff034055cc88a147f6febce613c666fe922907472ca0f" kindref="member">UV_TASK_SUSPENDED</ref></highlight></codeline>
<codeline lineno="129"><highlight class="normal">}<sp/><ref refid="group__state__engine__api_1ga82006c09ffd194e360785bb51a39ec3f" kindref="member">uv_task_status</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="group__state__engine__api_1ga6166ed80f8e3bd62f1e7e6122c8817f6" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__state__engine__api_1ga6166ed80f8e3bd62f1e7e6122c8817f6" kindref="member">task_priority</ref>{</highlight></codeline>
<codeline lineno="136" refid="group__state__engine__api_1gga6166ed80f8e3bd62f1e7e6122c8817f6ae1e0864e3b20ced26bebc93aa0766aec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1gga6166ed80f8e3bd62f1e7e6122c8817f6ae1e0864e3b20ced26bebc93aa0766aec" kindref="member">IDLE_TASK_PRIORITY</ref>,</highlight></codeline>
<codeline lineno="137" refid="group__state__engine__api_1gga6166ed80f8e3bd62f1e7e6122c8817f6adb8ee22a232a2787f32ba28da55c43c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1gga6166ed80f8e3bd62f1e7e6122c8817f6adb8ee22a232a2787f32ba28da55c43c1" kindref="member">LOW_PRIORITY</ref>,</highlight></codeline>
<codeline lineno="138" refid="group__state__engine__api_1gga6166ed80f8e3bd62f1e7e6122c8817f6afe8b192d5f5af86fd93c4f84f7ef3383" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1gga6166ed80f8e3bd62f1e7e6122c8817f6afe8b192d5f5af86fd93c4f84f7ef3383" kindref="member">BELOW_NORMAL</ref>,</highlight></codeline>
<codeline lineno="139" refid="group__state__engine__api_1gga6166ed80f8e3bd62f1e7e6122c8817f6a06b314d863076d54942e065d90c179c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1gga6166ed80f8e3bd62f1e7e6122c8817f6a06b314d863076d54942e065d90c179c4" kindref="member">MEDIUM_PRIORITY</ref>,</highlight></codeline>
<codeline lineno="140" refid="group__state__engine__api_1gga6166ed80f8e3bd62f1e7e6122c8817f6a052e6887345173e8b7556738c28fa920" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1gga6166ed80f8e3bd62f1e7e6122c8817f6a052e6887345173e8b7556738c28fa920" kindref="member">ABOVE_NORMAL</ref>,</highlight></codeline>
<codeline lineno="141" refid="group__state__engine__api_1gga6166ed80f8e3bd62f1e7e6122c8817f6acb1785f11dd02aa7f5d164fb314c594e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1gga6166ed80f8e3bd62f1e7e6122c8817f6acb1785f11dd02aa7f5d164fb314c594e" kindref="member">HIGH_PRIORITY</ref>,</highlight></codeline>
<codeline lineno="142" refid="group__state__engine__api_1gga6166ed80f8e3bd62f1e7e6122c8817f6aa20ceda9447596a05151a4a66db46a92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1gga6166ed80f8e3bd62f1e7e6122c8817f6aa20ceda9447596a05151a4a66db46a92" kindref="member">REALTIME_PRIORITY</ref></highlight></codeline>
<codeline lineno="143"><highlight class="normal">}<ref refid="group__state__engine__api_1ga6166ed80f8e3bd62f1e7e6122c8817f6" kindref="member">task_priority</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="structtask__management__info" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtask__management__info" kindref="compound">task_management_info</ref>{</highlight></codeline>
<codeline lineno="155" refid="structtask__management__info_1a29b374b2d26cc5a52c75160816da83aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>TaskHandle_t<sp/><ref refid="structtask__management__info_1a29b374b2d26cc5a52c75160816da83aa" kindref="member">task_handle</ref>;<sp/></highlight></codeline>
<codeline lineno="156" refid="structtask__management__info_1a82d650741c82974c81a22c6bdd8c556d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QueueHandle_t<sp/><ref refid="structtask__management__info_1a82d650741c82974c81a22c6bdd8c556d" kindref="member">parent_msg_queue</ref>;<sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal">}<ref refid="group__state__engine__api_1gae41267a13309a303a826aa55c4873a31" kindref="member">task_management_info</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="structtask__status__block" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtask__status__block" kindref="compound">task_status_block</ref>{</highlight></codeline>
<codeline lineno="163" refid="structtask__status__block_1abfd714aae92a1132cb79b3c675099b0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structtask__status__block_1abfd714aae92a1132cb79b3c675099b0f" kindref="member">task_high_water_mark</ref>;<sp/></highlight></codeline>
<codeline lineno="164" refid="structtask__status__block_1a254979f63f50b48d35a3127e5e6b55eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>TickType_t<sp/><ref refid="structtask__status__block_1a254979f63f50b48d35a3127e5e6b55eb" kindref="member">task_report_time</ref>;<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal">}<ref refid="group__state__engine__api_1ga0d368f40115996d74f2e3833ff1a5396" kindref="member">task_status_block</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="structuv__os__settings" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuv__os__settings" kindref="compound">uv_os_settings</ref>{</highlight></codeline>
<codeline lineno="172" refid="structuv__os__settings_1a82068c14ee06131f3184d99fd2c1fae0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>TickType_t<sp/><ref refid="structuv__os__settings_1a82068c14ee06131f3184d99fd2c1fae0" kindref="member">svc_task_manager_period</ref>;</highlight></codeline>
<codeline lineno="173" refid="structuv__os__settings_1aa5163b7118ccafabb452052d2b8e7c5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>TickType_t<sp/><ref refid="structuv__os__settings_1aa5163b7118ccafabb452052d2b8e7c5a" kindref="member">task_manager_period</ref>;</highlight></codeline>
<codeline lineno="174" refid="structuv__os__settings_1aa3243a98dc9bbf056730f2d11d400b33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>TickType_t<sp/><ref refid="structuv__os__settings_1aa3243a98dc9bbf056730f2d11d400b33" kindref="member">max_svc_task_period</ref>;</highlight></codeline>
<codeline lineno="175" refid="structuv__os__settings_1a5e08f89b0999d4dedf5807a883ba4967" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>TickType_t<sp/><ref refid="structuv__os__settings_1a5e08f89b0999d4dedf5807a883ba4967" kindref="member">max_task_period</ref>;</highlight><highlight class="comment">//fuckin<sp/>lethal<sp/>man</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="structuv__os__settings_1a8b497ca2b38e124db326cf634a87c4b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>TickType_t<sp/><ref refid="structuv__os__settings_1a8b497ca2b38e124db326cf634a87c4b1" kindref="member">min_task_period</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">}<ref refid="group__state__engine__api_1ga4622e8f893111a8641c8e5a44df3d3dd" kindref="member">uv_os_settings</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="group__state__engine__api_1ga253c75b331d0976b9a414657cef780cd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_TASK_VEHICLE_APPLICATION<sp/><sp/><sp/><sp/>0x0001U&lt;&lt;(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="group__state__engine__api_1ga3142d67aec5c34719e90cf122948f1db" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_TASK_PERIODIC_SVC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0001U&lt;&lt;(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="group__state__engine__api_1gaae81d88a64e53c686e8e0fd01bfe723d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_TASK_DORMANT_SVC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0b0000000000000011</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="group__state__engine__api_1ga056a2272c9356c78597c5c82bc58db2f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_TASK_GENERIC_SVC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0001U&lt;&lt;(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="group__state__engine__api_1ga96c7c915194ecba48edd70def54a700b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_TASK_MANAGER_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0b0000000000000011</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="group__state__engine__api_1gafc49f7a5303ebabaa3fc0886d67f3e9a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_TASK_LOG_START_STOP_TIME<sp/><sp/><sp/><sp/>0x0001U&lt;&lt;(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="group__state__engine__api_1ga0c0d91f0feee4f7b0816b3c06b61b459" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_TASK_LOG_MEM_USAGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0001U&lt;&lt;(3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="group__state__engine__api_1ga4d87bda0a72990876364bd8764777cb2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_TASK_SCD_IGNORE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0001U&lt;&lt;(4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="group__state__engine__api_1ga732a956baeb0b603c6c935f1bea13fab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_TASK_IS_PARENT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0001U&lt;&lt;(5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="group__state__engine__api_1ga5030c3ffc04fb93607cf1d4880a66731" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_TASK_IS_CHILD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0001U&lt;&lt;(6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="group__state__engine__api_1gab3967da84c26663341e0cb2ed5177c70" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_TASK_IS_ORPHAN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0001U&lt;&lt;(7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="group__state__engine__api_1ga52394ced81b82c523082ed2c4bb9e2d7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_TASK_ERR_IN_CHILD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0001U&lt;&lt;(8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="group__state__engine__api_1ga0ce66ea8b0c49749cc05a3ba06b2df75" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_TASK_AWAITING_DELETION<sp/><sp/><sp/><sp/><sp/><sp/>0x0001U&lt;&lt;(9)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="group__state__engine__api_1gaf1374f633bd37be99d7d58e33270ce8c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_TASK_DEFER_DELETION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0001U&lt;&lt;(10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="group__state__engine__api_1ga4d88012d785bba8a4aa943c23c4450a2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_TASK_DEADLINE_NOT_ENFORCED<sp/><sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="group__state__engine__api_1ga337aaae50133aedb5d733b6ede6fb10d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_TASK_PRIO_INCREMENTATION<sp/><sp/><sp/><sp/>0x0001U&lt;&lt;(11)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="group__state__engine__api_1gaa3b4befdf874ecfeac5face2cf1ae1a5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_TASK_DEADLINE_FIRM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0001U&lt;&lt;(12)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="group__state__engine__api_1ga50fac7a227841deccc8b30cef230ba08" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_TASK_DEADLINE_HARD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x0001U&lt;&lt;(11)|0x0001U&lt;&lt;(12))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="group__state__engine__api_1ga04e93f880387fe61195800f0dfaac0bd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_TASK_DEADLINE_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x0001U&lt;&lt;(11)|0x0001U&lt;&lt;(12))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="group__state__engine__api_1gab37af27fe89f1987ee38bdb0bc945c43" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_TASK_MISSION_CRITICAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0001U&lt;&lt;(13)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="group__state__engine__api_1ga70b5081fb012f121afe19c5ad2da9622" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_TASK_DELAYING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0001U&lt;&lt;(14)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="structuv__task__info" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuv__task__info" kindref="compound">uv_task_info</ref>{</highlight></codeline>
<codeline lineno="210" refid="structuv__task__info_1a8ed5c619d9eea62c2beb08fa2db6b092" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="uvfr__state__engine_8h_1aa6ffd72eb4909ddb38c37a1369e13f09" kindref="member">uv_task_id</ref><sp/><ref refid="structuv__task__info_1a8ed5c619d9eea62c2beb08fa2db6b092" kindref="member">task_id</ref>;<sp/></highlight></codeline>
<codeline lineno="211" refid="structuv__task__info_1ad24b438130bb3098ee5e855222dff21d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structuv__task__info_1ad24b438130bb3098ee5e855222dff21d" kindref="member">task_name</ref>;<sp/></highlight></codeline>
<codeline lineno="213" refid="structuv__task__info_1ad157811debce6672bb6d00da7e90b6ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="uvfr__state__engine_8h_1af1ca0b89ee88cdf48a7640d6ec793350" kindref="member">uv_timespan_ms</ref><sp/><ref refid="structuv__task__info_1ad157811debce6672bb6d00da7e90b6ca" kindref="member">task_period</ref>;<sp/></highlight></codeline>
<codeline lineno="214" refid="structuv__task__info_1afcb925c40c57baa41710b162982263a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="uvfr__state__engine_8h_1af1ca0b89ee88cdf48a7640d6ec793350" kindref="member">uv_timespan_ms</ref><sp/><ref refid="structuv__task__info_1afcb925c40c57baa41710b162982263a7" kindref="member">deletion_delay</ref>;<sp/></highlight></codeline>
<codeline lineno="216" refid="structuv__task__info_1afcd240d2b6b01b4acea600ef4dfe8fbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>TaskFunction_t<sp/><ref refid="structuv__task__info_1afcd240d2b6b01b4acea600ef4dfe8fbc" kindref="member">task_function</ref>;<sp/></highlight></codeline>
<codeline lineno="217" refid="structuv__task__info_1aff45751f7189980589d55379d1d5a355" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>osPriority<sp/><ref refid="structuv__task__info_1aff45751f7189980589d55379d1d5a355" kindref="member">task_priority</ref>;<sp/></highlight></codeline>
<codeline lineno="220" refid="structuv__task__info_1a353ec6bf2c42ab0920f3d1e671e568a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structuv__task__info_1a353ec6bf2c42ab0920f3d1e671e568a3" kindref="member">stack_size</ref>;<sp/></highlight></codeline>
<codeline lineno="225" refid="structuv__task__info_1a43e5b3136b38dde4272aa510c5349ba3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1ga82006c09ffd194e360785bb51a39ec3f" kindref="member">uv_task_status</ref><sp/><ref refid="structuv__task__info_1a43e5b3136b38dde4272aa510c5349ba3" kindref="member">task_state</ref>;<sp/></highlight><highlight class="comment">//tracks<sp/>the<sp/>internal<sp/>state<sp/>of<sp/>the<sp/>task</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="structuv__task__info_1a5347f41c4b15b2d6b039c339613fde43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>TaskHandle_t<sp/><ref refid="structuv__task__info_1a5347f41c4b15b2d6b039c339613fde43" kindref="member">task_handle</ref>;<sp/></highlight></codeline>
<codeline lineno="230" refid="structuv__task__info_1af532b5031cd6a168a3ec45ab9ead4f23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__state__engine__api_1gae1b70a2c1baa7da5592e7324008636e4" kindref="member">uv_task_cmd</ref><sp/><ref refid="structuv__task__info_1af532b5031cd6a168a3ec45ab9ead4f23" kindref="member">cmd_data</ref>;<sp/></highlight></codeline>
<codeline lineno="232" refid="structuv__task__info_1ae255dff9b38fc8c0754085060e8ae699" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structuv__task__info_1ae255dff9b38fc8c0754085060e8ae699" kindref="member">task_args</ref>;<sp/></highlight></codeline>
<codeline lineno="234" refid="structuv__task__info_1a5d32fc8f47b905499257336c561d189b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">uv_task_info_t*<sp/><ref refid="structuv__task__info_1a5d32fc8f47b905499257336c561d189b" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="236" refid="structuv__task__info_1ab0a6666d8589de0cbc508cc8b12c0945" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtask__management__info" kindref="compound">task_management_info</ref>*<sp/><ref refid="structuv__task__info_1ab0a6666d8589de0cbc508cc8b12c0945" kindref="member">tmi</ref>;<sp/></highlight></codeline>
<codeline lineno="237" refid="structuv__task__info_1a659db1ee8d4c40a902a6f159725a3211" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>MessageBufferHandle_t<sp/><ref refid="structuv__task__info_1a659db1ee8d4c40a902a6f159725a3211" kindref="member">task_rx_mailbox</ref>;<sp/></highlight></codeline>
<codeline lineno="239" refid="structuv__task__info_1ab24dea3bde4de2d839bf15e65c2df0d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structuv__task__info_1ab24dea3bde4de2d839bf15e65c2df0d6" kindref="member">active_states</ref>;<sp/></highlight><highlight class="comment">//corresponds<sp/>to<sp/>the<sp/>vehicle<sp/>states<sp/>where<sp/>the<sp/>task<sp/>should<sp/>be<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="structuv__task__info_1a6986d7216c7f889164931b37ab752c29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structuv__task__info_1a6986d7216c7f889164931b37ab752c29" kindref="member">deletion_states</ref>;<sp/></highlight><highlight class="comment">//corresponds<sp/>to<sp/>the<sp/>vehicle<sp/>states<sp/>where<sp/>the<sp/>task<sp/>should<sp/>be<sp/>suspended</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="structuv__task__info_1aafd4e2d916f50b54b99fd02d63831e43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structuv__task__info_1aafd4e2d916f50b54b99fd02d63831e43" kindref="member">suspension_states</ref>;<sp/></highlight><highlight class="comment">//when<sp/>should<sp/>the<sp/>task<sp/>be<sp/>suspended?<sp/>When<sp/>it<sp/>should<sp/>exist,<sp/>but<sp/>shouldnt<sp/>be<sp/>active.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="structuv__task__info_1a6567a294eec7b11ac0d4bc3b927ef9e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structuv__task__info_1a6567a294eec7b11ac0d4bc3b927ef9e9" kindref="member">task_flags</ref>;<sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal">}<ref refid="group__state__engine__api_1gaebe69bead1b7c3a1371ffe610708e0ef" kindref="member">uv_task_info</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="group__state__engine__api_1ga07dcd5b5c28f257e50e0d04f519b5e7a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>uvTaskSetDeletionBit(t)<sp/>(t-&gt;task_flags|=UV_TASK_AWAITING_DELETION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="group__state__engine__api_1gabe734bf4eb30c1a532e083dc9bdf938c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>uvTaskResetDeletionBit(t)<sp/>(t-&gt;task_flags<sp/>&amp;=(~UV_TASK_AWAITING_DELETION))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="group__state__engine__api_1ga3cab3b3fd6589348dceaf91b14e2a6ef" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>uvTaskSetDelayBit(t)<sp/>(t-&gt;task_flags|=UV_TASK_DELAYING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="group__state__engine__api_1ga2d3d223399d12a0af224266487f35483" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>uvTaskResetDelayBit(t)<sp/>(t-&gt;task_flags&amp;=(~UV_TASK_DELAYING))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="group__state__engine__api_1ga0e5d6feafad4764ab2ffd4604ab633b5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>uvTaskIsDelaying(t)<sp/>((t-&gt;task_flags&amp;UV_TASK_DELAYING)==UV_TASK_DELAYING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="group__state__engine__api_1ga5073c1aa60fa9292bc88054a2184daee" refkind="member"><highlight class="preprocessor">#define<sp/>uvTaskDelay(x,t)<sp/>uvTaskSetDelayBit(x);\</highlight></codeline>
<codeline lineno="275"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>vTaskDelay(t);\</highlight></codeline>
<codeline lineno="276"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>uvTaskResetDelayBit(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="group__state__engine__api_1ga1fc770ae6f3a6643548e0fb00a732ae5" refkind="member"><highlight class="preprocessor">#define<sp/>uvTaskDelayUntil(x,lasttim,per)<sp/>uvTaskSetDelayBit(x);\</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>vTaskDelayUntil(&amp;lasttim,per);\</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>uvTaskResetDelayBit(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuv__task__info" kindref="compound">uv_task_info</ref>*<sp/><ref refid="group__state__engine__api_1ga99bfc92472cdc99e9005e9d3c792909a" kindref="member">uvCreateTask</ref>();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuv__task__info" kindref="compound">uv_task_info</ref>*<sp/><ref refid="group__state__engine__backend_1ga20334b4aff0cfdab7be1d2864089c5ce" kindref="member">uvCreateServiceTask</ref>();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuv__task__info" kindref="compound">uv_task_info</ref>*<sp/><ref refid="uvfr__state__engine_8h_1ac77de2c18076b8e04742d2ca927dbd55" kindref="member">uvGetTaskById</ref>(uint8_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref><sp/><ref refid="group__state__engine__backend_1gaf342326f88e8accc1efa35e02cdd6c37" kindref="member">_uvValidateSpecificTask</ref>(uint8_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref><sp/><ref refid="group__state__engine__backend_1ga8c1618caac0d7f29836107f1a44833e8" kindref="member">uvValidateManagedTasks</ref>();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref><sp/><ref refid="group__state__engine__backend_1ga15cdf09b5625c2ba29a6c6d5c96214dc" kindref="member">uvStartTask</ref>(uint32_t*<sp/>tracker,</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structuv__task__info" kindref="compound">uv_task_info</ref><sp/>*<sp/>t);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref><sp/><ref refid="uvfr__state__engine_8h_1a0547a08e521248754efe91c5de5ec182" kindref="member">uvRegisterTask</ref>();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref><sp/><ref refid="group__state__engine__api_1ga5c608f3832c45eac6e2da198d4ef1ba0" kindref="member">uvInitStateEngine</ref>();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref><sp/><ref refid="group__state__engine__api_1ga2ad1d74b5783a51355c047be6642fab8" kindref="member">uvStartStateMachine</ref>();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">//static<sp/>enum<sp/>uv_status_t<sp/>killEmAll();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref><sp/><ref refid="group__state__engine__backend_1ga6291142ec714ce1450099943b1b8d00a" kindref="member">uvDeleteTask</ref>(uint32_t*<sp/>tracker,</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structuv__task__info" kindref="compound">uv_task_info</ref><sp/>*<sp/>t);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref><sp/><ref refid="group__state__engine__backend_1gafd67eecbab2e6e6915bc6bc71806b715" kindref="member">uvSuspendTask</ref>(uint32_t*<sp/>tracker,</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structuv__task__info" kindref="compound">uv_task_info</ref><sp/>*<sp/>t);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref><sp/><ref refid="group__state__engine__api_1ga5cb739823b10b90a139315356aa6b22f" kindref="member">uvDeInitStateEngine</ref>();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref><sp/><ref refid="uvfr__state__engine_8h_1a7493b2515639f60db83cd6ed77b50432" kindref="member">updateRunningTasks</ref>();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref><sp/><ref refid="group__state__engine__api_1gaa3ad3e8df75177c00265881c16563212" kindref="member">changeVehicleState</ref>(uint16_t<sp/>state);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>uvPanic(char*<sp/>msg,<sp/>uint8_t<sp/>msg_len);<sp/>//ruh<sp/>roh<sp/>scoobs,<sp/>something<sp/>has<sp/>gone<sp/>a<sp/>little<sp/>bit<sp/>fucky<sp/>wucky</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__state__engine__backend_1gab2449f66698295ebfaff451c2f63607f" kindref="member">__uvPanic</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,<sp/>uint8_t<sp/>msg_len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>func);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>uvPanic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="preprocessor">#define<sp/>uvPanic(msg,<sp/>errnum)<sp/>__uvPanic(msg,<sp/>errnum,<sp/>__FILE__,__LINE__,__FUNCTION__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__state__engine__backend_1ga5f35b34432afed7f18f91fb8607f096f" kindref="member">killSelf</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structuv__task__info" kindref="compound">uv_task_info</ref><sp/>*<sp/>t);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__state__engine__backend_1gad6117850b55ad52be51d93915bcc313c" kindref="member">suspendSelf</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structuv__task__info" kindref="compound">uv_task_info</ref><sp/>*<sp/>t);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UVFR_STATE_MACHINE_IMPLIMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">//EXTERNAL<sp/>VARIABLES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__state__engine__api_1ga259abff5a03eaf908dc8f03d99f478e4" kindref="member">uv_vehicle_state_t</ref><sp/><ref refid="group__state__engine_1ga2f58cf65b3566bc390600f877f8bed35" kindref="member">vehicle_state</ref>;<sp/></highlight><highlight class="comment">//This<sp/>is<sp/>the<sp/>one<sp/>that<sp/>ya&apos;ll<sp/>are<sp/>permitted<sp/>to<sp/>know</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">//These<sp/>shuold<sp/>only<sp/>be<sp/>visible<sp/>in<sp/>the<sp/>implimentation<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__state__engine__backend_1ga8519c96858b096f2fccb96d3334df93a" kindref="member">_stateChangeDaemon</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>args);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__state__engine_1gaff684308203d45e9e16ad3d115c54279" kindref="member">uvSVCTaskManager</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>args);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><ref refid="uvfr__state__engine_8h_1aa6ffd72eb4909ddb38c37a1369e13f09" kindref="member">uv_task_id</ref><sp/><ref refid="uvfr__state__engine_8h_1a502ae7695a8539242b8b18c2eb61c1c7" kindref="member">getSVCTaskID</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tsk_name);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INC_UVFR_STATE_ENGINE_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Core/Inc/uvfr_state_engine.h"/>
  </compounddef>
</doxygen>
