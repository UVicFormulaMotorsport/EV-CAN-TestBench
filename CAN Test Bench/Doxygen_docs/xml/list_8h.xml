<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="list_8h" kind="file" language="C++">
    <compoundname>list.h</compoundname>
    <includedby refid="croutine_8h" local="yes">Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h</includedby>
    <includedby refid="task_8h" local="yes">Middlewares/Third_Party/FreeRTOS/Source/include/task.h</includedby>
    <invincdepgraph>
      <node id="2">
        <label>Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h</label>
        <link refid="croutine_8h"/>
      </node>
      <node id="48">
        <label>Middlewares/Third_Party/FreeRTOS/Source/include/timers.h</label>
        <link refid="timers_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>Core/Inc/tim.h</label>
        <link refid="tim_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>Middlewares/Third_Party/FreeRTOS/Source/include/queue.h</label>
        <link refid="queue_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>Core/Inc/imd.h</label>
        <link refid="imd_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>Core/Src/daq.c</label>
        <link refid="daq_8c"/>
      </node>
      <node id="30">
        <label>Core/Inc/dash.h</label>
        <link refid="dash_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>Core/Inc/driving_loop.h</label>
        <link refid="driving__loop_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>Core/Inc/temp_monitoring.h</label>
        <link refid="temp__monitoring_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Core/Src/pdu.c</label>
        <link refid="pdu_8c"/>
      </node>
      <node id="12">
        <label>Core/Src/dash.c</label>
        <link refid="dash_8c"/>
      </node>
      <node id="20">
        <label>Core/Src/tim.c</label>
        <link refid="tim_8c"/>
      </node>
      <node id="46">
        <label>Core/Src/uvfr_state_engine.c</label>
        <link refid="uvfr__state__engine_8c"/>
      </node>
      <node id="42">
        <label>Core/Inc/oled.h</label>
        <link refid="oled_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Core/Inc/adc.h</label>
        <link refid="adc_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>Core/Src/stm32f4xx_hal_msp.c</label>
        <link refid="stm32f4xx__hal__msp_8c"/>
      </node>
      <node id="3">
        <label>Middlewares/Third_Party/FreeRTOS/Source/include/task.h</label>
        <link refid="task_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Core/Inc/uvfr_utils.h</label>
        <link refid="uvfr__utils_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>Core/Src/odometer.c</label>
        <link refid="odometer_8c"/>
      </node>
      <node id="34">
        <label>Core/Src/freertos.c</label>
        <link refid="freertos_8c"/>
      </node>
      <node id="10">
        <label>Core/Src/bms.c</label>
        <link refid="bms_8c"/>
      </node>
      <node id="29">
        <label>Core/Inc/bms.h</label>
        <link refid="bms_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Core/Src/motor_controller.c</label>
        <link refid="motor__controller_8c"/>
      </node>
      <node id="38">
        <label>Core/Src/uvfr_settings.c</label>
        <link refid="uvfr__settings_8c"/>
      </node>
      <node id="13">
        <label>Core/Src/driving_loop.c</label>
        <link refid="driving__loop_8c"/>
      </node>
      <node id="24">
        <label>Core/Inc/spi.h</label>
        <link refid="spi_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>Core/Inc/pdu.h</label>
        <link refid="pdu_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>Core/Src/gpio.c</label>
        <link refid="gpio_8c"/>
      </node>
      <node id="26">
        <label>Core/Inc/motor_controller.h</label>
        <link refid="motor__controller_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h</label>
        <link refid="semphr_8h"/>
      </node>
      <node id="27">
        <label>Core/Inc/uvfr_settings.h</label>
        <link refid="uvfr__settings_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Core/Src/dma.c</label>
        <link refid="dma_8c"/>
      </node>
      <node id="23">
        <label>Core/Src/temp_monitoring.c</label>
        <link refid="temp__monitoring_8c"/>
      </node>
      <node id="39">
        <label>Core/Inc/daq.h</label>
        <link refid="daq_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Core/Inc/gpio.h</label>
        <link refid="gpio_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>Core/Src/uvfr_utils.c</label>
        <link refid="uvfr__utils_8c"/>
      </node>
      <node id="25">
        <label>Core/Src/spi.c</label>
        <link refid="spi_8c"/>
      </node>
      <node id="33">
        <label>Core/Src/constants.c</label>
        <link refid="constants_8c"/>
      </node>
      <node id="14">
        <label>Core/Src/imd.c</label>
        <link refid="imd_8c"/>
      </node>
      <node id="9">
        <label>Core/Inc/can.h</label>
        <link refid="can_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>Middlewares/Third_Party/FreeRTOS/Source/include/event_groups.h</label>
        <link refid="event__groups_8h"/>
      </node>
      <node id="37">
        <label>Core/Src/stm32f4xx_it.c</label>
        <link refid="stm32f4xx__it_8c"/>
      </node>
      <node id="1">
        <label>Middlewares/Third_Party/FreeRTOS/Source/include/list.h</label>
        <link refid="list_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>Core/Inc/uvfr_state_engine.h</label>
        <link refid="uvfr__state__engine_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Core/Src/can.c</label>
        <link refid="can_8c"/>
      </node>
      <node id="44">
        <label>Core/Inc/uvfr_vehicle_commands.h</label>
        <link refid="uvfr__vehicle__commands_8h"/>
      </node>
      <node id="35">
        <label>Core/Src/oled.c</label>
        <link refid="oled_8c"/>
      </node>
      <node id="7">
        <label>Core/Src/adc.c</label>
        <link refid="adc_8c"/>
      </node>
      <node id="8">
        <label>Core/Src/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="17">
        <label>Core/Inc/dma.h</label>
        <link refid="dma_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Core/Inc/main.h</label>
        <link refid="main_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structx_l_i_s_t___i_t_e_m" prot="public">xLIST_ITEM</innerclass>
    <innerclass refid="structx_m_i_n_i___l_i_s_t___i_t_e_m" prot="public">xMINI_LIST_ITEM</innerclass>
    <innerclass refid="structx_l_i_s_t" prot="public">xLIST</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="list_8h_1a2d5de557c5561c8980d1bf51d87d8cba" prot="public" static="no">
        <name>configLIST_VOLATILE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="92" column="10" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1a3611bd5d5d87cb26ac1dc7a4852b94a0" prot="public" static="no">
        <name>listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="106" column="10" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1abf45f853974db484cd7df434bd006e98" prot="public" static="no">
        <name>listSECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="107" column="10" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1a3a52b5a4f70d3a07e37a5814a23ba880" prot="public" static="no">
        <name>listFIRST_LIST_INTEGRITY_CHECK_VALUE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="108" column="10" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1a87dc70c22e3ff0eba560d6f357472634" prot="public" static="no">
        <name>listSECOND_LIST_INTEGRITY_CHECK_VALUE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="109" column="10" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1a0e65118e1baa7ab805cdfb37e580501d" prot="public" static="no">
        <name>listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE</name>
        <param><defname>pxItem</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="110" column="10" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1ac8b9d912bdcfdb5544f373d2a94268b2" prot="public" static="no">
        <name>listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE</name>
        <param><defname>pxItem</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="111" column="10" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1a5d68b1187d09c64d6ee329786cb0289b" prot="public" static="no">
        <name>listSET_LIST_INTEGRITY_CHECK_1_VALUE</name>
        <param><defname>pxList</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="112" column="10" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1a83b40c6e61534ef41229bd912dacab48" prot="public" static="no">
        <name>listSET_LIST_INTEGRITY_CHECK_2_VALUE</name>
        <param><defname>pxList</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="113" column="10" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1a95b994725c299cdc81c74efc16210cc6" prot="public" static="no">
        <name>listTEST_LIST_ITEM_INTEGRITY</name>
        <param><defname>pxItem</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="114" column="10" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1a337d6137e0a4d37321efc5c2f31dba22" prot="public" static="no">
        <name>listTEST_LIST_INTEGRITY</name>
        <param><defname>pxList</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="115" column="10" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1acc01a08e534b54fe438847ef02e5060a" prot="public" static="no">
        <name>listSET_LIST_ITEM_OWNER</name>
        <param><defname>pxListItem</defname></param>
        <param><defname>pxOwner</defname></param>
        <initializer>( ( pxListItem )-&gt;pvOwner = ( void * ) ( pxOwner ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="180" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1aa9469bd061a44b4f75d30c6175f66d5c" prot="public" static="no">
        <name>listGET_LIST_ITEM_OWNER</name>
        <param><defname>pxListItem</defname></param>
        <initializer>( ( pxListItem )-&gt;pvOwner )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="189" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1a83e95e61652f032fdc26aa622f5e2610" prot="public" static="no">
        <name>listSET_LIST_ITEM_VALUE</name>
        <param><defname>pxListItem</defname></param>
        <param><defname>xValue</defname></param>
        <initializer>( ( pxListItem )-&gt;xItemValue = ( xValue ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="198" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1aa50d09950abc602741d7ebe8387f4e1a" prot="public" static="no">
        <name>listGET_LIST_ITEM_VALUE</name>
        <param><defname>pxListItem</defname></param>
        <initializer>( ( pxListItem )-&gt;xItemValue )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="208" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1a63742b27958b959ac9ab69d8e9aed241" prot="public" static="no">
        <name>listGET_ITEM_VALUE_OF_HEAD_ENTRY</name>
        <param><defname>pxList</defname></param>
        <initializer>( ( ( pxList )-&gt;xListEnd ).pxNext-&gt;xItemValue )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="217" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1a987cb2766e509022c23b654907cea199" prot="public" static="no">
        <name>listGET_HEAD_ENTRY</name>
        <param><defname>pxList</defname></param>
        <initializer>( ( ( pxList )-&gt;xListEnd ).pxNext )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="225" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1aabf78d3f24ba56ac1d0bf0179438b960" prot="public" static="no">
        <name>listGET_NEXT</name>
        <param><defname>pxListItem</defname></param>
        <initializer>( ( pxListItem )-&gt;pxNext )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="233" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1a96cb0919f02e5c0d8e41ded0e65197a3" prot="public" static="no">
        <name>listGET_END_MARKER</name>
        <param><defname>pxList</defname></param>
        <initializer>( ( <ref refid="list_8h_1a1a62d469392f9bfe2443e7efab9c8398" kindref="member">ListItem_t</ref> const * ) ( &amp;( ( pxList )-&gt;xListEnd ) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="241" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1aaba6eb05d67ebc8026bea29193eca28f" prot="public" static="no">
        <name>listLIST_IS_EMPTY</name>
        <param><defname>pxList</defname></param>
        <initializer>( ( ( pxList )-&gt;uxNumberOfItems == ( UBaseType_t ) 0 ) ? <ref refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" kindref="member">pdTRUE</ref> : <ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref> )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="250" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1a18b4aded515bdc512017ea6e677a13bb" prot="public" static="no">
        <name>listCURRENT_LIST_LENGTH</name>
        <param><defname>pxList</defname></param>
        <initializer>( ( pxList )-&gt;uxNumberOfItems )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="255" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1a275d9855e9b71652e2b8f6e2ed62aadd" prot="public" static="no">
        <name>listGET_OWNER_OF_NEXT_ENTRY</name>
        <param><defname>pxTCB</defname></param>
        <param><defname>pxList</defname></param>
        <initializer>{																							\
<ref refid="list_8h_1afd590ef6400071b4d63d65ef90bea7f4" kindref="member">List_t</ref> * const pxConstList = ( pxList );													\
	/* Increment the index to the next item and return the item, ensuring */				\
	/* we don&apos;t return the marker used at the end of the list.  */							\
	( pxConstList )-&gt;pxIndex = ( pxConstList )-&gt;pxIndex-&gt;pxNext;							\
	if( ( void * ) ( pxConstList )-&gt;pxIndex == ( void * ) &amp;( ( pxConstList )-&gt;xListEnd ) )	\
	{																						\
		( pxConstList )-&gt;pxIndex = ( pxConstList )-&gt;pxIndex-&gt;pxNext;						\
	}																						\
	( pxTCB ) = ( pxConstList )-&gt;pxIndex-&gt;pvOwner;											\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="277" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1a715561302af8cb5b74416b23ce4e999d" prot="public" static="no">
        <name>listGET_OWNER_OF_HEAD_ENTRY</name>
        <param><defname>pxList</defname></param>
        <initializer>( (&amp;( ( pxList )-&gt;xListEnd ))-&gt;pxNext-&gt;pvOwner )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="307" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1a60302b468d21f8c53d13987372acb8fa" prot="public" static="no">
        <name>listIS_CONTAINED_WITHIN</name>
        <param><defname>pxList</defname></param>
        <param><defname>pxListItem</defname></param>
        <initializer>( ( ( pxListItem )-&gt;<ref refid="_free_r_t_o_s_8h_1a63197564332f3bb0acc1c937b7e2ad05" kindref="member">pxContainer</ref> == ( pxList ) ) ? ( <ref refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" kindref="member">pdTRUE</ref> ) : ( <ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref> ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="318" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1a7c4dff11380cd843ed0b6a8dc065916b" prot="public" static="no">
        <name>listLIST_ITEM_CONTAINER</name>
        <param><defname>pxListItem</defname></param>
        <initializer>( ( pxListItem )-&gt;<ref refid="_free_r_t_o_s_8h_1a63197564332f3bb0acc1c937b7e2ad05" kindref="member">pxContainer</ref> )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="326" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="list_8h_1a7e17f81438dd0bd705714267a611ff28" prot="public" static="no">
        <name>listLIST_IS_INITIALISED</name>
        <param><defname>pxList</defname></param>
        <initializer>( ( pxList )-&gt;xListEnd.xItemValue == portMAX_DELAY )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="333" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="list_8h_1a1a62d469392f9bfe2443e7efab9c8398" prot="public" static="no">
        <type>struct <ref refid="structx_l_i_s_t___i_t_e_m" kindref="compound">xLIST_ITEM</ref></type>
        <definition>typedef struct xLIST_ITEM ListItem_t</definition>
        <argsstring></argsstring>
        <name>ListItem_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="1281" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="list_8h_1a542a8d55e98bc407593979e61f83cd02" prot="public" static="no">
        <type>struct <ref refid="structx_m_i_n_i___l_i_s_t___i_t_e_m" kindref="compound">xMINI_LIST_ITEM</ref></type>
        <definition>typedef struct xMINI_LIST_ITEM MiniListItem_t</definition>
        <argsstring></argsstring>
        <name>MiniListItem_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="1281" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="list_8h_1afd590ef6400071b4d63d65ef90bea7f4" prot="public" static="no">
        <type>struct <ref refid="structx_l_i_s_t" kindref="compound">xLIST</ref></type>
        <definition>typedef struct xLIST  List_t</definition>
        <argsstring></argsstring>
        <name>List_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="171" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="list_8h_1adeef7734d7d6d9a3eea642a70c106919" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vListInitialise</definition>
        <argsstring>(List_t *const pxList) PRIVILEGED_FUNCTION</argsstring>
        <name>vListInitialise</name>
        <param>
          <type><ref refid="list_8h_1afd590ef6400071b4d63d65ef90bea7f4" kindref="member">List_t</ref> *const</type>
          <declname>pxList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="345" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" declline="345" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="list_8h_1ab91611baae53be209a05d211f55f5395" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vListInitialiseItem</definition>
        <argsstring>(ListItem_t *const pxItem) PRIVILEGED_FUNCTION</argsstring>
        <name>vListInitialiseItem</name>
        <param>
          <type><ref refid="list_8h_1a1a62d469392f9bfe2443e7efab9c8398" kindref="member">ListItem_t</ref> *const</type>
          <declname>pxItem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="356" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" declline="356" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="list_8h_1aa129290da5cbda47dffb7bf877b2f02a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vListInsert</definition>
        <argsstring>(List_t *const pxList, ListItem_t *const pxNewListItem) PRIVILEGED_FUNCTION</argsstring>
        <name>vListInsert</name>
        <param>
          <type><ref refid="list_8h_1afd590ef6400071b4d63d65ef90bea7f4" kindref="member">List_t</ref> *const</type>
          <declname>pxList</declname>
        </param>
        <param>
          <type><ref refid="list_8h_1a1a62d469392f9bfe2443e7efab9c8398" kindref="member">ListItem_t</ref> *const</type>
          <declname>pxNewListItem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="369" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" declline="369" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="list_8h_1a71a6a6099b3cbd8f90539aabe5c9e572" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vListInsertEnd</definition>
        <argsstring>(List_t *const pxList, ListItem_t *const pxNewListItem) PRIVILEGED_FUNCTION</argsstring>
        <name>vListInsertEnd</name>
        <param>
          <type><ref refid="list_8h_1afd590ef6400071b4d63d65ef90bea7f4" kindref="member">List_t</ref> *const</type>
          <declname>pxList</declname>
        </param>
        <param>
          <type><ref refid="list_8h_1a1a62d469392f9bfe2443e7efab9c8398" kindref="member">ListItem_t</ref> *const</type>
          <declname>pxNewListItem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="390" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" declline="390" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="list_8h_1a2eb1558482076fff8cafc63419c2d34a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UBaseType_t</type>
        <definition>UBaseType_t uxListRemove</definition>
        <argsstring>(ListItem_t *const pxItemToRemove) PRIVILEGED_FUNCTION</argsstring>
        <name>uxListRemove</name>
        <param>
          <type><ref refid="list_8h_1a1a62d469392f9bfe2443e7efab9c8398" kindref="member">ListItem_t</ref> *const</type>
          <declname>pxItemToRemove</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" line="405" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/list.h" declline="405" declcolumn="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>FreeRTOS<sp/>Kernel<sp/>V10.3.1</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2020<sp/>Amazon.com,<sp/>Inc.<sp/>or<sp/>its<sp/>affiliates.<sp/><sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>http://www.FreeRTOS.org</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>http://aws.amazon.com/freertos</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>1<sp/>tab<sp/>==<sp/>4<sp/>spaces!</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>the<sp/>list<sp/>implementation<sp/>used<sp/>by<sp/>the<sp/>scheduler.<sp/><sp/>While<sp/>it<sp/>is<sp/>tailored</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>heavily<sp/>for<sp/>the<sp/>schedulers<sp/>needs,<sp/>it<sp/>is<sp/>also<sp/>available<sp/>for<sp/>use<sp/>by</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>application<sp/>code.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>list_ts<sp/>can<sp/>only<sp/>store<sp/>pointers<sp/>to<sp/>list_item_ts.<sp/><sp/>Each<sp/>ListItem_t<sp/>contains<sp/>a</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>numeric<sp/>value<sp/>(xItemValue).<sp/><sp/>Most<sp/>of<sp/>the<sp/>time<sp/>the<sp/>lists<sp/>are<sp/>sorted<sp/>in</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>descending<sp/>item<sp/>value<sp/>order.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>Lists<sp/>are<sp/>created<sp/>already<sp/>containing<sp/>one<sp/>list<sp/>item.<sp/><sp/>The<sp/>value<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>item<sp/>is<sp/>the<sp/>maximum<sp/>possible<sp/>that<sp/>can<sp/>be<sp/>stored,<sp/>it<sp/>is<sp/>therefore<sp/>always<sp/>at</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>the<sp/>end<sp/>of<sp/>the<sp/>list<sp/>and<sp/>acts<sp/>as<sp/>a<sp/>marker.<sp/><sp/>The<sp/>list<sp/>member<sp/>pxHead<sp/>always</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>points<sp/>to<sp/>this<sp/>marker<sp/>-<sp/>even<sp/>though<sp/>it<sp/>is<sp/>at<sp/>the<sp/>tail<sp/>of<sp/>the<sp/>list.<sp/><sp/>This</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>is<sp/>because<sp/>the<sp/>tail<sp/>contains<sp/>a<sp/>wrap<sp/>back<sp/>pointer<sp/>to<sp/>the<sp/>true<sp/>head<sp/>of</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>In<sp/>addition<sp/>to<sp/>it&apos;s<sp/>value,<sp/>each<sp/>list<sp/>item<sp/>contains<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>next</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>item<sp/>in<sp/>the<sp/>list<sp/>(pxNext),<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>list<sp/>it<sp/>is<sp/>in<sp/>(pxContainer)</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>and<sp/>a<sp/>pointer<sp/>to<sp/>back<sp/>to<sp/>the<sp/>object<sp/>that<sp/>contains<sp/>it.<sp/><sp/>These<sp/>later<sp/>two</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>pointers<sp/>are<sp/>included<sp/>for<sp/>efficiency<sp/>of<sp/>list<sp/>manipulation.<sp/><sp/>There<sp/>is</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>effectively<sp/>a<sp/>two<sp/>way<sp/>link<sp/>between<sp/>the<sp/>object<sp/>containing<sp/>the<sp/>list<sp/>item<sp/>and</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>the<sp/>list<sp/>item<sp/>itself.</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>\page<sp/>ListIntroduction<sp/>List<sp/>Implementation</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>\ingroup<sp/>FreeRTOSIntro</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INC_FREERTOS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>FreeRTOS.h<sp/>must<sp/>be<sp/>included<sp/>before<sp/>list.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LIST_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIST_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>The<sp/>list<sp/>structure<sp/>members<sp/>are<sp/>modified<sp/>from<sp/>within<sp/>interrupts,<sp/>and<sp/>therefore</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>by<sp/>rights<sp/>should<sp/>be<sp/>declared<sp/>volatile.<sp/><sp/>However,<sp/>they<sp/>are<sp/>only<sp/>modified<sp/>in<sp/>a</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>functionally<sp/>atomic<sp/>way<sp/>(within<sp/>critical<sp/>sections<sp/>of<sp/>with<sp/>the<sp/>scheduler</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>suspended)<sp/>and<sp/>are<sp/>either<sp/>passed<sp/>by<sp/>reference<sp/>into<sp/>a<sp/>function<sp/>or<sp/>indexed<sp/>via</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>a<sp/>volatile<sp/>variable.<sp/><sp/>Therefore,<sp/>in<sp/>all<sp/>use<sp/>cases<sp/>tested<sp/>so<sp/>far,<sp/>the<sp/>volatile</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>qualifier<sp/>can<sp/>be<sp/>omitted<sp/>in<sp/>order<sp/>to<sp/>provide<sp/>a<sp/>moderate<sp/>performance</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>improvement<sp/>without<sp/>adversely<sp/>affecting<sp/>functional<sp/>behaviour.<sp/><sp/>The<sp/>assembly</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>instructions<sp/>generated<sp/>by<sp/>the<sp/>IAR,<sp/>ARM<sp/>and<sp/>GCC<sp/>compilers<sp/>when<sp/>the<sp/>respective</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>compiler&apos;s<sp/>options<sp/>were<sp/>set<sp/>for<sp/>maximum<sp/>optimisation<sp/>has<sp/>been<sp/>inspected<sp/>and</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>deemed<sp/>to<sp/>be<sp/>as<sp/>intended.<sp/><sp/>That<sp/>said,<sp/>as<sp/>compiler<sp/>technology<sp/>advances,<sp/>and</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>especially<sp/>if<sp/>aggressive<sp/>cross<sp/>module<sp/>optimisation<sp/>is<sp/>used<sp/>(a<sp/>use<sp/>case<sp/>that</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>has<sp/>not<sp/>been<sp/>exercised<sp/>to<sp/>any<sp/>great<sp/>extend)<sp/>then<sp/>it<sp/>is<sp/>feasible<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>volatile<sp/>qualifier<sp/>will<sp/>be<sp/>needed<sp/>for<sp/>correct<sp/>optimisation.<sp/><sp/>It<sp/>is<sp/>expected</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>that<sp/>a<sp/>compiler<sp/>removing<sp/>essential<sp/>code<sp/>because,<sp/>without<sp/>the<sp/>volatile</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>qualifier<sp/>on<sp/>the<sp/>list<sp/>structure<sp/>members<sp/>and<sp/>with<sp/>aggressive<sp/>cross<sp/>module</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>optimisation,<sp/>the<sp/>compiler<sp/>deemed<sp/>the<sp/>code<sp/>unnecessary<sp/>will<sp/>result<sp/>in</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>complete<sp/>and<sp/>obvious<sp/>failure<sp/>of<sp/>the<sp/>scheduler.<sp/><sp/>If<sp/>this<sp/>is<sp/>ever<sp/>experienced</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>then<sp/>the<sp/>volatile<sp/>qualifier<sp/>can<sp/>be<sp/>inserted<sp/>in<sp/>the<sp/>relevant<sp/>places<sp/>within<sp/>the</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>list<sp/>structures<sp/>by<sp/>simply<sp/>defining<sp/>configLIST_VOLATILE<sp/>to<sp/>volatile<sp/>in</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>FreeRTOSConfig.h<sp/>(as<sp/>per<sp/>the<sp/>example<sp/>at<sp/>the<sp/>bottom<sp/>of<sp/>this<sp/>comment<sp/>block).</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>If<sp/>configLIST_VOLATILE<sp/>is<sp/>not<sp/>defined<sp/>then<sp/>the<sp/>preprocessor<sp/>directives<sp/>below</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>will<sp/>simply<sp/>#define<sp/>configLIST_VOLATILE<sp/>away<sp/>completely.</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/>To<sp/>use<sp/>volatile<sp/>list<sp/>structure<sp/>members<sp/>then<sp/>add<sp/>the<sp/>following<sp/>line<sp/>to</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>FreeRTOSConfig.h<sp/>(without<sp/>the<sp/>quotes):</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>&quot;#define<sp/>configLIST_VOLATILE<sp/>volatile&quot;</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>configLIST_VOLATILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="list_8h_1a2d5de557c5561c8980d1bf51d87d8cba" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>configLIST_VOLATILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>configSUPPORT_CROSS_MODULE_OPTIMISATION<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macros<sp/>that<sp/>can<sp/>be<sp/>used<sp/>to<sp/>place<sp/>known<sp/>values<sp/>within<sp/>the<sp/>list<sp/>structures,</highlight></codeline>
<codeline lineno="100"><highlight class="comment">then<sp/>check<sp/>that<sp/>the<sp/>known<sp/>values<sp/>do<sp/>not<sp/>get<sp/>corrupted<sp/>during<sp/>the<sp/>execution<sp/>of</highlight></codeline>
<codeline lineno="101"><highlight class="comment">the<sp/>application.<sp/><sp/><sp/>These<sp/>may<sp/>catch<sp/>the<sp/>list<sp/>data<sp/>structures<sp/>being<sp/>overwritten<sp/>in</highlight></codeline>
<codeline lineno="102"><highlight class="comment">memory.<sp/><sp/>They<sp/>will<sp/>not<sp/>catch<sp/>data<sp/>errors<sp/>caused<sp/>by<sp/>incorrect<sp/>configuration<sp/>or</highlight></codeline>
<codeline lineno="103"><highlight class="comment">use<sp/>of<sp/>FreeRTOS.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#if(<sp/>configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES<sp/>==<sp/>0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Define<sp/>the<sp/>macros<sp/>to<sp/>do<sp/>nothing.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="list_8h_1a3611bd5d5d87cb26ac1dc7a4852b94a0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="list_8h_1abf45f853974db484cd7df434bd006e98" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>listSECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="list_8h_1a3a52b5a4f70d3a07e37a5814a23ba880" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>listFIRST_LIST_INTEGRITY_CHECK_VALUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="list_8h_1a87dc70c22e3ff0eba560d6f357472634" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>listSECOND_LIST_INTEGRITY_CHECK_VALUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="list_8h_1a0e65118e1baa7ab805cdfb37e580501d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE(<sp/>pxItem<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="list_8h_1ac8b9d912bdcfdb5544f373d2a94268b2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE(<sp/>pxItem<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="list_8h_1a5d68b1187d09c64d6ee329786cb0289b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>listSET_LIST_INTEGRITY_CHECK_1_VALUE(<sp/>pxList<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="list_8h_1a83b40c6e61534ef41229bd912dacab48" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>listSET_LIST_INTEGRITY_CHECK_2_VALUE(<sp/>pxList<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="list_8h_1a95b994725c299cdc81c74efc16210cc6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>listTEST_LIST_ITEM_INTEGRITY(<sp/>pxItem<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="list_8h_1a337d6137e0a4d37321efc5c2f31dba22" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>listTEST_LIST_INTEGRITY(<sp/>pxList<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Define<sp/>macros<sp/>that<sp/>add<sp/>new<sp/>members<sp/>into<sp/>the<sp/>list<sp/>structures.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TickType_t<sp/>xListItemIntegrityValue1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>listSECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TickType_t<sp/>xListItemIntegrityValue2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>listFIRST_LIST_INTEGRITY_CHECK_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TickType_t<sp/>xListIntegrityValue1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>listSECOND_LIST_INTEGRITY_CHECK_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TickType_t<sp/>xListIntegrityValue2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Define<sp/>macros<sp/>that<sp/>set<sp/>the<sp/>new<sp/>structure<sp/>members<sp/>to<sp/>known<sp/>values.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE(<sp/>pxItem<sp/>)<sp/><sp/><sp/><sp/><sp/>(<sp/>pxItem<sp/>)-&gt;xListItemIntegrityValue1<sp/>=<sp/>pdINTEGRITY_CHECK_VALUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE(<sp/>pxItem<sp/>)<sp/><sp/><sp/><sp/>(<sp/>pxItem<sp/>)-&gt;xListItemIntegrityValue2<sp/>=<sp/>pdINTEGRITY_CHECK_VALUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>listSET_LIST_INTEGRITY_CHECK_1_VALUE(<sp/>pxList<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>pxList<sp/>)-&gt;xListIntegrityValue1<sp/>=<sp/>pdINTEGRITY_CHECK_VALUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>listSET_LIST_INTEGRITY_CHECK_2_VALUE(<sp/>pxList<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>pxList<sp/>)-&gt;xListIntegrityValue2<sp/>=<sp/>pdINTEGRITY_CHECK_VALUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Define<sp/>macros<sp/>that<sp/>will<sp/>assert<sp/>if<sp/>one<sp/>of<sp/>the<sp/>structure<sp/>members<sp/>does<sp/>not</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/>contain<sp/>its<sp/>expected<sp/>value.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>listTEST_LIST_ITEM_INTEGRITY(<sp/>pxItem<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/>configASSERT(<sp/>(<sp/>(<sp/>pxItem<sp/>)-&gt;xListItemIntegrityValue1<sp/>==<sp/>pdINTEGRITY_CHECK_VALUE<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>(<sp/>pxItem<sp/>)-&gt;xListItemIntegrityValue2<sp/>==<sp/>pdINTEGRITY_CHECK_VALUE<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>listTEST_LIST_INTEGRITY(<sp/>pxList<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configASSERT(<sp/>(<sp/>(<sp/>pxList<sp/>)-&gt;xListIntegrityValue1<sp/>==<sp/>pdINTEGRITY_CHECK_VALUE<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>(<sp/>pxList<sp/>)-&gt;xListIntegrityValue2<sp/>==<sp/>pdINTEGRITY_CHECK_VALUE<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>Definition<sp/>of<sp/>the<sp/>only<sp/>type<sp/>of<sp/>object<sp/>that<sp/>a<sp/>list<sp/>can<sp/>contain.</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx_l_i_s_t" kindref="compound">xLIST</ref>;</highlight></codeline>
<codeline lineno="140" refid="structx_l_i_s_t___i_t_e_m" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx_l_i_s_t___i_t_e_m" kindref="compound">xLIST_ITEM</ref></highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1a3611bd5d5d87cb26ac1dc7a4852b94a0" kindref="member">listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>Set<sp/>to<sp/>a<sp/>known<sp/>value<sp/>if<sp/>configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES<sp/>is<sp/>set<sp/>to<sp/>1.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="structx_l_i_s_t___i_t_e_m_1a9b1f26de79f9da1403ca3ebc7a2e653a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1a2d5de557c5561c8980d1bf51d87d8cba" kindref="member">configLIST_VOLATILE</ref><sp/>TickType_t<sp/><ref refid="structx_l_i_s_t___i_t_e_m_1a9b1f26de79f9da1403ca3ebc7a2e653a" kindref="member">xItemValue</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>The<sp/>value<sp/>being<sp/>listed.<sp/><sp/>In<sp/>most<sp/>cases<sp/>this<sp/>is<sp/>used<sp/>to<sp/>sort<sp/>the<sp/>list<sp/>in<sp/>descending<sp/>order.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="structx_l_i_s_t___i_t_e_m_1a03713c4ee953ef5ca6adbec883720c60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx_l_i_s_t___i_t_e_m" kindref="compound">xLIST_ITEM</ref><sp/>*<sp/><ref refid="list_8h_1a2d5de557c5561c8980d1bf51d87d8cba" kindref="member">configLIST_VOLATILE</ref><sp/><ref refid="structx_l_i_s_t___i_t_e_m_1a03713c4ee953ef5ca6adbec883720c60" kindref="member">pxNext</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>Pointer<sp/>to<sp/>the<sp/>next<sp/>ListItem_t<sp/>in<sp/>the<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="structx_l_i_s_t___i_t_e_m_1ae8e553eae41010a8e41c66d76c94110b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx_l_i_s_t___i_t_e_m" kindref="compound">xLIST_ITEM</ref><sp/>*<sp/><ref refid="list_8h_1a2d5de557c5561c8980d1bf51d87d8cba" kindref="member">configLIST_VOLATILE</ref><sp/><ref refid="structx_l_i_s_t___i_t_e_m_1ae8e553eae41010a8e41c66d76c94110b" kindref="member">pxPrevious</ref>;<sp/></highlight><highlight class="comment">/*&lt;<sp/>Pointer<sp/>to<sp/>the<sp/>previous<sp/>ListItem_t<sp/>in<sp/>the<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="structx_l_i_s_t___i_t_e_m_1aeb3110b50fe0dbce826d929b27b5ddb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structx_l_i_s_t___i_t_e_m_1aeb3110b50fe0dbce826d929b27b5ddb1" kindref="member">pvOwner</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>Pointer<sp/>to<sp/>the<sp/>object<sp/>(normally<sp/>a<sp/>TCB)<sp/>that<sp/>contains<sp/>the<sp/>list<sp/>item.<sp/><sp/>There<sp/>is<sp/>therefore<sp/>a<sp/>two<sp/>way<sp/>link<sp/>between<sp/>the<sp/>object<sp/>containing<sp/>the<sp/>list<sp/>item<sp/>and<sp/>the<sp/>list<sp/>item<sp/>itself.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="structx_l_i_s_t___i_t_e_m_1afb1e27a88f6b064cd0216de08009844a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx_l_i_s_t" kindref="compound">xLIST</ref><sp/>*<sp/><ref refid="list_8h_1a2d5de557c5561c8980d1bf51d87d8cba" kindref="member">configLIST_VOLATILE</ref><sp/><ref refid="structx_l_i_s_t___i_t_e_m_1afb1e27a88f6b064cd0216de08009844a" kindref="member">pxContainer</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>Pointer<sp/>to<sp/>the<sp/>list<sp/>in<sp/>which<sp/>this<sp/>list<sp/>item<sp/>is<sp/>placed<sp/>(if<sp/>any).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1abf45f853974db484cd7df434bd006e98" kindref="member">listSECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>Set<sp/>to<sp/>a<sp/>known<sp/>value<sp/>if<sp/>configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES<sp/>is<sp/>set<sp/>to<sp/>1.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">};</highlight></codeline>
<codeline lineno="150" refid="list_8h_1a1a62d469392f9bfe2443e7efab9c8398" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx_l_i_s_t___i_t_e_m" kindref="compound">xLIST_ITEM</ref><sp/><ref refid="structx_l_i_s_t___i_t_e_m" kindref="compound">ListItem_t</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>some<sp/>reason<sp/>lint<sp/>wants<sp/>this<sp/>as<sp/>two<sp/>separate<sp/>definitions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="structx_m_i_n_i___l_i_s_t___i_t_e_m" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx_m_i_n_i___l_i_s_t___i_t_e_m" kindref="compound">xMINI_LIST_ITEM</ref></highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1a3611bd5d5d87cb26ac1dc7a4852b94a0" kindref="member">listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>Set<sp/>to<sp/>a<sp/>known<sp/>value<sp/>if<sp/>configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES<sp/>is<sp/>set<sp/>to<sp/>1.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="structx_m_i_n_i___l_i_s_t___i_t_e_m_1aae79c54ac1efa30959e68604cc23b29e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1a2d5de557c5561c8980d1bf51d87d8cba" kindref="member">configLIST_VOLATILE</ref><sp/>TickType_t<sp/><ref refid="structx_m_i_n_i___l_i_s_t___i_t_e_m_1aae79c54ac1efa30959e68604cc23b29e" kindref="member">xItemValue</ref>;</highlight></codeline>
<codeline lineno="156" refid="structx_m_i_n_i___l_i_s_t___i_t_e_m_1aa7ae770b0f10daeb9ac76c6f7dd5608e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx_l_i_s_t___i_t_e_m" kindref="compound">xLIST_ITEM</ref><sp/>*<sp/><ref refid="list_8h_1a2d5de557c5561c8980d1bf51d87d8cba" kindref="member">configLIST_VOLATILE</ref><sp/><ref refid="structx_m_i_n_i___l_i_s_t___i_t_e_m_1aa7ae770b0f10daeb9ac76c6f7dd5608e" kindref="member">pxNext</ref>;</highlight></codeline>
<codeline lineno="157" refid="structx_m_i_n_i___l_i_s_t___i_t_e_m_1a732c666bb97560eb1b094a2c411269ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx_l_i_s_t___i_t_e_m" kindref="compound">xLIST_ITEM</ref><sp/>*<sp/><ref refid="list_8h_1a2d5de557c5561c8980d1bf51d87d8cba" kindref="member">configLIST_VOLATILE</ref><sp/><ref refid="structx_m_i_n_i___l_i_s_t___i_t_e_m_1a732c666bb97560eb1b094a2c411269ab" kindref="member">pxPrevious</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">};</highlight></codeline>
<codeline lineno="159" refid="list_8h_1a542a8d55e98bc407593979e61f83cd02" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx_m_i_n_i___l_i_s_t___i_t_e_m" kindref="compound">xMINI_LIST_ITEM</ref><sp/><ref refid="structx_m_i_n_i___l_i_s_t___i_t_e_m" kindref="compound">MiniListItem_t</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/>Definition<sp/>of<sp/>the<sp/>type<sp/>of<sp/>queue<sp/>used<sp/>by<sp/>the<sp/>scheduler.</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="structx_l_i_s_t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx_l_i_s_t" kindref="compound">xLIST</ref></highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1a3a52b5a4f70d3a07e37a5814a23ba880" kindref="member">listFIRST_LIST_INTEGRITY_CHECK_VALUE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>Set<sp/>to<sp/>a<sp/>known<sp/>value<sp/>if<sp/>configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES<sp/>is<sp/>set<sp/>to<sp/>1.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="structx_l_i_s_t_1aa280e17bf4e71f81c449c2444cb70378" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>UBaseType_t<sp/><ref refid="structx_l_i_s_t_1aa280e17bf4e71f81c449c2444cb70378" kindref="member">uxNumberOfItems</ref>;</highlight></codeline>
<codeline lineno="168" refid="structx_l_i_s_t_1a7bf64d87701493b4c8c5c977682500d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structx_l_i_s_t___i_t_e_m" kindref="compound">ListItem_t</ref><sp/>*<sp/><ref refid="list_8h_1a2d5de557c5561c8980d1bf51d87d8cba" kindref="member">configLIST_VOLATILE</ref><sp/><ref refid="structx_l_i_s_t_1a7bf64d87701493b4c8c5c977682500d7" kindref="member">pxIndex</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>Used<sp/>to<sp/>walk<sp/>through<sp/>the<sp/>list.<sp/><sp/>Points<sp/>to<sp/>the<sp/>last<sp/>item<sp/>returned<sp/>by<sp/>a<sp/>call<sp/>to<sp/>listGET_OWNER_OF_NEXT_ENTRY<sp/>().<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="structx_l_i_s_t_1a49ad62fa153126e27e273811167b336a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structx_m_i_n_i___l_i_s_t___i_t_e_m" kindref="compound">MiniListItem_t</ref><sp/><ref refid="structx_l_i_s_t_1a49ad62fa153126e27e273811167b336a" kindref="member">xListEnd</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>List<sp/>item<sp/>that<sp/>contains<sp/>the<sp/>maximum<sp/>possible<sp/>item<sp/>value<sp/>meaning<sp/>it<sp/>is<sp/>always<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>list<sp/>and<sp/>is<sp/>therefore<sp/>used<sp/>as<sp/>a<sp/>marker.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1a87dc70c22e3ff0eba560d6f357472634" kindref="member">listSECOND_LIST_INTEGRITY_CHECK_VALUE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>Set<sp/>to<sp/>a<sp/>known<sp/>value<sp/>if<sp/>configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES<sp/>is<sp/>set<sp/>to<sp/>1.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">}<sp/><ref refid="list_8h_1afd590ef6400071b4d63d65ef90bea7f4" kindref="member">List_t</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>Access<sp/>macro<sp/>to<sp/>set<sp/>the<sp/>owner<sp/>of<sp/>a<sp/>list<sp/>item.<sp/><sp/>The<sp/>owner<sp/>of<sp/>a<sp/>list<sp/>item</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/>is<sp/>the<sp/>object<sp/>(usually<sp/>a<sp/>TCB)<sp/>that<sp/>contains<sp/>the<sp/>list<sp/>item.</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/>\page<sp/>listSET_LIST_ITEM_OWNER<sp/>listSET_LIST_ITEM_OWNER</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*<sp/>\ingroup<sp/>LinkedList</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="list_8h_1acc01a08e534b54fe438847ef02e5060a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>listSET_LIST_ITEM_OWNER(<sp/>pxListItem,<sp/>pxOwner<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(<sp/>pxListItem<sp/>)-&gt;pvOwner<sp/>=<sp/>(<sp/>void<sp/>*<sp/>)<sp/>(<sp/>pxOwner<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/>Access<sp/>macro<sp/>to<sp/>get<sp/>the<sp/>owner<sp/>of<sp/>a<sp/>list<sp/>item.<sp/><sp/>The<sp/>owner<sp/>of<sp/>a<sp/>list<sp/>item</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>is<sp/>the<sp/>object<sp/>(usually<sp/>a<sp/>TCB)<sp/>that<sp/>contains<sp/>the<sp/>list<sp/>item.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*<sp/>\page<sp/>listGET_LIST_ITEM_OWNER<sp/>listSET_LIST_ITEM_OWNER</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/>\ingroup<sp/>LinkedList</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="list_8h_1aa9469bd061a44b4f75d30c6175f66d5c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>listGET_LIST_ITEM_OWNER(<sp/>pxListItem<sp/>)<sp/><sp/><sp/>(<sp/>(<sp/>pxListItem<sp/>)-&gt;pvOwner<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*<sp/>Access<sp/>macro<sp/>to<sp/>set<sp/>the<sp/>value<sp/>of<sp/>the<sp/>list<sp/>item.<sp/><sp/>In<sp/>most<sp/>cases<sp/>the<sp/>value<sp/>is</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/>used<sp/>to<sp/>sort<sp/>the<sp/>list<sp/>in<sp/>descending<sp/>order.</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*<sp/>\page<sp/>listSET_LIST_ITEM_VALUE<sp/>listSET_LIST_ITEM_VALUE</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/>\ingroup<sp/>LinkedList</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="list_8h_1a83e95e61652f032fdc26aa622f5e2610" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>listSET_LIST_ITEM_VALUE(<sp/>pxListItem,<sp/>xValue<sp/>)<sp/><sp/><sp/>(<sp/>(<sp/>pxListItem<sp/>)-&gt;xItemValue<sp/>=<sp/>(<sp/>xValue<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/>Access<sp/>macro<sp/>to<sp/>retrieve<sp/>the<sp/>value<sp/>of<sp/>the<sp/>list<sp/>item.<sp/><sp/>The<sp/>value<sp/>can</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/>represent<sp/>anything<sp/>-<sp/>for<sp/>example<sp/>the<sp/>priority<sp/>of<sp/>a<sp/>task,<sp/>or<sp/>the<sp/>time<sp/>at</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/>which<sp/>a<sp/>task<sp/>should<sp/>be<sp/>unblocked.</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>\page<sp/>listGET_LIST_ITEM_VALUE<sp/>listGET_LIST_ITEM_VALUE</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>\ingroup<sp/>LinkedList</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="list_8h_1aa50d09950abc602741d7ebe8387f4e1a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>listGET_LIST_ITEM_VALUE(<sp/>pxListItem<sp/>)<sp/><sp/><sp/>(<sp/>(<sp/>pxListItem<sp/>)-&gt;xItemValue<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>Access<sp/>macro<sp/>to<sp/>retrieve<sp/>the<sp/>value<sp/>of<sp/>the<sp/>list<sp/>item<sp/>at<sp/>the<sp/>head<sp/>of<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/>list.</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>\page<sp/>listGET_LIST_ITEM_VALUE<sp/>listGET_LIST_ITEM_VALUE</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/>\ingroup<sp/>LinkedList</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="list_8h_1a63742b27958b959ac9ab69d8e9aed241" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>listGET_ITEM_VALUE_OF_HEAD_ENTRY(<sp/>pxList<sp/>)<sp/><sp/>(<sp/>(<sp/>(<sp/>pxList<sp/>)-&gt;xListEnd<sp/>).pxNext-&gt;xItemValue<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/>Return<sp/>the<sp/>list<sp/>item<sp/>at<sp/>the<sp/>head<sp/>of<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*<sp/>\page<sp/>listGET_HEAD_ENTRY<sp/>listGET_HEAD_ENTRY</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>\ingroup<sp/>LinkedList</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="list_8h_1a987cb2766e509022c23b654907cea199" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>listGET_HEAD_ENTRY(<sp/>pxList<sp/>)<sp/><sp/><sp/><sp/>(<sp/>(<sp/>(<sp/>pxList<sp/>)-&gt;xListEnd<sp/>).pxNext<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>Return<sp/>the<sp/>next<sp/>list<sp/>item.</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*<sp/>\page<sp/>listGET_NEXT<sp/>listGET_NEXT</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*<sp/>\ingroup<sp/>LinkedList</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="list_8h_1aabf78d3f24ba56ac1d0bf0179438b960" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>listGET_NEXT(<sp/>pxListItem<sp/>)<sp/><sp/>(<sp/>(<sp/>pxListItem<sp/>)-&gt;pxNext<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*<sp/>Return<sp/>the<sp/>list<sp/>item<sp/>that<sp/>marks<sp/>the<sp/>end<sp/>of<sp/>the<sp/>list</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/>\page<sp/>listGET_END_MARKER<sp/>listGET_END_MARKER</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>\ingroup<sp/>LinkedList</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="list_8h_1a96cb0919f02e5c0d8e41ded0e65197a3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>listGET_END_MARKER(<sp/>pxList<sp/>)<sp/><sp/><sp/><sp/>(<sp/>(<sp/>ListItem_t<sp/>const<sp/>*<sp/>)<sp/>(<sp/>&amp;(<sp/>(<sp/>pxList<sp/>)-&gt;xListEnd<sp/>)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/>Access<sp/>macro<sp/>to<sp/>determine<sp/>if<sp/>a<sp/>list<sp/>contains<sp/>any<sp/>items.<sp/><sp/>The<sp/>macro<sp/>will</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*<sp/>only<sp/>have<sp/>the<sp/>value<sp/>true<sp/>if<sp/>the<sp/>list<sp/>is<sp/>empty.</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*<sp/>\page<sp/>listLIST_IS_EMPTY<sp/>listLIST_IS_EMPTY</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*<sp/>\ingroup<sp/>LinkedList</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="list_8h_1aaba6eb05d67ebc8026bea29193eca28f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>listLIST_IS_EMPTY(<sp/>pxList<sp/>)<sp/>(<sp/>(<sp/>(<sp/>pxList<sp/>)-&gt;uxNumberOfItems<sp/>==<sp/>(<sp/>UBaseType_t<sp/>)<sp/>0<sp/>)<sp/>?<sp/>pdTRUE<sp/>:<sp/>pdFALSE<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*<sp/>Access<sp/>macro<sp/>to<sp/>return<sp/>the<sp/>number<sp/>of<sp/>items<sp/>in<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="list_8h_1a18b4aded515bdc512017ea6e677a13bb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>listCURRENT_LIST_LENGTH(<sp/>pxList<sp/>)<sp/><sp/><sp/>(<sp/>(<sp/>pxList<sp/>)-&gt;uxNumberOfItems<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*<sp/>Access<sp/>function<sp/>to<sp/>obtain<sp/>the<sp/>owner<sp/>of<sp/>the<sp/>next<sp/>entry<sp/>in<sp/>a<sp/>list.</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*<sp/>The<sp/>list<sp/>member<sp/>pxIndex<sp/>is<sp/>used<sp/>to<sp/>walk<sp/>through<sp/>a<sp/>list.<sp/><sp/>Calling</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*<sp/>listGET_OWNER_OF_NEXT_ENTRY<sp/>increments<sp/>pxIndex<sp/>to<sp/>the<sp/>next<sp/>item<sp/>in<sp/>the<sp/>list</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*<sp/>and<sp/>returns<sp/>that<sp/>entry&apos;s<sp/>pxOwner<sp/>parameter.<sp/><sp/>Using<sp/>multiple<sp/>calls<sp/>to<sp/>this</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>function<sp/>it<sp/>is<sp/>therefore<sp/>possible<sp/>to<sp/>move<sp/>through<sp/>every<sp/>item<sp/>contained<sp/>in</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/>a<sp/>list.</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*<sp/>The<sp/>pxOwner<sp/>parameter<sp/>of<sp/>a<sp/>list<sp/>item<sp/>is<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>object<sp/>that<sp/>owns</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/>the<sp/>list<sp/>item.<sp/><sp/>In<sp/>the<sp/>scheduler<sp/>this<sp/>is<sp/>normally<sp/>a<sp/>task<sp/>control<sp/>block.</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/>The<sp/>pxOwner<sp/>parameter<sp/>effectively<sp/>creates<sp/>a<sp/>two<sp/>way<sp/>link<sp/>between<sp/>the<sp/>list</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/>item<sp/>and<sp/>its<sp/>owner.</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>@param<sp/>pxTCB<sp/>pxTCB<sp/>is<sp/>set<sp/>to<sp/>the<sp/>address<sp/>of<sp/>the<sp/>owner<sp/>of<sp/>the<sp/>next<sp/>list<sp/>item.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/>@param<sp/>pxList<sp/>The<sp/>list<sp/>from<sp/>which<sp/>the<sp/>next<sp/>item<sp/>owner<sp/>is<sp/>to<sp/>be<sp/>returned.</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*<sp/>\page<sp/>listGET_OWNER_OF_NEXT_ENTRY<sp/>listGET_OWNER_OF_NEXT_ENTRY</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*<sp/>\ingroup<sp/>LinkedList</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="list_8h_1a275d9855e9b71652e2b8f6e2ed62aadd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>listGET_OWNER_OF_NEXT_ENTRY(<sp/>pxTCB,<sp/>pxList<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="278"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="279"><highlight class="preprocessor">List_t<sp/>*<sp/>const<sp/>pxConstList<sp/>=<sp/>(<sp/>pxList<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="280"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Increment<sp/>the<sp/>index<sp/>to<sp/>the<sp/>next<sp/>item<sp/>and<sp/>return<sp/>the<sp/>item,<sp/>ensuring<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>don&apos;t<sp/>return<sp/>the<sp/>marker<sp/>used<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>list.<sp/><sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(<sp/>pxConstList<sp/>)-&gt;pxIndex<sp/>=<sp/>(<sp/>pxConstList<sp/>)-&gt;pxIndex-&gt;pxNext;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="283"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if(<sp/>(<sp/>void<sp/>*<sp/>)<sp/>(<sp/>pxConstList<sp/>)-&gt;pxIndex<sp/>==<sp/>(<sp/>void<sp/>*<sp/>)<sp/>&amp;(<sp/>(<sp/>pxConstList<sp/>)-&gt;xListEnd<sp/>)<sp/>)<sp/><sp/>\</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="285"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>pxConstList<sp/>)-&gt;pxIndex<sp/>=<sp/>(<sp/>pxConstList<sp/>)-&gt;pxIndex-&gt;pxNext;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(<sp/>pxTCB<sp/>)<sp/>=<sp/>(<sp/>pxConstList<sp/>)-&gt;pxIndex-&gt;pvOwner;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/>Access<sp/>function<sp/>to<sp/>obtain<sp/>the<sp/>owner<sp/>of<sp/>the<sp/>first<sp/>entry<sp/>in<sp/>a<sp/>list.<sp/><sp/>Lists</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*<sp/>are<sp/>normally<sp/>sorted<sp/>in<sp/>ascending<sp/>item<sp/>value<sp/>order.</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>returns<sp/>the<sp/>pxOwner<sp/>member<sp/>of<sp/>the<sp/>first<sp/>item<sp/>in<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*<sp/>The<sp/>pxOwner<sp/>parameter<sp/>of<sp/>a<sp/>list<sp/>item<sp/>is<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>object<sp/>that<sp/>owns</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*<sp/>the<sp/>list<sp/>item.<sp/><sp/>In<sp/>the<sp/>scheduler<sp/>this<sp/>is<sp/>normally<sp/>a<sp/>task<sp/>control<sp/>block.</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>*<sp/>The<sp/>pxOwner<sp/>parameter<sp/>effectively<sp/>creates<sp/>a<sp/>two<sp/>way<sp/>link<sp/>between<sp/>the<sp/>list</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*<sp/>item<sp/>and<sp/>its<sp/>owner.</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/>@param<sp/>pxList<sp/>The<sp/>list<sp/>from<sp/>which<sp/>the<sp/>owner<sp/>of<sp/>the<sp/>head<sp/>item<sp/>is<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*<sp/>returned.</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*<sp/>\page<sp/>listGET_OWNER_OF_HEAD_ENTRY<sp/>listGET_OWNER_OF_HEAD_ENTRY</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*<sp/>\ingroup<sp/>LinkedList</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="list_8h_1a715561302af8cb5b74416b23ce4e999d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>listGET_OWNER_OF_HEAD_ENTRY(<sp/>pxList<sp/>)<sp/><sp/>(<sp/>(&amp;(<sp/>(<sp/>pxList<sp/>)-&gt;xListEnd<sp/>))-&gt;pxNext-&gt;pvOwner<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>a<sp/>list<sp/>item<sp/>is<sp/>within<sp/>a<sp/>list.<sp/><sp/>The<sp/>list<sp/>item<sp/>maintains<sp/>a</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*<sp/>&quot;container&quot;<sp/>pointer<sp/>that<sp/>points<sp/>to<sp/>the<sp/>list<sp/>it<sp/>is<sp/>in.<sp/><sp/>All<sp/>this<sp/>macro<sp/>does</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*<sp/>is<sp/>check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>container<sp/>and<sp/>the<sp/>list<sp/>match.</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*<sp/>@param<sp/>pxList<sp/>The<sp/>list<sp/>we<sp/>want<sp/>to<sp/>know<sp/>if<sp/>the<sp/>list<sp/>item<sp/>is<sp/>within.</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/>@param<sp/>pxListItem<sp/>The<sp/>list<sp/>item<sp/>we<sp/>want<sp/>to<sp/>know<sp/>if<sp/>is<sp/>in<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*<sp/>@return<sp/>pdTRUE<sp/>if<sp/>the<sp/>list<sp/>item<sp/>is<sp/>in<sp/>the<sp/>list,<sp/>otherwise<sp/>pdFALSE.</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="list_8h_1a60302b468d21f8c53d13987372acb8fa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>listIS_CONTAINED_WITHIN(<sp/>pxList,<sp/>pxListItem<sp/>)<sp/>(<sp/>(<sp/>(<sp/>pxListItem<sp/>)-&gt;pxContainer<sp/>==<sp/>(<sp/>pxList<sp/>)<sp/>)<sp/>?<sp/>(<sp/>pdTRUE<sp/>)<sp/>:<sp/>(<sp/>pdFALSE<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*<sp/>Return<sp/>the<sp/>list<sp/>a<sp/>list<sp/>item<sp/>is<sp/>contained<sp/>within<sp/>(referenced<sp/>from).</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*<sp/>@param<sp/>pxListItem<sp/>The<sp/>list<sp/>item<sp/>being<sp/>queried.</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*<sp/>@return<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>List_t<sp/>object<sp/>that<sp/>references<sp/>the<sp/>pxListItem</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="list_8h_1a7c4dff11380cd843ed0b6a8dc065916b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>listLIST_ITEM_CONTAINER(<sp/>pxListItem<sp/>)<sp/>(<sp/>(<sp/>pxListItem<sp/>)-&gt;pxContainer<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*<sp/>This<sp/>provides<sp/>a<sp/>crude<sp/>means<sp/>of<sp/>knowing<sp/>if<sp/>a<sp/>list<sp/>has<sp/>been<sp/>initialised,<sp/>as</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*<sp/>pxList-&gt;xListEnd.xItemValue<sp/>is<sp/>set<sp/>to<sp/>portMAX_DELAY<sp/>by<sp/>the<sp/>vListInitialise()</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*<sp/>function.</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="list_8h_1a7e17f81438dd0bd705714267a611ff28" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>listLIST_IS_INITIALISED(<sp/>pxList<sp/>)<sp/>(<sp/>(<sp/>pxList<sp/>)-&gt;xListEnd.xItemValue<sp/>==<sp/>portMAX_DELAY<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/>*<sp/>Must<sp/>be<sp/>called<sp/>before<sp/>a<sp/>list<sp/>is<sp/>used!<sp/><sp/>This<sp/>initialises<sp/>all<sp/>the<sp/>members</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>list<sp/>structure<sp/>and<sp/>inserts<sp/>the<sp/>xListEnd<sp/>item<sp/>into<sp/>the<sp/>list<sp/>as<sp/>a</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*<sp/>marker<sp/>to<sp/>the<sp/>back<sp/>of<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*<sp/>@param<sp/>pxList<sp/>Pointer<sp/>to<sp/>the<sp/>list<sp/>being<sp/>initialised.</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*<sp/>\page<sp/>vListInitialise<sp/>vListInitialise</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*<sp/>\ingroup<sp/>LinkedList</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="list_8h_1adeef7734d7d6d9a3eea642a70c106919" kindref="member">vListInitialise</ref>(<sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxList<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/>*<sp/>Must<sp/>be<sp/>called<sp/>before<sp/>a<sp/>list<sp/>item<sp/>is<sp/>used.<sp/><sp/>This<sp/>sets<sp/>the<sp/>list<sp/>container<sp/>to</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*<sp/>null<sp/>so<sp/>the<sp/>item<sp/>does<sp/>not<sp/>think<sp/>that<sp/>it<sp/>is<sp/>already<sp/>contained<sp/>in<sp/>a<sp/>list.</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*<sp/>@param<sp/>pxItem<sp/>Pointer<sp/>to<sp/>the<sp/>list<sp/>item<sp/>being<sp/>initialised.</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>*<sp/>\page<sp/>vListInitialiseItem<sp/>vListInitialiseItem</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/>*<sp/>\ingroup<sp/>LinkedList</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="list_8h_1ab91611baae53be209a05d211f55f5395" kindref="member">vListInitialiseItem</ref>(<sp/><ref refid="structx_l_i_s_t___i_t_e_m" kindref="compound">ListItem_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxItem<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*<sp/>Insert<sp/>a<sp/>list<sp/>item<sp/>into<sp/>a<sp/>list.<sp/><sp/>The<sp/>item<sp/>will<sp/>be<sp/>inserted<sp/>into<sp/>the<sp/>list<sp/>in</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>*<sp/>a<sp/>position<sp/>determined<sp/>by<sp/>its<sp/>item<sp/>value<sp/>(descending<sp/>item<sp/>value<sp/>order).</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>*<sp/>@param<sp/>pxList<sp/>The<sp/>list<sp/>into<sp/>which<sp/>the<sp/>item<sp/>is<sp/>to<sp/>be<sp/>inserted.</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*<sp/>@param<sp/>pxNewListItem<sp/>The<sp/>item<sp/>that<sp/>is<sp/>to<sp/>be<sp/>placed<sp/>in<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*<sp/>\page<sp/>vListInsert<sp/>vListInsert</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*<sp/>\ingroup<sp/>LinkedList</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="list_8h_1aa129290da5cbda47dffb7bf877b2f02a" kindref="member">vListInsert</ref>(<sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxList,<sp/><ref refid="structx_l_i_s_t___i_t_e_m" kindref="compound">ListItem_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxNewListItem<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*<sp/>Insert<sp/>a<sp/>list<sp/>item<sp/>into<sp/>a<sp/>list.<sp/><sp/>The<sp/>item<sp/>will<sp/>be<sp/>inserted<sp/>in<sp/>a<sp/>position</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*<sp/>such<sp/>that<sp/>it<sp/>will<sp/>be<sp/>the<sp/>last<sp/>item<sp/>within<sp/>the<sp/>list<sp/>returned<sp/>by<sp/>multiple</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*<sp/>calls<sp/>to<sp/>listGET_OWNER_OF_NEXT_ENTRY.</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*<sp/>The<sp/>list<sp/>member<sp/>pxIndex<sp/>is<sp/>used<sp/>to<sp/>walk<sp/>through<sp/>a<sp/>list.<sp/><sp/>Calling</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*<sp/>listGET_OWNER_OF_NEXT_ENTRY<sp/>increments<sp/>pxIndex<sp/>to<sp/>the<sp/>next<sp/>item<sp/>in<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*<sp/>Placing<sp/>an<sp/>item<sp/>in<sp/>a<sp/>list<sp/>using<sp/>vListInsertEnd<sp/>effectively<sp/>places<sp/>the<sp/>item</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>list<sp/>position<sp/>pointed<sp/>to<sp/>by<sp/>pxIndex.<sp/><sp/>This<sp/>means<sp/>that<sp/>every<sp/>other</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*<sp/>item<sp/>within<sp/>the<sp/>list<sp/>will<sp/>be<sp/>returned<sp/>by<sp/>listGET_OWNER_OF_NEXT_ENTRY<sp/>before</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*<sp/>the<sp/>pxIndex<sp/>parameter<sp/>again<sp/>points<sp/>to<sp/>the<sp/>item<sp/>being<sp/>inserted.</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*<sp/>@param<sp/>pxList<sp/>The<sp/>list<sp/>into<sp/>which<sp/>the<sp/>item<sp/>is<sp/>to<sp/>be<sp/>inserted.</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*<sp/>@param<sp/>pxNewListItem<sp/>The<sp/>list<sp/>item<sp/>to<sp/>be<sp/>inserted<sp/>into<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/>*<sp/>\page<sp/>vListInsertEnd<sp/>vListInsertEnd</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*<sp/>\ingroup<sp/>LinkedList</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="list_8h_1a71a6a6099b3cbd8f90539aabe5c9e572" kindref="member">vListInsertEnd</ref>(<sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxList,<sp/><ref refid="structx_l_i_s_t___i_t_e_m" kindref="compound">ListItem_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxNewListItem<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*<sp/>Remove<sp/>an<sp/>item<sp/>from<sp/>a<sp/>list.<sp/><sp/>The<sp/>list<sp/>item<sp/>has<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>list<sp/>that</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>*<sp/>it<sp/>is<sp/>in,<sp/>so<sp/>only<sp/>the<sp/>list<sp/>item<sp/>need<sp/>be<sp/>passed<sp/>into<sp/>the<sp/>function.</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*<sp/>@param<sp/>uxListRemove<sp/>The<sp/>item<sp/>to<sp/>be<sp/>removed.<sp/><sp/>The<sp/>item<sp/>will<sp/>remove<sp/>itself<sp/>from</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*<sp/>the<sp/>list<sp/>pointed<sp/>to<sp/>by<sp/>it&apos;s<sp/>pxContainer<sp/>parameter.</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>number<sp/>of<sp/>items<sp/>that<sp/>remain<sp/>in<sp/>the<sp/>list<sp/>after<sp/>the<sp/>list<sp/>item<sp/>has</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>*<sp/>been<sp/>removed.</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*<sp/>\page<sp/>uxListRemove<sp/>uxListRemove</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/>*<sp/>\ingroup<sp/>LinkedList</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal">UBaseType_t<sp/><ref refid="list_8h_1a2eb1558482076fff8cafc63419c2d34a" kindref="member">uxListRemove</ref>(<sp/><ref refid="structx_l_i_s_t___i_t_e_m" kindref="compound">ListItem_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxItemToRemove<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Middlewares/Third_Party/FreeRTOS/Source/include/list.h"/>
  </compounddef>
</doxygen>
