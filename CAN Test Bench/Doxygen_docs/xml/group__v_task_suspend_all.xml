<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="group__v_task_suspend_all" kind="group">
    <compoundname>vTaskSuspendAll</compoundname>
    <title>vTaskSuspendAll</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>task. h <preformatted>void <ref refid="task_8h_1a366b302eba79d10b5ee2a3756f0fcc43" kindref="member">vTaskSuspendAll( void )</ref>;</preformatted></para>
<para>Suspends the scheduler without disabling interrupts. Context switches will not occur while the scheduler is suspended.</para>
<para>After calling vTaskSuspendAll () the calling task will continue to execute without risk of being swapped out until a call to xTaskResumeAll () has been made.</para>
<para>API functions that have the potential to cause a context switch (for example, <ref refid="task_8h_1a067da3e949e248096ec6c01f9cb75a47" kindref="member">vTaskDelayUntil()</ref>, <ref refid="queue_8h_1af7eb49d3249351176992950d9185abe9" kindref="member">xQueueSend()</ref>, etc.) must not be called while the scheduler is suspended.</para>
<para>Example usage: <preformatted>
void vTask1( void * pvParameters )
{
    for( ;; )
    {
     // Task code goes here.</preformatted></para>
<para><preformatted>     // ...</preformatted></para>
<para><preformatted>     // At some point the task wants to perform a long operation during
     // which it does not want to get swapped out.  It cannot use
     // taskENTER_CRITICAL ()/taskEXIT_CRITICAL () as the length of the
     // operation may cause interrupts to be missed - including the
     // ticks.</preformatted></para>
<para><preformatted>     // Prevent the real time kernel swapping out the task.
     vTaskSuspendAll ();</preformatted></para>
<para><preformatted>     // Perform the operation here.  There is no need to use critical
     // sections as we have all the microcontroller processing time.
     // During this time interrupts will still operate and the kernel
     // tick count will be maintained.</preformatted></para>
<para><preformatted>     // ...</preformatted></para>
<para><preformatted>     // The operation is complete.  Restart the kernel.
     xTaskResumeAll ();
    }
}
  </preformatted> </para>
    </detaileddescription>
  </compounddef>
</doxygen>
