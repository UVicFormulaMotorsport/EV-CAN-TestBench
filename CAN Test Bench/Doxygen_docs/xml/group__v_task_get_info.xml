<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="group__v_task_get_info" kind="group">
    <compoundname>vTaskGetInfo</compoundname>
    <title>vTaskGetInfo</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>task. h <preformatted>void <ref refid="task_8h_1ac08c26d037d0dc685740eec9b2028715" kindref="member">vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, eTaskState eState )</ref>;</preformatted></para>
<para>configUSE_TRACE_FACILITY must be defined as 1 for this function to be available. See the configuration section for more information.</para>
<para>Populates a TaskStatus_t structure with information about a task.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xTask</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle of the task being queried. If xTask is NULL then information will be returned about the calling task.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pxTaskStatus</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the TaskStatus_t structure that will be filled with information about the task referenced by the handle passed using the xTask parameter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@xGetFreeStackSpace The TaskStatus_t structure contains a member to report the stack high water mark of the task being queried. Calculating the stack high water mark takes a relatively long time, and can make the system temporarily unresponsive - so the xGetFreeStackSpace parameter is provided to allow the high water mark checking to be skipped. The high watermark value will only be written to the TaskStatus_t structure if xGetFreeStackSpace is not set to pdFALSE;</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eState</parametername>
</parameternamelist>
<parameterdescription>
<para>The TaskStatus_t structure contains a member to report the state of the task being queried. Obtaining the task state is not as fast as a simple assignment - so the eState parameter is provided to allow the state information to be omitted from the TaskStatus_t structure. To obtain state information then set eState to eInvalid - otherwise the value passed in eState will be reported as the task state in the TaskStatus_t structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Example usage: <preformatted>
void vAFunction( void )
{
TaskHandle_t xHandle;
TaskStatus_t xTaskDetails;</preformatted></para>
<para><preformatted>   // Obtain the handle of a task from its name.
   xHandle = xTaskGetHandle( &quot;Task_Name&quot; );</preformatted></para>
<para><preformatted>   // Check the handle is not NULL.
   <ref refid="_free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT( xHandle )</ref>;</preformatted></para>
<para><preformatted>   // Use the handle to obtain further information about the task.
   vTaskGetInfo( xHandle,
                 &amp;xTaskDetails,
                 pdTRUE, // Include the high water mark in xTaskDetails.
                 eInvalid ); // Include the task state in xTaskDetails.
}
  </preformatted> </para>
    </detaileddescription>
  </compounddef>
</doxygen>
